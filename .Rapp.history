ii=1
j=1
k=1
l=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
trans_data$stages
expand.grid(trans_data$stages,trans_data$stages)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)
i
j
k
l
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
!(is.null(analysis.results))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
sensitivities
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.dat) <- x
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- expand.grid(trans_data$stages,trans_data$stages)#
						paste("sensitivies.", x$Var1,"-",x$Var2,sep="")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sens.dat <- rep("NA", length(y)) %>%#
							t %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
sens.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
colnames(sens.dat) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
sens.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elas.dat <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elas.dat) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
elasticities
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
sensitivities
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
stable.stage.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
stable.stage.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
all_proj_matrix
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results <- eigen.analysis(all_proj_matrix)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))	#
	for (i in 1:length(SeedBankSize)) {#
		A[[i]] <- vector("list", length(SeedsPerFruit))	#
		for (j in 1:length(SeedsPerFruit)) {#
			A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])#
		}#
		A[[i]] <- do.call(rbind.data.frame, A[[i]])#
	}#
	A <- do.call(rbind.data.frame, A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))	#
	for (i in 1:length(SeedBankSize)) {#
		A[[i]] <- vector("list", length(SeedsPerFruit))	#
		for (j in 1:length(SeedsPerFruit)) {#
			A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						}#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])#
		}#
		A[[i]] <- do.call(rbind.data.frame, A[[i]])#
	}#
	A <- do.call(rbind.data.frame, A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))	#
	for (i in 1:length(SeedBankSize)) {#
		A[[i]] <- vector("list", length(SeedsPerFruit))	#
		for (j in 1:length(SeedsPerFruit)) {#
			A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])#
		}#
		A[[i]] <- do.call(rbind.data.frame, A[[i]])#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/population_modeling_files')
source("processing/prep_ldf_cldf.R")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/population_modeling_files/2013_2014/LTRE/bootstrapping')
# ALL PLANT DATA: add new columns, filter out mothpresence = 1#
ldf %<>%#
	map(#
		~ mutate(#
			., #
			allYears 	= TransitionYear, #
			Year 		= FecundityYear#
		)#
	) %>%#
	map(#
		~ filter(#
			.,#
			Island == "7"#
		)#
	)#
# CLONE DATA: add plant info, filter out mothpresence = 1#
cldf %<>%#
	map(#
		~ merge(#
			., #
			Plant.Info.Analysis, #
			by.x="Parent.ID",#
			by.y="PlantID"#
		)#
	) %>%#
	map(#
		~ filter(#
			.,#
			Island == "7"#
		)#
	)#
#
if (length(ldf) != length(cldf)) {#
	stop(paste("ldf and cldf are of different lengths"))#
}#
# ---------------------------------------------------------------------------- ##
SizeClass <- SizeClass.4#
#
SizeClass <- SizeClass.4#
SeedBankSize = 1000#
SeedSurvival = 0.5
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))	#
	for (i in 1:length(SeedBankSize)) {#
		A[[i]] <- vector("list", length(SeedsPerFruit))	#
		for (j in 1:length(SeedsPerFruit)) {#
			A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])#
		}#
		A[[i]] <- do.call(rbind.data.frame, A[[i]])#
	}
i
j
k
l
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
do.call(rbind.data.frame, A[[i]][[j]][[k]])
do.call(rbind.fill, A[[i]][[j]][[k]])
do.call(rbind.fill, A[[i]][[j]][[k]]) %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
!(is.null(analysis.results))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
X <- do.call(rbind.fill, A[[i]][[j]][[k]])
head(X)
X %>% filter(lambda1 == "NA")
X %>% filter(is.na(lambda1))
X %>% filter(is.na(elasticities.3.3))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
analysis.results
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
stable.stage.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
colnames(repro.value.dat) <- x
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
repro.value.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
stable.stage.dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))	#
	for (i in 1:length(SeedBankSize)) {#
		A[[i]] <- vector("list", length(SeedsPerFruit))	#
		for (j in 1:length(SeedsPerFruit)) {#
			A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])#
		}#
		A[[i]] <- do.call(rbind.data.frame, A[[i]])#
	}#
	A <- do.call(rbind.data.frame, A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
str(A)
i
j
k
l
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
X <- do.call(rbind.fill, A[[i]][[j]][[k]])
str(A[[i]][[j]][[k]])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					} else {#
						# repro values#
						x <- paste(#
							"repro.value.", #
							trans_data$stages, #
							sep=""#
						)#
						repro.value.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(repro.value.dat) <- x#
						# stable stages#
						x <- paste(#
							"stable.stage.", #
							trans_data$stages, #
							sep=""#
						)#
						stable.stage.dat <- rep("NA", length(x)) %>%#
							t %>% as.data.frame#
						colnames(stable.stage.dat) <- x#
						# sensitivities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("sensitivies.", x$Var1,"-",x$Var2,sep="")#
						sensitivities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(sensitivities) <- y#
						# elasticities#
						x <- expand.grid(trans_data$stages,trans_data$stages)#
						y <- paste("elasticities.", x$Var1,"-",x$Var2,sep="")#
						elasticities <- rep("NA", length(y)) %>%#
							t %>% as.data.frame#
						colnames(elasticities) <- y						#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= NA,#
							damping.ratio 	= NA,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])
i
j
k
l
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
str(A[[i]][[j]][[k]])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][[1:1000]])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][[1]])
X
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][[1:3]])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][[2]])
X
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][1:3])
X
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][1:1000])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][1:500])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][1:100])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][101:200])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][201:300])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][301:400])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][301:350])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][301:320])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][301:310])
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][301:305])
rbind.data.frame, A[[i]][[j]][[k]][[301]]
A[[i]][[j]][[k]][[301]]
A[[i]][[j]][[k]][[302]]
A[[i]][[j]][[k]][[303]]
A[[i]][[j]][[k]][[304]]
X <- do.call(rbind.data.frame, A[[i]][[j]][[k]][304:305])
A[[i]][[j]][[k]][[303]]
A[[i]][[j]][[k]][[304]]
A[[i]][[j]][[k]][[303]]
A[[i]][[j]][[k]][[304]]
?set.seed
i
set.seed(i)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))	#
			for (k in 1:length(SeedSurvival)) {#
				for (l in 1:n_bootstraps) {#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					set.seed(l)#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					set.seed(l)#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l#
						)		#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])#
			}#
			A[[i]][[j]] <- do.call(rbind.data.frame, A[[i]][[j]])
A[[i]][[j]][[k]]
A[[i]][[j]]
A[[i]][[j]] %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
i
j
k
l
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
seeds <- runif(simulations)#
				for (l in 1:n_bootstraps) {#
					temp_seed <- seeds[k]*100000#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					set.seed(temp_seed)#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					set.seed(temp_seed)#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l,#
							seed			= temp_seed#
						)		#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
seeds <- runif(n_bootstraps)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
for (l in 1:n_bootstraps) {#
					temp_seed <- seeds[k]*100000#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					set.seed(temp_seed)#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					set.seed(temp_seed)#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l,#
							seed			= temp_seed#
						)		#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
head(A[[i]][[j]][[k]] )
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- vector("list", length(SeedBankSize))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]] <- vector("list", length(SeedsPerFruit))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A[[i]][[j]] <- vector("list", length(SeedSurvival))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
seeds <- runif(n_bootstraps)#
				for (l in 1:n_bootstraps) {#
					temp_seed <- seeds[l]*100000#
					analysis.results <- NULL#
					# -------------------------------------------------------- ##
					# Create growth/retrogression/survival/fecundity transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap ldf#
					set.seed(temp_seed)#
					x <- sample(nrow(trans_data$trans01), replace=TRUE)#
					ldf_bootstrap <- trans_data$trans01[x, ]#
					# create transition matrix#
					proj_mat <- createProjectionMatrix(#
						ldf_bootstrap,#
						SeedBankSize[i],#
						SeedsPerFruit[j],#
						SeedSurvival[k]#
					)#
					# -------------------------------------------------------- ##
					# Create clonal reproduction transition matrix#
					# -------------------------------------------------------- ##
					# bootstrap cldf#
					clonal_repro_dat <- clonal_repro_dataset %>%#
						filter(#
							minFecundityYear == TransitionYear,#
							Species == "Opuntia stricta"#
						)#
					x <- NULL#
					set.seed(temp_seed)#
					x <- sample(nrow(clonal_repro_dat), replace=TRUE)#
					cldf_bootstrap <- clonal_repro_dat[x, ]#
					# create clonal transition matrix#
					clonal.matrices <- createClonalReproTransitionMatrix(#
						cldf_bootstrap, #
						ldf_bootstrap,#
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# add transition matrices together#
					# ------------------------------------------------------- ##
					all_proj_matrix <- proj_mat + clonal.matrices[[2]]#
					# ------------------------------------------------------- ##
					# starting numbers#
					# ------------------------------------------------------- ##
					n_per_stage <- NULL#
					n_per_stage <- calculateNumberIndivperStage(#
						trans_data$trans01, #
						trans_data$stages#
					)#
					# ------------------------------------------------------- ##
					# dynamics#
					# ------------------------------------------------------- ##
					all_proj_matrix[1, 1] <- SeedSurvival[k]#
					n_per_stage %<>% #
						mutate(#
							n = replace(#
								n, #
								which(stage=="Seed"),#
								SeedBankSize[i]#
							)#
						)#
					pr <- pop.projection(#
						A = all_proj_matrix, #
						n = n_per_stage$n, #
						iterations = n.iter#
					)#
					analysis.results <- eigen.analysis(all_proj_matrix)#
					if (!(is.null(analysis.results))) {#
						# create table of results				#
						#		repro.values#
						repro.value.dat <- analysis.results$repro.value#
						names(repro.value.dat) <- #
							paste("repro.value",names(repro.value.dat),sep=".")#
						repro.value.dat %<>% t %>% as.data.frame#
						#		stable stage distribution#
						stable.stage.dat <- analysis.results$stable.stage#
						names(stable.stage.dat) <- #
							paste("stable.stage",names(stable.stage.dat),sep=".")#
						stable.stage.dat %<>% t %>% as.data.frame#
						#		elasticities#
						elasticities <- analysis.results$elasticities %>% #
							as.data.frame %>%#
							mutate(#
								Name = paste(#
									"elasticities.", #
									Var2, "-", #
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						#		sensitivities#
						sensitivities <- analysis.results$sensitivities %>% #
							as.table %>% as.data.frame %>%#
							mutate(#
								Name = paste(#
									"sensitivities.", #
									Var2, "-",#
									Var1, #
									sep=""#
								)#
							) %>%#
							as.data.frame(row.names=.$Name) %>%#
							dplyr::select(Freq) %>%#
							t %>%#
							as.data.frame()#
						A[[i]][[j]][[k]][[l]] <- data.frame(#
							repro.value.dat,#
							stable.stage.dat,#
							sensitivities,#
							elasticities,#
							lambda1 		= analysis.results$lambda1,#
							damping.ratio 	= analysis.results$damping.ratio,#
							SeedBankSize 	= SeedBankSize[i],#
							SeedsPerFruit 	= SeedsPerFruit[j],#
							SeedSurvival 	= SeedSurvival[k],#
							Bootstrap		= l,#
							seed			= temp_seed#
						)		#
					}#
				}#
				A[[i]][[j]][[k]] <- do.call(rbind.data.frame, A[[i]][[j]][[k]])
head(	A[[i]][[j]][[k]])
dim(A[[i]][[j]][[k]])
A[[i]][[j]][[k]] %>% filter(is.na(seed))
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
