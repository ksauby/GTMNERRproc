Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8374)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8403)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8418)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8418)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8458)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8458)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8487)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8493)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8493)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8508)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8508)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8514)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8514)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8516)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8516)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8555)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8584)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8629)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8629)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8643)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8643)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8652)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8658)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8673)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8680)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8709)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==8709)
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Size_t,Dead,Missing) %>% filter(PlantID==8735)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys
Plant_Info %<>% filter(InBigPlantStudy=="")#
	# ----------------------------------------------------------- ERROR MESSAGES#
	# Plants listed as species Not Recorded#
	dups <- Plant_Info[which(Plant_Info$HostSpecies=="Not Recorded"), ]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Species identity not recorded for plantID: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# are any plant IDs in Plant Info not in the surveys?#
	dups <- Plant_Info[which(Plant_Info$OutsideOfCluster!="Yes"),] %>%#
		filter(!(PlantID %in% Plant_Surveys$PlotPlantID)) %>% #
		.[,2:5]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Some plant IDs are not in Plant Surveys data: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# make sure that there is plot info for each tag number in plant info#
	dups <- Plant_Info %>%#
		filter(!(Tag_Number %in% Plot_Info$Tag_Number))#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Plants (",#
			paste(unique(dups$PlantID), collapse=", "),#
			") are listed as being in plots not in Plot Info data (",#
			paste(unique(dups$Tag_Number), collapse=", "),#
			")"#
		))#
	}#
	# ----------------- ADD INFO FROM Plot_Info (Cluster, Network, Island, etc.)#
	Plant_Info <- Plot_Info %>%#
		dplyr::select(#
			Island, #
			Tag_Number, #
			Cluster, #
			Cluster2, #
			Network, #
			Sampling, #
			SurveyOrder#
		) %>%#
		merge(Plant_Info, by = "Tag_Number", all.y=TRUE) %>%#
		as.data.table %>%#
		setnames("HostSpecies", "Species") %>%#
		as.data.frame
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% Format_PlantIDs_Function#
	#---------------------- CALCULATE AND ADD NUMBER OF PlotPlantIDs PER PlantID#
	Plant_Info <- Plant_Info %>%#
		group_by(PlantID) %>%#
		summarise(#
			N.PlotPlantIDs = length(unique(PlotPlantID))#
		) %>%#
		merge(Plant_Info, by="PlantID")
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- Plant_Surveys %>%#
		filter(#
			Dead != 1,#
			Missing != 1#
		) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			# simply the first survey date#
			First.Survey.Date.Alive = min(Date),#
			# should be max date the plant was alive#
			Last.Survey.Date.Alive = max(Date)#
		) %>%#
		merge(Plant_Info, ., by="PlotPlantID", all.y=TRUE)
tail(Plant_Info)
head(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% filter(InBigPlantStudy=="")#
	# ----------------------------------------------------------- ERROR MESSAGES#
	# Plants listed as species Not Recorded#
	dups <- Plant_Info[which(Plant_Info$HostSpecies=="Not Recorded"), ]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Species identity not recorded for plantID: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# are any plant IDs in Plant Info not in the surveys?#
	dups <- Plant_Info[which(Plant_Info$OutsideOfCluster!="Yes"),] %>%#
		filter(!(PlantID %in% Plant_Surveys$PlotPlantID)) %>% #
		.[,2:5]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Some plant IDs are not in Plant Surveys data: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# make sure that there is plot info for each tag number in plant info#
	dups <- Plant_Info %>%#
		filter(!(Tag_Number %in% Plot_Info$Tag_Number))#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Plants (",#
			paste(unique(dups$PlantID), collapse=", "),#
			") are listed as being in plots not in Plot Info data (",#
			paste(unique(dups$Tag_Number), collapse=", "),#
			")"#
		))#
	}
head(Plant_Info)
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- Plot_Info %>%#
		select(#
			Island, #
			Tag_Number, #
			Cluster, #
			Cluster2, #
			Network, #
			Sampling, #
			SurveyOrder#
		) %>%#
		merge(Plant_Info, by = "Tag_Number", all.y=TRUE) %>%#
		as.data.table %>%#
		setnames("HostSpecies", "Species") %>%#
		as.data.frame
Plant_Info <- Plot_Info %>%#
		dplyr::select(#
			Island, #
			Tag_Number, #
			Cluster, #
			Cluster2, #
			Network, #
			Sampling, #
			SurveyOrder#
		) %>%#
		merge(Plant_Info, by = "Tag_Number", all.y=TRUE) %>%#
		as.data.table %>%#
		setnames("HostSpecies", "Species") %>%#
		as.data.frame
tail(Plant_Info)
tail(Plant_Info)
head(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% Format_PlantIDs_Function
head(Plant_Info)
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- Plant_Info %>%#
		group_by(PlantID) %>%#
		summarise(#
			N.PlotPlantIDs = length(unique(PlotPlantID))#
		) %>%#
		merge(Plant_Info, by="PlantID")
head(Plant_Info)
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- Plant_Surveys %>%#
		filter(#
			Dead != 1,#
			Missing != 1#
		) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			# simply the first survey date#
			First.Survey.Date.Alive = min(Date),#
			# should be max date the plant was alive#
			Last.Survey.Date.Alive = max(Date)#
		) %>%#
		merge(Plant_Info, ., by="PlotPlantID", all.y=TRUE)
tail(Plant_Info)
head(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys
# --------------------------------------------------- remove InBigPlantStudy#
	Plant_Info %<>% filter(InBigPlantStudy=="")#
	# ----------------------------------------------------------- ERROR MESSAGES#
	# Plants listed as species Not Recorded#
	dups <- Plant_Info[which(Plant_Info$HostSpecies=="Not Recorded"), ]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Species identity not recorded for plantID: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# are any plant IDs in Plant Info not in the surveys?#
	dups <- Plant_Info[which(Plant_Info$OutsideOfCluster!="Yes"),] %>%#
		filter(!(PlantID %in% Plant_Surveys$PlotPlantID)) %>% #
		.[,2:5]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Some plant IDs are not in Plant Surveys data: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# make sure that there is plot info for each tag number in plant info#
	dups <- Plant_Info %>%#
		filter(!(Tag_Number %in% Plot_Info$Tag_Number))#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Plants (",#
			paste(unique(dups$PlantID), collapse=", "),#
			") are listed as being in plots not in Plot Info data (",#
			paste(unique(dups$Tag_Number), collapse=", "),#
			")"#
		))#
	}#
	# ----------------- ADD INFO FROM Plot_Info (Cluster, Network, Island, etc.)#
	Plant_Info <- Plot_Info %>%#
		dplyr::select(#
			Island, #
			Tag_Number, #
			Cluster, #
			Cluster2, #
			Network, #
			Sampling, #
			SurveyOrder#
		) %>%#
		merge(Plant_Info, by = "Tag_Number", all.y=TRUE) %>%#
		as.data.table %>%#
		setnames("HostSpecies", "Species") %>%#
		as.data.frame#
	#---------------------------------------------------------- FORMAT PLANT IDs#
	Plant_Info %<>% Format_PlantIDs_Function#
	#---------------------- CALCULATE AND ADD NUMBER OF PlotPlantIDs PER PlantID#
	Plant_Info <- Plant_Info %>%#
		group_by(PlantID) %>%#
		summarise(#
			N.PlotPlantIDs = length(unique(PlotPlantID))#
		) %>%#
		merge(Plant_Info, by="PlantID")
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- Plant_Surveys %>%#
		filter(#
			Dead != 1,#
			Missing != 1#
		) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			# simply the first survey date#
			First.Survey.Date.Alive = min(Date),#
			# should be max date the plant was alive#
			Last.Survey.Date.Alive = max(Date)#
		) %>%#
		merge(Plant_Info, by="PlotPlantID")
dim(Plant_Info)
head(Plant_Info)
tail(Plant_Info)
A <- Plant_Surveys %>%#
		rowwise() %>%#
		mutate(DeadMissing = sum(Dead,Missing,na.rm=T)) %>%#
		arrange(Date) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			sequenceDeadobs 		= paste(Dead, collapse=""),#
			sequenceMissingobs 		= paste(Missing, collapse=""),#
			sequenceDeadMissingobs 	= paste(DeadMissing, collapse=""),#
			confirmedDead 			= ifelse(#
				grepl("11", sequenceDeadobs) == TRUE,#
				1,#
				0#
			),#
			confirmedMissing 		= ifelse(#
				grepl("11", sequenceDeadobs) == TRUE,#
				1,#
				0#
			),#
			confirmedDeadMissing 	= ifelse(#
				grepl("11", sequenceDeadMissingobs) == TRUE,#
				1,#
				0#
			),#
			inconsistentDeadMissing = ifelse(#
				grepl("10", sequenceDeadMissingobs) == TRUE,#
				1,#
				0#
			)#
		)#
	# ERROR MESSAGES#
	Z <- A %>% filter(inconsistentDeadMissing==1)#
	if (dim(Z)[1] > 0) {#
		write.csv(Z, "inconsistentDeadMissing.csv")#
		warning(paste(#
			"Plants with inconsistent records of dead/missing/alive present in dataset. These plants have been saved to a csv."#
		))#
	}#
	# info for plants NOT observed in summer 2015#
	B <- Plant_Surveys %>% #
		filter(Date >= "2015-05-01")#
	C <- A %>% filter(!(PlotPlantID %in% B$PlotPlantID))#
	# info for plants observed in summer 2015 - these do not need 2 consecutive obs. of dead/missing to be confirmed dead/missing#
	 B %<>%#
		rowwise() %>%#
		mutate(DeadMissing = sum(Dead,Missing,na.rm=T)) %>%#
		arrange(Date) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			ConfirmedDead 			= Dead_Missing_Function(Dead),#
			ConfirmedMissing 		= Dead_Missing_Function(Missing),#
			ConfirmedDeadMissing 	= Dead_Missing_Function(c(Dead,Missing))#
		)#
	# paste together#
	#		info for plants NOT observed in summer 2015 &#
	#		info for plants observed in summer 2015#
	Plant_Info <- rbind.fill(B, C) %>%#
		merge(Plant_Info, ., by="PlotPlantID")#
	#---------------- ADD FIRST DATE PlotPlantID WAS RECORDED AS DEAD OR MISSING#
	# earliest date PlotPlantID was recorded as dead#
	temp_dead_obs <- filter(Plant_Surveys, Dead=="1") %>%#
		group_by(PlotPlantID) %>%#
		summarise(FirstDeadObservation = min(Date))#
	# earliest date PlotPlantID was recorded as missing#
	temp_missing_obs <- filter(Plant_Surveys, Missing=="1") %>%#
		group_by(PlotPlantID) %>%#
		summarise(FirstMissingObservation = min(Date))#
	# earliest date PlotPlantID was recorded as missing or dead#
	temp_dead_missing <- merge(#
		temp_dead_obs, #
		temp_missing_obs, #
		by="PlotPlantID", #
		all=T#
	) #
	temp_dead_missing$FirstDeadMissingObservation = temp_dead_missing %>%#
		dplyr::select(#
			FirstDeadObservation,#
			FirstMissingObservation#
		) %>% #
		apply(., 1, min, na.rm=T) %>%#
		as.Date
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# merge with Plant_Info#
	Plant_Info <- merge(Plant_Info, temp_dead_missing, by="PlotPlantID", all=T)#
	# calculate first/last day alive for PlantID (not individual Plot Plant IDs)#
	Plant_Info %<>% group_by(PlantID) %>%#
	mutate(#
		PlantID.First.Alive = min(First.Survey.Date.Alive, na.rm=T),#
		PlantID.Last.Alive = max(Last.Survey.Date.Alive, na.rm=T)#
	)
tail(Plant_Info)
head(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% #
		group_by(PlantID) %>%#
		mutate(DaysAlive = PlantID.Last.Alive - PlantID.First.Alive)#
	# -------------------------------------------------- CLEANUP FOR CONSISTENCY#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, as.character#
	)#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, NA_Function#
	)#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, as.factor#
	)#
	# ------------------------------------------------- modify Reproductive Mode#
	Plant_Info$ReproductiveMode %<>% WoodyTrunk_Function()#
	Plant_Info %<>% setnames("ReproductiveMode", "RecruitmentMode")#
	Plant_Info %<>% mutate(#
		RecruitmentMode = replace(#
			RecruitmentMode,#
			which(RecruitmentMode=="WoodyTrunk"),#
			NA#
		),#
		RecruitmentMode = replace(#
			RecruitmentMode,#
			which(is.na(RecruitmentMode)),#
			NA#
		)#
	)#
	# ------------------------------------------------- ADD InDemomographicStudy#
	# save all Plant_Info#
	Plant_Info_All <- Plant_Info#
	Plant_Info %<>% merge(#
		., #
		ClustersInDemographicStudy, #
		by = "Cluster",#
		all=TRUE#
	)
head(Plant_Info)
tail(Plant_Info)
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys
Plant_Info %<>% filter(InBigPlantStudy=="")#
	# ----------------------------------------------------------- ERROR MESSAGES#
	# Plants listed as species Not Recorded#
	dups <- Plant_Info[which(Plant_Info$HostSpecies=="Not Recorded"), ]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Species identity not recorded for plantID: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# are any plant IDs in Plant Info not in the surveys?#
	dups <- Plant_Info[which(Plant_Info$OutsideOfCluster!="Yes"),] %>%#
		filter(!(PlantID %in% Plant_Surveys$PlotPlantID)) %>% #
		.[,2:5]#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Some plant IDs are not in Plant Surveys data: ",#
			paste(dups$PlantID, collapse=", ")#
		))#
	}#
	# make sure that there is plot info for each tag number in plant info#
	dups <- Plant_Info %>%#
		filter(!(Tag_Number %in% Plot_Info$Tag_Number))#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Plants (",#
			paste(unique(dups$PlantID), collapse=", "),#
			") are listed as being in plots not in Plot Info data (",#
			paste(unique(dups$Tag_Number), collapse=", "),#
			")"#
		))#
	}#
	# ----------------- ADD INFO FROM Plot_Info (Cluster, Network, Island, etc.)#
	Plant_Info <- Plot_Info %>%#
		dplyr::select(#
			Island, #
			Tag_Number, #
			Cluster, #
			Cluster2, #
			Network, #
			Sampling, #
			SurveyOrder#
		) %>%#
		merge(Plant_Info, by = "Tag_Number", all.y=TRUE) %>%#
		as.data.table %>%#
		setnames("HostSpecies", "Species") %>%#
		as.data.frame
Plant_Info %<>% Format_PlantIDs_Function#
	#---------------------- CALCULATE AND ADD NUMBER OF PlotPlantIDs PER PlantID#
	Plant_Info <- Plant_Info %>%#
		group_by(PlantID) %>%#
		summarise(#
			N.PlotPlantIDs = length(unique(PlotPlantID))#
		) %>%#
		merge(Plant_Info, by="PlantID")#
	#-------------------------- ADD FIRST and LAST DATE PlotPlantID WAS SURVEYED#
	# particularly relevant for plants that grew into plots over the course of the study (and thus the number of PlotPlantIDs for a given PlantID changed over time)#
	# also helps calculate the number of days a plant was known to have survived#
	Plant_Info <- Plant_Surveys %>%#
		filter(#
			Dead != 1,#
			Missing != 1#
		) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			# simply the first survey date#
			First.Survey.Date.Alive = min(Date),#
			# should be max date the plant was alive#
			Last.Survey.Date.Alive = max(Date)#
		) %>%#
		merge(Plant_Info, by="PlotPlantID")#
	# ----------------------------------------------------------- PLANT SURVIVAL#
	# indicate whether plant was listed as dead or missing#
	A <- Plant_Surveys %>%#
		rowwise() %>%#
		mutate(DeadMissing = sum(Dead,Missing,na.rm=T)) %>%#
		arrange(Date) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			sequenceDeadobs 		= paste(Dead, collapse=""),#
			sequenceMissingobs 		= paste(Missing, collapse=""),#
			sequenceDeadMissingobs 	= paste(DeadMissing, collapse=""),#
			confirmedDead 			= ifelse(#
				grepl("11", sequenceDeadobs) == TRUE,#
				1,#
				0#
			),#
			confirmedMissing 		= ifelse(#
				grepl("11", sequenceDeadobs) == TRUE,#
				1,#
				0#
			),#
			confirmedDeadMissing 	= ifelse(#
				grepl("11", sequenceDeadMissingobs) == TRUE,#
				1,#
				0#
			),#
			inconsistentDeadMissing = ifelse(#
				grepl("10", sequenceDeadMissingobs) == TRUE,#
				1,#
				0#
			)#
		)#
	# ERROR MESSAGES#
	Z <- A %>% filter(inconsistentDeadMissing==1)#
	if (dim(Z)[1] > 0) {#
		write.csv(Z, "inconsistentDeadMissing.csv")#
		warning(paste(#
			"Plants with inconsistent records of dead/missing/alive present in dataset. These plants have been saved to a csv."#
		))#
	}#
	# info for plants NOT observed in summer 2015#
	B <- Plant_Surveys %>% #
		filter(Date >= "2015-05-01")#
	C <- A %>% filter(!(PlotPlantID %in% B$PlotPlantID))#
	# info for plants observed in summer 2015 - these do not need 2 consecutive obs. of dead/missing to be confirmed dead/missing#
	 B %<>%#
		rowwise() %>%#
		mutate(DeadMissing = sum(Dead,Missing,na.rm=T)) %>%#
		arrange(Date) %>%#
		group_by(PlotPlantID) %>%#
		summarise(#
			ConfirmedDead 			= Dead_Missing_Function(Dead),#
			ConfirmedMissing 		= Dead_Missing_Function(Missing),#
			ConfirmedDeadMissing 	= Dead_Missing_Function(c(Dead,Missing))#
		)
Plant_Info <- rbind.fill(B, C) %>%#
		merge(Plant_Info, ., by="PlotPlantID")#
	#---------------- ADD FIRST DATE PlotPlantID WAS RECORDED AS DEAD OR MISSING#
	# earliest date PlotPlantID was recorded as dead#
	temp_dead_obs <- filter(Plant_Surveys, Dead=="1") %>%#
		group_by(PlotPlantID) %>%#
		summarise(FirstDeadObservation = min(Date))#
	# earliest date PlotPlantID was recorded as missing#
	temp_missing_obs <- filter(Plant_Surveys, Missing=="1") %>%#
		group_by(PlotPlantID) %>%#
		summarise(FirstMissingObservation = min(Date))#
	# earliest date PlotPlantID was recorded as missing or dead#
	temp_dead_missing <- merge(#
		temp_dead_obs, #
		temp_missing_obs, #
		by="PlotPlantID", #
		all=T#
	)
temp_dead_missing$FirstDeadMissingObservation = temp_dead_missing %>%#
		dplyr::select(#
			FirstDeadObservation,#
			FirstMissingObservation#
		) %>% #
		apply(., 1, min, na.rm=T) %>%#
		as.Date#
	# merge with Plant_Info
tail(Plant_Info)
head(Plant_Info)
dim(Plant_Info)
temp_dead_missing$FirstDeadMissingObservation = temp_dead_missing %>%#
		dplyr::select(#
			FirstDeadObservation,#
			FirstMissingObservation#
		) %>% #
		apply(., 1, min, na.rm=T) %>%#
		as.Date#
	# merge with Plant_Info
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info <- merge(Plant_Info, temp_dead_missing, by="PlotPlantID", all=T)
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% group_by(PlantID) %>%#
	mutate(#
		PlantID.First.Alive = min(First.Survey.Date.Alive, na.rm=T),#
		PlantID.Last.Alive = max(Last.Survey.Date.Alive, na.rm=T)#
	)
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info %<>% #
		group_by(PlantID) %>%#
		mutate(DaysAlive = PlantID.Last.Alive - PlantID.First.Alive)#
	# -------------------------------------------------- CLEANUP FOR CONSISTENCY#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, as.character#
	)#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, NA_Function#
	)#
	Plant_Info[,c(#
		"Quadrant",#
		"ReproductiveMode",#
		"Parent")] %<>%#
		apply(., 2, as.factor#
	)#
	# -------------------
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info$ReproductiveMode %<>% WoodyTrunk_Function()#
	Plant_Info %<>% setnames("ReproductiveMode", "RecruitmentMode")#
	Plant_Info %<>% mutate(#
		RecruitmentMode = replace(#
			RecruitmentMode,#
			which(RecruitmentMode=="WoodyTrunk"),#
			NA#
		),#
		RecruitmentMode = replace(#
			RecruitmentMode,#
			which(is.na(RecruitmentMode)),#
			NA#
		)#
	)
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_All <- Plant_Info#
	Plant_Info %<>% merge(#
		., #
		ClustersInDemographicStudy, #
		by = "Cluster"
)
dim(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plot_Info_Cluster <- Plot_Info %>%#
		select(Tag_Number, Cluster, Cluster2) %>%#
		reshape2:::melt.data.frame(., id.vars=c("Tag_Number"), #
			value.name="ClusterID") %>%#
		filter(ClusterID!=0) %>%#
		.[, -2] %>%#
		arrange(Tag_Number)#
	Plot_Info_Cluster %<>%#
		group_by(Tag_Number) %>%#
		summarise(ClusterID = paste(ClusterID, collapse=", "))#
	# CLUSTER ID FOR PLOTS *NOT* IN CLUSTERS#
	temp_A = Plot_Info %>%#
		select(Tag_Number, Cluster) %>%#
		filter(Cluster==0)#
	temp_A$ClusterID <- temp_A$Tag_Number#
	temp_A %<>% .[, -2]#
	Plot_Info_Cluster %<>% rbind.fill(temp_A) %>% #
		merge(Plot_Info, by="Tag_Number") %>%#
		select(ClusterID, Tag_Number)#
	Plant_Info %<>% merge(Plot_Info_Cluster, by="Tag_Number", all.x=T)
Plot_Info_Cluster <- Plot_Info %>%#
		dplyr::select(Tag_Number, Cluster, Cluster2) %>%#
		reshape2:::melt.data.frame(., id.vars=c("Tag_Number"), #
			value.name="ClusterID") %>%#
		filter(ClusterID!=0) %>%#
		.[, -2] %>%#
		arrange(Tag_Number)#
	Plot_Info_Cluster %<>%#
		group_by(Tag_Number) %>%#
		summarise(ClusterID = paste(ClusterID, collapse=", "))#
	# CLUSTER ID FOR PLOTS *NOT* IN CLUSTERS#
	temp_A = Plot_Info %>%#
		dplyr::select(Tag_Number, Cluster) %>%#
		filter(Cluster==0)#
	temp_A$ClusterID <- temp_A$Tag_Number#
	temp_A %<>% .[, -2]#
	Plot_Info_Cluster %<>% rbind.fill(temp_A) %>% #
		merge(Plot_Info, by="Tag_Number") %>%#
		dplyr::select(ClusterID, Tag_Number)#
	Plant_Info %<>% merge(Plot_Info_Cluster, by="Tag_Number", all.x=T)
dim(Plant_Info)
head(Plant_Info)
tail(Plant_Info)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			na.rm=T#
		)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = ifelse(#
			max(#
				CA_t,#
				ME_t,#
				Old_Moth_Evidence_t,#
				Unknown_Moth_t,#
				na.rm=T#
			) >=0,#
			max(#
				CA_t,#
				ME_t,#
				Old_Moth_Evidence_t,#
				Unknown_Moth_t,#
				na.rm=T#
			),#
			NA#
		)
)
warnings()
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
suppressWarnings(max)#
	Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			na.rm=T#
		)
)
? suppressWarnings
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
suppressWarnings("max")#
	Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			na.rm=T#
		)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
suppressWarnings(warning("max"))#
	Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			na.rm=T#
		)
)
warnings()
testit <- function() warning("testit")#
testit() ## shows call
testit <- function() warning("problem in testit", call. = FALSE)#
testit() ## no call
suppressWarnings(warning("testit"))
suppressWarnings(("testit"))
suppressWarnings(warning("testit"))
testit()
? invokeRestart
h <- function(w) if( any( grepl( "bla", w) ) ) invokeRestart( "muffleWarning" )#
> withCallingHandlers( f(5), warning = h )
h <- function(w) if( any( grepl( "bla", w) ) ) invokeRestart( "muffleWarning" )#
withCallingHandlers( f(5), warning = h )
f <- function( x) {#
warning( "bla bla" )#
y <- x + 3#
warning( "yada yada" )#
y#
}
h <- function(w) if( any( grepl( "bla", w) ) ) invokeRestart( "muffleWarning" )#
withCallingHandlers( f(5), warning = h )
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
h <- function(w) {#
		if( any( grepl( "bla", w) ) ) #
			invokeRestart( "muffleWarning" )#
	}#
   withCallingHandlers(#
	   Plant_Surveys_by_Plant %<>% #
      	  rowwise %>%#
        	mutate(#
        		Moth_Evidence_t = max(#
        			CA_t,#
        			ME_t,#
        			Old_Moth_Evidence_t,#
        			Unknown_Moth_t,#
        			na.rm=T#
        		)#
        		Insect_Evidence_t = max(#
        			CA_t,#
        			ME_t,#
        			Old_Moth_Evidence_t,#
        			Unknown_Moth_t,#
        			Gerstaeckeria_t,#
        			CH_t,#
        			DA_t,#
        			na.rm=T#
        		)#
        	) %>%#
        	ungroup(), #
		warning = h#
   )
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "bla", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)
dim(Plant_Surveys_by_Plant)
head(Plant_Surveys_by_Plant)
warnings()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %<>% #
	rowwise %>%#
	mutate(#
		Moth_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			na.rm=T#
		),#
		Insect_Evidence_t = max(#
			CA_t,#
			ME_t,#
			Old_Moth_Evidence_t,#
			Unknown_Moth_t,#
			Gerstaeckeria_t,#
			CH_t,#
			DA_t,#
			na.rm=T#
		),#
		Moth_Evidence_t = replace(#
			Moth_Evidence_t,#
			Moth_Evidence_t==-Inf,#
			NA#
		)#
	) %>%#
	ungroup()
unique(Plant_Surveys_by_Plant$Moth_Evidence_t)
unique(Plant_Surveys_by_Plant$Insect_Evidence_t)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys
str(Plant_Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo
str(Plant_Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015,#
			Fruit_Flowers_t > 0#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015,#
			Fruit_Flowers_t > 0#
		)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"O. pusilla plants ",#
			paste(temp$PlotPlantID, collapse=", "),#
			"are recorded as having fruit/flowers in a year other than 2015."#
		))#
	}
unique(month(temp$Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015
)
unique(month(temp$Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015,#
			Fruit_Flowers_t > 0,#
			!(unique(month(Date)) %in% c(5,6,7,8))#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015,#
			Fruit_Flowers_t > 0
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Species=="pusilla",#
			SamplingYear!=2015,#
			Fruit_Flowers_t > 0,#
			!(month(Date) %in% c(5,6,7,8))#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# throw a warning if pusilla has flowers before summer 2015#
	temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 10#
			Fruit_Flowers_t > 0#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 10,#
			Fruit_Flowers_t > 0#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 9,#
			Fruit_Flowers_t > 0#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 2,#
			Fruit_Flowers_t > 0#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 5,#
			Fruit_Flowers_t > 0#
		)
dim(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 5,#
			Fruit_Flowers_t > 0#
		)#
	if (dim(temp)[1] > 0) {#
		write.csv(temp, "SmallPlantswFruitFlowers.csv")#
		warning(paste(#
			"Plants less than 5 segments in size observed with fruit/flowers. Records written to csv file."#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(#
			Size_t < 5,#
			Fruit_Flowers_t > 0#
		)
dim(temp)[1] > 0
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (dim(temp)[1] > 0) {#
		write.csv(temp, "SmallPlantswFruitFlowers.csv")#
		warning(paste(#
			"Plants less than 5 segments in size observed with fruit/flowers. Records written to csv file."#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
warning(paste(#
			"Plants less than 5 segments in size observed with fruit/flowers. Records written to csv file."#
		))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dim(temp)[1] > 0
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
warning(paste(#
			"PlantMeasureID Records ",#
			paste(temp$PlantMeasureID, collapse=", "),#
			"have size measurements but are also marked dead"#
		))
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
(6.75+2.5)/(7.5+2.5)
(5.25+2.5)/(7.5+2.5)
600*1.22
