setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][j,
]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
unique(L$Date)[j]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
date.window=48
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
unique(L$Date)[j] - date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' fill occupancy plot surveys with info from plant surveys#
#' @description This data is from when I was specifically doing occupancy plot surveys.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item percent cover: get from plot survey data; if no plot survey data for that tag number and date, fill with NA#
#'  \item height: get from plot survey data; if it was not recorded in the plot survey then use max. plant height from the plant survey data#
#'  \item insect presence/absence: get from plot survey data; if it was not recorded in the plot survey then use max. plant height from the plant survey data#
#'  \item limit to plot surveys after Dec. 2, 2012 (I wasn't surveying individual plants before this)#
#'  \item limit to Tag_Numbers that have marked plants#
#' }#
#' @param Plot.Surveys#
#' @param Plant.Surveys#
#' @export#
#
mergePlantSurveysPlotSurveys <- function(Plot.Surveys, Plant.Surveys, date.window=48) {#
	temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()#
	# for each tag number in the plot surveys data#
	for (i in 1:length(unique(temp_A$Tag_Number))) {#
		# pull all records for this Tag Number from plot surveys#
		L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date#
		for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}	#
	}#
	A <- do.call(rbind.data.frame, Z)#
	names(A)[1] <- "Tag_Number"#
	#  FIX DATA FORMAT#
	A[,c(column_list,#
		"P_plot_survey", #
		"P_PC", #
		"P_H", #
		"S_plot_survey", #
		"S_PC", #
		"S_H")] %<>%#
		apply(., 2, as.numeric#
	)#
	A[,c(column_list,#
		"P_plot_survey", #
		"P_PC", #
		"P_H", #
		"S_plot_survey", #
		"S_PC", #
		"S_H")] %<>%#
		apply(., 2, NA_Function#
	)#
	return(A)#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
A <- mergePlantSurveysPlotSurveys(Plot.Surveys, Plant.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()#
	# for each tag number in the plot surveys data#
	for (i in 1:length(unique(temp_A$Tag_Number))) {#
		# pull all records for this Tag Number from plot surveys#
		L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date#
		for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}	#
	}
M
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")
str(Plant.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()#
	# for each tag number in the plot surveys data#
	for (i in 1:length(unique(temp_A$Tag_Number))) {#
		# pull all records for this Tag Number from plot surveys#
		L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date#
		for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}	#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date#
		for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]
i
j
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()
i
j
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]
L
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plot.Surveys %<>% changeVariableNames
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]
date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (unique(L$Date)[j] - date.window)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
unique(L$Date)[j] - date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
unique(L$Date)[j]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.Date(unique(L$Date)[j]) - date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
str(Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
str(Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
str(Plant.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys$Date %<>% as.Date
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Format_Date_Function
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot.Surveys[which(Plot.Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot.Surveys[which(Plot.Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot.Info %<>% processOccupancyPlotInfo(Plot.Vegetation, GIS.data.upd)#
#
# check errors by keeping track of dataframe size#
Plot.Info.Size = as.data.frame(matrix(NA, 1, 1))#
Plot.Info.Size[, 1] = dim(Plot.Info)[1]#
#
Plot.Surveys %<>% processOccupancyPlotSurveys(Plot.Info)#
#
write.csv(Plot.Info, "../data/Plot_Info.csv")#
write.csv(Plot.Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# (5) Merge datasets together#
# --------------------------------------------------------------------------- ##
Plot.Surveys %<>% changeVariableNames
str(Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()
i
j
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (as.Date(unique(L$Date)[j]) - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)
}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)
}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' fill occupancy plot surveys with info from plant surveys#
#' @description This data is from when I was specifically doing occupancy plot surveys.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item percent cover: get from plot survey data; if no plot survey data for that tag number and date, fill with NA#
#'  \item height: get from plot survey data; if it was not recorded in the plot survey then use max. plant height from the plant survey data#
#'  \item insect presence/absence: get from plot survey data; if it was not recorded in the plot survey then use max. plant height from the plant survey data#
#'  \item limit to plot surveys after Dec. 2, 2012 (I wasn't surveying individual plants before this)#
#'  \item limit to Tag_Numbers that have marked plants#
#' }#
#' @param Plot.Surveys#
#' @param Plant.Surveys#
#' @export#
#
mergePlantSurveysPlotSurveys <- function(Plot.Surveys, Plant.Surveys, date.window=48) {#
	temp_A = Plot.Surveys %>% filter(#
		Date > "2012-12-01", Tag_Number %in% Plant.Surveys$Tag_Number#
	)#
	Z = list()#
	# for each tag number in the plot surveys data#
	for (i in 1:length(unique(temp_A$Tag_Number))) {#
		# pull all records for this Tag Number from plot surveys#
		L = filter(temp_A, Tag_Number==unique(temp_A$Tag_Number)[i])#
		Z[[i]] <- as.data.frame(matrix(NA,length(L$Date),1))#
		Z[[i]][, 1] 					<- L$Tag_Number[1]#
		Z[[i]][, "Date"] 				<- L$Date#
		Z[[i]][, "Pictures"] 			<- L$Pictures#
		Z[[i]][, "PictureDirection"] 	<- L$PictureDirection#
		Z[[i]][, "Notes"] 				<- L$Notes#
		# for each date#
		for (j in 1:dim(L)[1]) {#
			# fill with occupancy survey data#
			Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
			Z[[i]][j, "P_plant_survey"] <-  "NA"#
			Z[[i]][j, "P_Ca"] 			<- L$P_Ca[j]#
			Z[[i]][j, "P_Me"] 			<- L$P_Me[j]#
			Z[[i]][j, "P_Ch"] 			<- L$P_Ch[j]#
			Z[[i]][j, "P_Umoth"] 		<- L$P_Umoth[j]#
			Z[[i]][j, "P_Omoth"] 		<- L$P_Omoth[j]#
			Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
			Z[[i]][j, "P_H"] 			<- L$P_H[j]#
			Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
			Z[[i]][j, "S_plant_survey"] <- "NA"#
			Z[[i]][j, "S_Ca"] 			<- L$S_Ca[j]#
			Z[[i]][j, "S_Me"] 			<- L$S_Me[j]#
			Z[[i]][j, "S_Ch"] 			<- L$S_Ch[j]#
			Z[[i]][j, "S_Umoth"] 		<- L$S_Umoth[j]#
			Z[[i]][j, "S_Omoth"] 		<- L$S_Omoth[j]#
			Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
			Z[[i]][j, "S_H"] 			<- L$S_H[j]#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			# WINDOW OF DATES?#
			M = filter(Plant.Surveys, #
				Tag_Number==L$Tag_Number[1],#
				Date > (as.Date(unique(L$Date)[j]) - date.window),#
				Date <= unique(L$Date)[j],#
				# remove plants marked as dead#
				Dead!=1)#
			# remove plants marked as missing	#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# if there is plant survey data for this date, update the occupancy survey data#
			# if the M dataframe has at least one row of data:#
			if (dim(M)[1] > 0) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plot_survey"] 	<- L$Pusilla[j]#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0)#
				Z[[i]][j, "P_Ca"] 			<- Maximum(c(P$CA_t, L[j,]$P_Ca))#
				Z[[i]][j, "P_Me"] 			<- Maximum(c(P$ME_t, L[j,]$P_Me))#
				Z[[i]][j, "P_Ch"] 			<- Maximum(c(P$CH_t, L[j,]$P_Ch))#
				Z[[i]][j, "P_Umoth"] 		<- Maximum(c(#
												P$Unknown_Moth_t, #
												L[j,]$P_Umoth#
											))#
				Z[[i]][j, "P_Omoth"] 		<- Maximum(c(#
												P$Old_Moth_Evidence_t, #
												L[j,]$P_Omoth#
											))#
				Z[[i]][j, "P_PC"] 			<- L$P_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "P_H"] 			<- ifelse(#
												is.na(L$P_H[j]) & dim(P)[1] > 0,#
												Maximum(P$Height_t), #
												L$P_H[j]#
											) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plot_survey"] 	<- L$Stricta[j]#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0)#
				Z[[i]][j, "S_Ca"] 			<- Maximum(c(S$CA_t, L[j,]$S_Ca))#
				Z[[i]][j, "S_Me"] 			<- Maximum(c(S$ME_t, L[j,]$S_Me))#
				Z[[i]][j, "S_Ch"] 			<- Maximum(c(S$CH_t, L[j,]$S_Ch))#
				Z[[i]][j, "S_Umoth"] 		<- Maximum(c(#
												S$Unknown_Moth_t, #
												L[j,]$S_Umoth#
											))#
				Z[[i]][j, "S_Omoth"] 		<- Maximum(c(#
												S$Old_Moth_Evidence_t, #
												L[j,]$S_Omoth#
											))#
				Z[[i]][j, "S_PC"] 			<- L$S_PC[j]#
				# Height - if plot survey height is NA, then replace with max height from plant surveys#
				Z[[i]][j, "S_H"] <- ifelse(#
					is.na(L$S_H[j]) & dim(S)[1] > 0, #
					Maximum(S$Height_t), #
					L$S_H[j]#
				)#
			}#
		}	#
	}#
	A <- do.call(rbind.data.frame, Z)#
	names(A)[1] <- "Tag_Number"#
	#  FIX DATA FORMAT#
	A[,c(column_list,#
		"P_plot_survey", #
		"P_PC", #
		"P_H", #
		"S_plot_survey", #
		"S_PC", #
		"S_H")] %<>%#
		apply(., 2, as.numeric#
	)#
	A[,c(column_list,#
		"P_plot_survey", #
		"P_PC", #
		"P_H", #
		"S_plot_survey", #
		"S_PC", #
		"S_H")] %<>%#
		apply(., 2, NA_Function#
	)#
	return(A)#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
A <- mergePlantSurveysPlotSurveys(Plot.Surveys, Plant.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
B <- mergePlotSurveysDemoPlotSurveys(D.Plot.Surveys, Plant.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
C <- createPlotSurveysfromPlantSurveys(Plant.Surveys, Plot.Surveys, #
	D.Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Create occupancy plot survey data from plant surveys#
#' @description This data is from when I was surveying plants only, not also doing plot surveys.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item I can only add absence data when I know that I surveyed all the plants that day; this requires creating a list of possible plants alive for each survey day#
#'  \item filter plant surveys by dates that are not in plot surveys and also not in demographic plot surveys (I don't want to replicate plot, date combos)#
#' }#
#' @param Plant_Surveys#
#' @param Plot_Surveys#
#' @param D_Plot_Surveys#
#' @export#
#
createPlotSurveysfromPlantSurveys <- function(Plant_Surveys, Plant_Info, Plot_Surveys, D_Plot_Surveys) {#
	# create Tag/Date Combo Field#
	Plant_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	Plot_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	D_Plot_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	# keep records of Tag Numbers not surveyed on particular dates#
	temp.plant.surveys <- filter(#
		Plant_Surveys, #
		!(Tag_Date %in% Plot_Surveys$Tag_Date),#
		!(Tag_Date %in% D_Plot_Surveys$Tag_Date)#
	)#
	# print plants with Tag_Number==NA as warning#
	TagNumbNA <- temp.plant.surveys %>% #
		filter(is.na(temp.plant.surveys$Tag_Number)) %$%#
		PlantID#
	if (length(TagNumbNA) > 0) {#
		warning("Plants with Tag_Number=NA:", paste(TagNumbNA, collapse=","))#
	}#
	# remove plants with Tag_Number==NA#
	temp.plant.surveys <- filter(#
		temp.plant.surveys, #
		is.na(temp.plant.surveys$Tag_Number)==FALSE#
	)#
	Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(temp.plant.surveys$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			temp.plant.surveys, #
			Tag_Number==unique(temp.plant.surveys$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys remove plants marked as missing or dead	#
			M = filter(L, Date==unique(L$Date)[j], Dead!=1)#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# get list of PlantIDs for this plot#
			N = filter(#
				Plant_Info, #
				Tag_Number==L$Tag_Number[1], #
				# only include plants that are listed as having been added to Plant.Info on or after Date#
				First.Survey.Date.Alive <= unique(L$Date)[j],#
				# exclude dead plants (including date plant was first recorded as dead)#
				FirstDeadMissingObservation > unique(L$Date)[j] | #
					is.na(FirstDeadMissingObservation)==T#
			)#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (identical(#
				M$PlotPlantID[order(M$PlotPlantID)], #
				N$PlotPlantID[order(N$PlotPlantID)]#
			)==T) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0) #
				Z[[i]][j, "P_Ca"] 			<- Maximum(P$CA_t) #
				Z[[i]][j, "P_Me"] 			<- Maximum(P$ME_t) #
				Z[[i]][j, "P_Ch"] 			<- Maximum(P$CH_t) #
				Z[[i]][j, "P_Umoth"] 		<- Maximum(P$Unknown_Moth_t) #
				Z[[i]][j, "P_Omoth"] 		<- Maximum(P$Old_Moth_Evidence_t) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0) #
				Z[[i]][j, "S_Ca"] 			<- Maximum(S$CA_t) #
				Z[[i]][j, "S_Me"] 			<- Maximum(S$ME_t) #
				Z[[i]][j, "S_Ch"] 			<- Maximum(S$CH_t) #
				Z[[i]][j, "S_Umoth"] 		<- Maximum(S$Unknown_Moth_t) #
				Z[[i]][j, "S_Omoth"] 		<- Maximum(S$Old_Moth_Evidence_t)#
				Z[[i]][j, "all_surveyed"] 	<- "Yes"#
			} #
			# if all PlotPlantIDs were NOT surveyed on this date#
			else {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, NA) #
				Z[[i]][j, "P_Ca"] 			<- mysum1(P$CA_t)#
				Z[[i]][j, "P_Me"] 			<- mysum1(P$ME_t)#
				Z[[i]][j, "P_Ch"] 			<- mysum1(P$CH_t)#
				Z[[i]][j, "P_Umoth"] 		<- mysum1(P$Unknown_Moth_t)#
				Z[[i]][j, "P_Omoth"] 		<- mysum1(P$Old_Moth_Evidence_t)#
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, NA) #
				Z[[i]][j, "S_Ca"] 			<- mysum1(S$CA_t)#
				Z[[i]][j, "S_Me"] 			<- mysum1(S$ME_t)#
				Z[[i]][j, "S_Ch"] 			<- mysum1(S$CH_t)#
				Z[[i]][j, "S_Umoth"] 		<- mysum1(S$Unknown_Moth_t)#
				Z[[i]][j, "S_Omoth"] 		<- mysum1(S$Old_Moth_Evidence_t)#
				Z[[i]][j, "all_surveyed"] 	<- "No"#
			}#
		}#
	}	#
	C <- do.call(rbind.data.frame, Z)#
	names(C)[1] <- "Tag_Number"#
	# FIX DATA FORMAT#
	C[, column_list] %<>% apply(., 2, as.numeric)#
	C[, column_list] %<>% apply(., 2, NA_Function)#
	return(C)	#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
C <- createPlotSurveysfromPlantSurveys(Plant.Surveys, Plant.Info, Plot.Surveys, #
	D.Plot.Surveys)
str(Plant.Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Create occupancy plot survey data from plant surveys#
#' @description This data is from when I was surveying plants only, not also doing plot surveys.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item I can only add absence data when I know that I surveyed all the plants that day; this requires creating a list of possible plants alive for each survey day#
#'  \item filter plant surveys by dates that are not in plot surveys and also not in demographic plot surveys (I don't want to replicate plot, date combos)#
#' }#
#' @param Plant_Surveys#
#' @param Plot_Surveys#
#' @param D_Plot_Surveys#
#' @export#
#
createPlotSurveysfromPlantSurveys <- function(Plant_Surveys, Plant_Info, Plot_Surveys, D_Plot_Surveys) {#
	# create Tag/Date Combo Field#
	Plant_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	Plot_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	D_Plot_Surveys 	%<>% mutate(Tag_Date=paste(Tag_Number, Date))#
	# keep records of Tag Numbers not surveyed on particular dates#
	temp.plant.surveys <- filter(#
		Plant_Surveys, #
		!(Tag_Date %in% Plot_Surveys$Tag_Date),#
		!(Tag_Date %in% D_Plot_Surveys$Tag_Date)#
	)#
	# print plants with Tag_Number==NA as warning#
	TagNumbNA <- temp.plant.surveys %>% #
		filter(is.na(temp.plant.surveys$Tag_Number)) %$%#
		PlantID#
	if (length(TagNumbNA) > 0) {#
		warning("Plants with Tag_Number=NA:", paste(TagNumbNA, collapse=","))#
	}#
	# remove plants with Tag_Number==NA#
	temp.plant.surveys <- filter(#
		temp.plant.surveys, #
		is.na(temp.plant.surveys$Tag_Number)==FALSE#
	)#
	Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(temp.plant.surveys$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			temp.plant.surveys, #
			Tag_Number==unique(temp.plant.surveys$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys remove plants marked as missing or dead	#
			M = filter(L, Date==unique(L$Date)[j], Dead!=1)#
			M = M[which(M$Missing!=1 | is.na(M$Missing)==T), ]#
			# get list of PlantIDs for this plot#
			N = filter(#
				Plant_Info, #
				Tag_Number==L$Tag_Number[1], #
				# only include plants that are listed as having been added to Plant.Info on or after Date#
				PlotPlantID.First.Survey.Date.Alive <= unique(L$Date)[j],#
				# exclude dead plants (including date plant was first recorded as dead)#
				PlotPlantID.Last.Survey.Date.Alive >= unique(L$Date)[j] | #
					is.na(FirstDeadMissingObservation)==T#
			)#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (identical(#
				M$PlotPlantID[order(M$PlotPlantID)], #
				N$PlotPlantID[order(N$PlotPlantID)]#
			)==T) {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, 0) #
				Z[[i]][j, "P_Ca"] 			<- Maximum(P$CA_t) #
				Z[[i]][j, "P_Me"] 			<- Maximum(P$ME_t) #
				Z[[i]][j, "P_Ch"] 			<- Maximum(P$CH_t) #
				Z[[i]][j, "P_Umoth"] 		<- Maximum(P$Unknown_Moth_t) #
				Z[[i]][j, "P_Omoth"] 		<- Maximum(P$Old_Moth_Evidence_t) #
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, 0) #
				Z[[i]][j, "S_Ca"] 			<- Maximum(S$CA_t) #
				Z[[i]][j, "S_Me"] 			<- Maximum(S$ME_t) #
				Z[[i]][j, "S_Ch"] 			<- Maximum(S$CH_t) #
				Z[[i]][j, "S_Umoth"] 		<- Maximum(S$Unknown_Moth_t) #
				Z[[i]][j, "S_Omoth"] 		<- Maximum(S$Old_Moth_Evidence_t)#
				Z[[i]][j, "all_surveyed"] 	<- "Yes"#
			} #
			# if all PlotPlantIDs were NOT surveyed on this date#
			else {#
				P = filter(M, Species=="pusilla")#
				Z[[i]][j, "P_plant_survey"] <- ifelse(dim(P)[1] > 0, 1, NA) #
				Z[[i]][j, "P_Ca"] 			<- mysum1(P$CA_t)#
				Z[[i]][j, "P_Me"] 			<- mysum1(P$ME_t)#
				Z[[i]][j, "P_Ch"] 			<- mysum1(P$CH_t)#
				Z[[i]][j, "P_Umoth"] 		<- mysum1(P$Unknown_Moth_t)#
				Z[[i]][j, "P_Omoth"] 		<- mysum1(P$Old_Moth_Evidence_t)#
				S = filter(M, Species=="stricta")#
				Z[[i]][j, "S_plant_survey"] <- ifelse(dim(S)[1] > 0, 1, NA) #
				Z[[i]][j, "S_Ca"] 			<- mysum1(S$CA_t)#
				Z[[i]][j, "S_Me"] 			<- mysum1(S$ME_t)#
				Z[[i]][j, "S_Ch"] 			<- mysum1(S$CH_t)#
				Z[[i]][j, "S_Umoth"] 		<- mysum1(S$Unknown_Moth_t)#
				Z[[i]][j, "S_Omoth"] 		<- mysum1(S$Old_Moth_Evidence_t)#
				Z[[i]][j, "all_surveyed"] 	<- "No"#
			}#
		}#
	}	#
	C <- do.call(rbind.data.frame, Z)#
	names(C)[1] <- "Tag_Number"#
	# FIX DATA FORMAT#
	C[, column_list] %<>% apply(., 2, as.numeric)#
	C[, column_list] %<>% apply(., 2, NA_Function)#
	return(C)	#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
C <- createPlotSurveysfromPlantSurveys(Plant.Surveys, Plant.Info, Plot.Surveys, #
	D.Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D <- createPlotSurveysfromOrigPlantSurveys(Original.Plant.Data)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E <- rbind.fill(A, B, C, D)				#
E.check <- merge(Plot_Info, E, by="Tag_Number")#
# FIX DATA FORMAT
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E <- rbind.fill(A, B, C, D)				#
E.check <- merge(Plot.Info, E, by="Tag_Number")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, as.numeric)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, NA_Function)#
Z <- mergeDuplicateSurveys(E)
str(E)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z = list()
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(E, Tag_Number==unique(E$Tag_Number)[i])#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(E, Tag_Number==unique(E$Tag_Number)[i])
head(E)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
unique(E$Tag_Number)[i]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = E %>% filter(Tag_Number==unique(E$Tag_Number)[i])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = E %>% dplyr::filter(Tag_Number==unique(E$Tag_Number)[i])
L = E %>% dplyr::filter(Tag_Number==unique(Tag_Number)[i])
unique(E$Tag_Number)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E <- rbind.fill(A, B, C, D)				#
E.check <- merge(Plot.Info, E, by="Tag_Number")#
# FIX DATA FORMAT#
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, as.numeric)#
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, NA_Function)
str(E)
class(E$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
E %>% dplyr::filter(Tag_Number==unique(E$Tag_Number)[i])
E %>% as.data.frame %>% dplyr::filter(Tag_Number==unique(E$Tag_Number)[i])
unique(E$Date)
dim(D)
head(D)
tail(D)
unique(D$Date)
unique(C$Date)
unique(B$Date)
unique(A$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
A <- mergePlantSurveysPlotSurveys(Plot.Surveys, Plant.Surveys)#
B <- mergePlotSurveysDemoPlotSurveys(D.Plot.Surveys, Plant.Surveys)#
C <- createPlotSurveysfromPlantSurveys(Plant.Surveys, Plant.Info, Plot.Surveys, #
	D.Plot.Surveys)#
D <- createPlotSurveysfromOrigPlantSurveys(Original.Plant.Data)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E <- rbind.fill(A, B, C, D)
tail(E)
tail(A)
tail(D)
str(D)
str(C)
str(B)
str(A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Create occupancy plot survey data from original plant survey data#
#' @description This data is from when I was surveying plants only, not also doing occupancy plot surveys. After IDing and surveying these plants, I deleted these IDs and renamed the plants so the IDs here DO NOT match the surveys and IDs in the demography study data.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item for these dates I am not certain that I surveyed all plants in the plots therefore either something is present or an NA#
#' }#
#' @param Original_Plant_Data#
#' @export#
#
createPlotSurveysfromOrigPlantSurveys <- function(Original_Plant_Data) {#
	Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(Original_Plant_Data$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			Original_Plant_Data, #
			Tag_Number==unique(Original_Plant_Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			M = filter(L, Date==unique(L$Date)[j])#
			P = filter(M, HostSpecies=="pusilla")#
			Z[[i]][j, "P_plant_survey"] 	<-  ifelse(dim(P)[1] > 0, 1, NA) #
			Z[[i]][j, "P_Ca"] 				<- mysum1(P$CA_t)#
			Z[[i]][j, "P_Me"] 				<- mysum1(P$ME_t)#
			Z[[i]][j, "P_Ch"] 				<- mysum1(P$CH_t)#
			Z[[i]][j, "P_Umoth"] 			<- mysum1(P$Unknown_Moth_t)#
			Z[[i]][j, "P_Omoth"] 	<- mysum1(P$Old_Moth_Evidence_t)			#
			S = filter(M, HostSpecies=="stricta")#
			Z[[i]][j, "S_plant_survey"] 	<-  ifelse(dim(S)[1] > 0, 1, NA) #
			Z[[i]][j, "S_Ca"] 				<- mysum1(S$CA_t)#
			Z[[i]][j, "S_Me"] 				<- mysum1(S$ME_t)#
			Z[[i]][j, "S_Ch"] 				<- mysum1(S$CH_t)#
			Z[[i]][j, "S_Umoth"]	 		<- mysum1(S$Unknown_Moth_t)#
			Z[[i]][j, "S_Omoth"] 			<- mysum1(S$Old_Moth_Evidence_t)#
		}#
	}	#
	D <- do.call(rbind.data.frame, Z)#
	names(D)[1] <- "Tag_Number"#
	#  FIX DATA FORMAT#
	D[, column_list] %<>% apply(., 2, as.numeric)#
	D[, column_list] %<>% apply(., 2, NA_Function)#
	D$Date %<>% as.Date#
	return(D)	#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D <- createPlotSurveysfromOrigPlantSurveys(Original.Plant.Data)
tail(D)
str(D)
head(D)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z = list()
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(#
			Original_Plant_Data, #
			Tag_Number==unique(Original_Plant_Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(#
			Original.Plant.Data, #
			Tag_Number==unique(Original.Plant.Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)
Z[[i]]
str(Original.Plant.Data)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M = filter(L, Date==unique(L$Date)[j])#
			P = filter(M, HostSpecies=="pusilla")#
			Z[[i]][j, "P_plant_survey"] 	<-  ifelse(dim(P)[1] > 0, 1, NA) #
			Z[[i]][j, "P_Ca"] 				<- mysum1(P$CA_t)#
			Z[[i]][j, "P_Me"] 				<- mysum1(P$ME_t)#
			Z[[i]][j, "P_Ch"] 				<- mysum1(P$CH_t)#
			Z[[i]][j, "P_Umoth"] 			<- mysum1(P$Unknown_Moth_t)#
			Z[[i]][j, "P_Omoth"] 	<- mysum1(P$Old_Moth_Evidence_t)			#
			S = filter(M, HostSpecies=="stricta")#
			Z[[i]][j, "S_plant_survey"] 	<-  ifelse(dim(S)[1] > 0, 1, NA) #
			Z[[i]][j, "S_Ca"] 				<- mysum1(S$CA_t)#
			Z[[i]][j, "S_Me"] 				<- mysum1(S$ME_t)#
			Z[[i]][j, "S_Ch"] 				<- mysum1(S$CH_t)#
			Z[[i]][j, "S_Umoth"]	 		<- mysum1(S$Unknown_Moth_t)#
			Z[[i]][j, "S_Omoth"] 			<- mysum1(S$Old_Moth_Evidence_t)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
column_list
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(Original.Plant.Data$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			Original.Plant.Data, #
			Tag_Number==unique(Original.Plant.Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			M = filter(L, Date==unique(L$Date)[j])#
			P = filter(M, HostSpecies=="pusilla")#
			Z[[i]][j, "P_plant_survey"] 	<-  ifelse(dim(P)[1] > 0, 1, NA) #
			Z[[i]][j, "P_Ca"] 				<- mysum1(P$CA_t)#
			Z[[i]][j, "P_Me"] 				<- mysum1(P$ME_t)#
			Z[[i]][j, "P_Ch"] 				<- mysum1(P$CH_t)#
			Z[[i]][j, "P_Umoth"] 			<- mysum1(P$Unknown_Moth_t)#
			Z[[i]][j, "P_Omoth"] 	<- mysum1(P$Old_Moth_Evidence_t)			#
			S = filter(M, HostSpecies=="stricta")#
			Z[[i]][j, "S_plant_survey"] 	<-  ifelse(dim(S)[1] > 0, 1, NA) #
			Z[[i]][j, "S_Ca"] 				<- mysum1(S$CA_t)#
			Z[[i]][j, "S_Me"] 				<- mysum1(S$ME_t)#
			Z[[i]][j, "S_Ch"] 				<- mysum1(S$CH_t)#
			Z[[i]][j, "S_Umoth"]	 		<- mysum1(S$Unknown_Moth_t)#
			Z[[i]][j, "S_Omoth"] 			<- mysum1(S$Old_Moth_Evidence_t)#
		}#
	}	#
	D <- do.call(rbind.data.frame, Z)
head(D)
tail(D)
unique(D$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
names(D)[1] <- "Tag_Number"
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D[, column_list] %<>% apply(., 2, as.numeric)#
	D[, column_list] %<>% apply(., 2, NA_Function)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D$Date %<>% as.Date
unique(D$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(Original.Plant.Data$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			Original.Plant.Data, #
			Tag_Number==unique(Original.Plant.Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			M = filter(L, Date==unique(L$Date)[j])#
			P = filter(M, HostSpecies=="pusilla")#
			Z[[i]][j, "P_plant_survey"] 	<-  ifelse(dim(P)[1] > 0, 1, NA) #
			Z[[i]][j, "P_Ca"] 				<- mysum1(P$CA_t)#
			Z[[i]][j, "P_Me"] 				<- mysum1(P$ME_t)#
			Z[[i]][j, "P_Ch"] 				<- mysum1(P$CH_t)#
			Z[[i]][j, "P_Umoth"] 			<- mysum1(P$Unknown_Moth_t)#
			Z[[i]][j, "P_Omoth"] 	<- mysum1(P$Old_Moth_Evidence_t)			#
			S = filter(M, HostSpecies=="stricta")#
			Z[[i]][j, "S_plant_survey"] 	<-  ifelse(dim(S)[1] > 0, 1, NA) #
			Z[[i]][j, "S_Ca"] 				<- mysum1(S$CA_t)#
			Z[[i]][j, "S_Me"] 				<- mysum1(S$ME_t)#
			Z[[i]][j, "S_Ch"] 				<- mysum1(S$CH_t)#
			Z[[i]][j, "S_Umoth"]	 		<- mysum1(S$Unknown_Moth_t)#
			Z[[i]][j, "S_Omoth"] 			<- mysum1(S$Old_Moth_Evidence_t)#
		}#
	}	#
	D <- do.call(rbind.data.frame, Z)#
	names(D)[1] <- "Tag_Number"#
	#  FIX DATA FORMAT#
	D[, column_list] %<>% apply(., 2, as.numeric)#
	D[, column_list] %<>% apply(., 2, NA_Function)#
	D$Date %<>% Format_Date_Function
unique(D$Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Create occupancy plot survey data from original plant survey data#
#' @description This data is from when I was surveying plants only, not also doing occupancy plot surveys. After IDing and surveying these plants, I deleted these IDs and renamed the plants so the IDs here DO NOT match the surveys and IDs in the demography study data.#
#' Specific rules for filling the plot surveys:#
#' \itemize{#
#'  \item for these dates I am not certain that I surveyed all plants in the plots therefore either something is present or an NA#
#' }#
#' @param Original.Plant.Data#
#' @export#
#
createPlotSurveysfromOrigPlantSurveys <- function(Original.Plant.Data) {#
	Z = list()#
	# for each tag number in the demography plot survey data#
	for (i in 1:length(unique(Original.Plant.Data$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = filter(#
			Original.Plant.Data, #
			Tag_Number==unique(Original.Plant.Data$Tag_Number)[i]#
		)#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))	#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			M = filter(L, Date==unique(L$Date)[j])#
			P = filter(M, HostSpecies=="pusilla")#
			Z[[i]][j, "P_plant_survey"] 	<-  ifelse(dim(P)[1] > 0, 1, NA) #
			Z[[i]][j, "P_Ca"] 				<- mysum1(P$CA_t)#
			Z[[i]][j, "P_Me"] 				<- mysum1(P$ME_t)#
			Z[[i]][j, "P_Ch"] 				<- mysum1(P$CH_t)#
			Z[[i]][j, "P_Umoth"] 			<- mysum1(P$Unknown_Moth_t)#
			Z[[i]][j, "P_Omoth"] 	<- mysum1(P$Old_Moth_Evidence_t)			#
			S = filter(M, HostSpecies=="stricta")#
			Z[[i]][j, "S_plant_survey"] 	<-  ifelse(dim(S)[1] > 0, 1, NA) #
			Z[[i]][j, "S_Ca"] 				<- mysum1(S$CA_t)#
			Z[[i]][j, "S_Me"] 				<- mysum1(S$ME_t)#
			Z[[i]][j, "S_Ch"] 				<- mysum1(S$CH_t)#
			Z[[i]][j, "S_Umoth"]	 		<- mysum1(S$Unknown_Moth_t)#
			Z[[i]][j, "S_Omoth"] 			<- mysum1(S$Old_Moth_Evidence_t)#
		}#
	}	#
	D <- do.call(rbind.data.frame, Z)#
	names(D)[1] <- "Tag_Number"#
	#  FIX DATA FORMAT#
	D[, column_list] %<>% apply(., 2, as.numeric)#
	D[, column_list] %<>% apply(., 2, NA_Function)#
	D$Date %<>% Format_Date_Function#
	return(D)	#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D <- createPlotSurveysfromOrigPlantSurveys(Original.Plant.Data)#
E <- rbind.fill(A, B, C, D)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
E.check <- merge(Plot.Info, E, by="Tag_Number")#
# FIX DATA FORMAT#
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, as.numeric)#
E[,c(column_list,#
	"P_plot_survey", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, NA_Function)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z = list()
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = E %>% dplyr::filter(Tag_Number==unique(E$Tag_Number)[i])
L
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Merge Duplicate Surveys#
#' @description Merge duplicate surveys (two or more surveys on the same date) and add columns for CACA presence and MEPR presence (regardless of which cactus the insects were found).#
#' @param E#
#' @export#
#
mergeDuplicateSurveys <- function(E) {#
	Z = list()#
	# for each tag number#
	for (i in 1:length(unique(E$Tag_Number))) {#
		# pull all records for this Tag Number from temp.plant.surveys#
		L = E %>% dplyr::filter(Tag_Number==unique(E$Tag_Number)[i])#
		Z[[i]] 			<- as.data.frame(matrix(NA,length(unique(L$Date)),1))#
		Z[[i]][, 1] 	<- L$Tag_Number[1]#
		Z[[i]][, "Date"] <- unique(L$Date)#
		# for each date#
		for (j in 1:length(unique(L$Date))) {#
			# pull all plant survey records for this Tag Number and date from plant surveys#
			M = filter(L, Date==unique(L$Date)[j])#
			# pusilla		#
			Z[[i]][j, "P_plot_survey"] 		<- Maximum(M$P_plot_survey)#
			Z[[i]][j, "P_plant_survey"] 	<- Maximum(M$P_plant_survey) #
			Z[[i]][j, "P_Ca"] 				<- Maximum(M$P_Ca)#
			Z[[i]][j, "P_Me"] 				<- Maximum(M$P_Me)#
			Z[[i]][j, "P_Ch"] 				<- Maximum(M$P_Ch)#
			Z[[i]][j, "P_Umoth"] 			<- Maximum(M$P_Umoth)#
			Z[[i]][j, "P_Omoth"] 			<- Maximum(M$P_Omoth)#
			Z[[i]][j, "P_PC"] 				<- Maximum(M$P_PC)#
			Z[[i]][j, "P_H"] 				<- Maximum(M$P_H)#
			# stricta		#
			Z[[i]][j, "S_plot_survey"] 		<- Maximum(M$S_plot_survey)#
			Z[[i]][j, "S_plant_survey"] 	<- Maximum(M$S_plant_survey)#
			Z[[i]][j, "S_Ca"] 				<- Maximum(M$S_Ca)#
			Z[[i]][j, "S_Me"] 				<- Maximum(M$S_Me)#
			Z[[i]][j, "S_Ch"] 				<- Maximum(M$S_Ch)#
			Z[[i]][j, "S_Umoth"] 			<- Maximum(M$S_Umoth)#
			Z[[i]][j, "S_Omoth"] 			<- Maximum(M$S_Omoth)#
			Z[[i]][j, "S_PC"] 				<- Maximum(M$S_PC)#
			Z[[i]][j, "S_H"] 				<- Maximum(M$S_H)#
		}#
	}#
	return(Z)#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Z <- mergeDuplicateSurveys(E)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
G <- do.call(rbind.data.frame, Z)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
names(G)[1] <- "Tag_Number"#
G[,c(#
	"P_plot_survey", #
	"P_plant_survey", #
	"P_Ca", #
	"P_Me", #
	"P_Ch", #
	"P_Umoth", #
	"P_Omoth", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_plant_survey", #
	"S_Ca", #
	"S_Me", #
	"S_Ch", #
	"S_Umoth", #
	"S_Omoth", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, as.numeric)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
G[,c(#
	"P_plot_survey", #
	"P_plant_survey", #
	"P_Ca", #
	"P_Me", #
	"P_Ch", #
	"P_Umoth", #
	"P_Omoth", #
	"P_PC", #
	"P_H", #
	"S_plot_survey", #
	"S_plant_survey", #
	"S_Ca", #
	"S_Me", #
	"S_Ch", #
	"S_Umoth", #
	"S_Omoth", #
	"S_PC", #
	"S_H"#
)] %<>% apply(., 2, NA_Function)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plot_Surveys_mod <- Plot.Surveys %>%#
	dplyr::select(#
		Tag_Number,#
		Date, #
		Pictures, #
		PictureDirection, #
		Notes, #
		Pusilla, #
		P_Ca, #
		P_Me, #
		P_Ch, #
		P_Umoth, #
		P_Omoth, #
		Old_Moth_Evidence_recent_Pusilla, #
		P_PC, #
		P_H, #
		Stricta, #
		S_Ca, #
		S_Me, #
		S_Ch, #
		S_Umoth, #
		S_Omoth, #
		Old_Moth_Evidence_recent_Stricta,#
		S_PC, #
		S_H#
	)#
#
# add extra columns to match removed.duplicates#
Plot_Surveys_mod$S_plant_survey <- NA#
Plot_Surveys_mod$P_plant_survey <- NA#
names(Plot_Surveys_mod)[c(6, 15)] <- c("P_plot_survey", "S_plot_survey")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# create file with plot surveys from before demography study#
H = filter(Plot_Surveys_mod, Date < "2012-12-02")#
# create file with plot surveys after demography study started, but tags not included in the demography study#
#	this is because filtered only surveys for plots included IN the demography study#
I = Plot_Surveys_mod %>% #
	filter(Date > "2012-12-01", !(Tag_Number %in% Plant_Surveys$Tag_Number))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
I = Plot_Surveys_mod %>% #
	filter(Date > "2012-12-01", !(Tag_Number %in% Plant.Surveys$Tag_Number))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
################# This is the problem, I don't think it is merging right#
dim(OccupancySRSWOR.Plot.Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plot_Surveys <- rbind.fill(#
	G, # 3412#
	H, # 2072#
	I  # 5439#
)
dim(Plot_Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# create stricta and pusilla variables#
Plot_Surveys %<>%#
	mutate(#
		Stricta = apply(cbind(S_plot_survey, S_plant_survey), 1, max, na.rm=T),#
		Pusilla = apply(cbind(P_plot_survey, P_plant_survey), 1, max, na.rm=T)#
		)
warnings()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plot_Surveys %>% #
	filter(P_plot_survey==1 & P_plant_survey!=1) %>% #
	write.csv("/Users/KSauby/Documents/Projects/GTMNERR_analysis/data/pusilla_mismatch_plot_plant_surveys_A.csv")#
Plot_Surveys %>% #
	filter(is.na(P_plot_survey) & P_plant_survey==1) %>% #
	write.csv("/Users/KSauby/Documents/Projects/GTMNERR_analysis/data/pusilla_mismatch_plot_plant_surveys_B.csv")#
Plot_Surveys %>% #
	filter(S_plot_survey==1 & S_plant_survey!=1) %>% #
	write.csv("/Users/KSauby/Documents/Projects/GTMNERR_analysis/data/stricta_mismatch_plot_plant_surveys_A.csv")#
Plot_Surveys %>% #
	filter(is.na(S_plot_survey) & S_plant_survey==1) %>% #
	write.csv("/Users/KSauby/Documents/Projects/GTMNERR_analysis/data/stricta_mismatch_plot_plant_surveys_B.csv")#
#
# --------------------------------------------------------------------------
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
