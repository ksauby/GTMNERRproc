(.25^2 * 2)^0.5 * 2
3/8
5/8
6/8
30*1.5
40*15
40*1.5
13.25 - 4.5
(276.29+8.75)/365
16*3
16*4
84/12
9/12
9/12*14
22+60+78+80+88+98
22+38+18+2+8+10
239/785
(239+53)/785
.492+.139
.412+.166+.002
.412/.58
.166/.58
.412*.58
.71*.58
98-54
22+49+43+33+36+44
60-11
78-26
80-35
88-47
98-52
22+49+52+45+41+46
library(RMark)
?test_ddl
data(dipper)    dipper.processed=process.data(dipper,groups=("sex"))    release.gof(dipper.processed)
4+19+7+12
4+17.83+7+12
40.83/42
40.83/42*14
14
(11.25+5)/(25.5 + 10.25 - 14)
365*0.6666
365*0.6666 - 75.89
5/6 * 2
5/6 * 2 + 75.89
365*0.6666 -77.55667
365*0.6666 -77.55667 - 6 - 13 - 1
145.7523/2
15*3
11*5
8/12*14
4+15.33+5.5+12
(4+15.33+5.5+12)
(4+15.33+5.5+12)/(4+19+7+12)
(4+19+7+12)
(4+15.33+5.5+12)/(4+19+7+12)*14
2.5+17.5+12
32/42
32/42 * 14
4+12+6.5+12
(4+12+6.5+12)/42 * 14
5/6*2
5/6*2 + 0.25
5/6*2 + 0.5
2577.77/12
15/20
15/20*6
300 - 4*50
300 - 4*40
4.5/12*14
9+9+7+9
33.5/34 * 14
32/34 * 14
32/34*14
7+8.5+7+7
(7+8.5+7+7)/34 * 14
(7+5.5+5.5+8.5)/34 * 14
(7+5.5+5.5+8.5)/(9+7+9+9) * 14
9+7+9+9
(14.25+7.25)/(24.75+10.25-9)
(16.5+7.75)/(24.75+10.25)
(16.5+7.75)/(24.75+10.25)*6
(5.25+5.5)/(22.5+10.5)
(5.25+5.5)/(22.5+10.5)*6
(9.75+5.5)/(24.7+10.25-5)*6
(9.75+5.5)/(24.7+10.25-5)
3.98/6
(9.75+5.5)/(24.7+10.25-10)
(9.75+5.5)/(24.7+10.25-10)*6
5/6*2
1.83-5/6*2
1.83-4/6*2
5/6*2 + 0.5
4/6*2 + 0.5
4/6*2
4/6 + 0.5
4/6*2 + 0.5
33/34 * 14
17.5*4
24*4 + 1.75*4
library(dplyr)
library(plyr)
600*.22
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadMissingbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = max(c(Dead,Missing), na.rm=T)			#
		) %>% #
		mutate(PrevSamplingYear = SamplingYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T)
()
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = max(c(Dead,Missing), na.rm=T)			#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = max(c(Dead,Missing), na.rm=T)
)
max(1,2,na.rm=T)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = max(DeadbyEndofYear, MissingbyEndofYear, na.rm=T)			#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T)
)
max(NA,NA,na.rm=T)
max(0,0,na.rm=T)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = max(c(DeadbyEndofYear, MissingbyEndofYear), na.rm=T)			#
		)
0+NA
sum(0,NA,na.rm=T)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = sum(c(DeadbyEndofYear, MissingbyEndofYear), na.rm=T)			#
		)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install(upgrade_dependencies=F)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadMissingbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
# Warnings#
temp <- Plant_Surveys_by_Year %>% #
	filter(#
		is.na(Size_t),#
		month(Date) %in% c(4,5,6,7,8,9),#
		DeadbyEndofYear == 0 & MissingbyEndofYear == 0,#
		# verified these were entered correctly#
		!(PlantID=="7397" & Date=="2015-06-03"), #
		!(PlantID=="7435" & Date=="2014-05-27"),#
		!(PlantID=="9371" & Date=="2015-05-24"),#
		PlantID!=7548#
	)		#
if (dim(temp)[1] > 0) {#
	warning("Some plant sizes = NA. Data written to csv file.")#
	temp %>% write.csv("plants_w_no_size.csv")#
}#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)#
#
# for ones without size - were they measured in the winter? exclude those since I usually didn't record size then
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# -------- CREATE RGR DATASETS ---------------------------------------------- ##
#
Plant_Surveys_RGR <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
		Stage,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t,#
		Size_t_1,#
		Fruit_Flowers_t,#
		FruitFlowerPres_t,#
		RGR_Size365,#
		CA_t,#
		ME_t,#
		#Insect_t,#
		Old_Moth_Evidence_t,#
		CA_t_1,#
		ME_t_1,#
		Insect_t_1,#
		Old_Moth_Evidence_t_1,#
		#CAhistory,#
		#MEhistory,#
		#Insecthistory,#
		#OldMothhistory,#
		RecruitmentMode,#
		Clones_t,#
		Loss_to_Offspring,#
		cactus_density_per_plot,#
		Dead,#
		Alive#
 	) %>%#
	.[complete.cases(.),]#
Plant_Surveys_RGR_lag2 <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
		Stage,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t,#
		Size_t_1,#
		Fruit_Flowers_t,#
		FruitFlowerPres_t,#
		RGR_Size365,#
		CA_t,#
		ME_t,#
		#Insect_t,#
		Old_Moth_Evidence_t,#
		CA_t_1,#
		ME_t_1,#
		Insect_t_1,#
		Old_Moth_Evidence_t_1,#
		CA_t_2,#
		ME_t_2,#
		Insect_t_2,#
		Old_Moth_Evidence_t_2,#
		#CAhistory,#
		#MEhistory,#
		#Insecthistory,#
		#OldMothhistory,#
		RecruitmentMode,#
		Clones_t,#
		Loss_to_Offspring,#
		cactus_density_per_plot,#
		Dead#
 	) %>%#
	.[complete.cases(.),]#
# --------------------------------------------------------------------------- ##
sizeclass <- c(0:5,10,140)#
#
size.class <- cut(#
	Plant_Surveys_RGR_stricta$Size_t, #
	sizeclass, #
	include.lowest=T, #
	labels=FALSE#
)#
size.class <- data.frame(Class=size.class)#
Dat <- cbind(Plant_Surveys_RGR_stricta, size.class)#
#
Sizes <- Dat[which(Dat$Stage == "Dead"), ]$Class#
#
 &#
	Dat$Stage != "Seedling" &#
	Dat$Stage != "Juvenile"#
), ]$size.class#
Dat_census[which(#
	Dat_census$stage != "Dead" &#
	Dat_census$stage != "Seedling" &#
	Dat_census$stage != "Juvenile"#
), ]$stage <- Sizes#
Dat_census[which(Dat_census$stage == "Dead"), ]$stage <- "dead"#
# --------------------------------------------------------------------------- ##
Plant_Surveys_RGR %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
Plant_Surveys_RGR_stricta <- Plant_Surveys_RGR %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_RGR_stricta %<>% #
	mutate(#
		Ln_Size_t_1_st = arm::rescale(log(Size_t_1)),	#
		LossToOffspring_st = arm::rescale(Loss_to_Offspring),#
		FruitFlowers_st = arm::rescale(Fruit_Flowers_t),#
		RGR_Size365_st = arm::rescale(RGR_Size365),#
		cactus_density_per_plot_st = arm::rescale(cactus_density_per_plot)		#
	)#
#
Plant_Surveys_RGR_lag2_stricta <- Plant_Surveys_RGR_lag2 %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_RGR_lag2_stricta %<>% #
	mutate(#
		Ln_Size_t_1_st = arm::rescale(log(Size_t_1)),	#
		LossToOffspring_st = arm::rescale(Loss_to_Offspring),#
		FruitFlowers_st = arm::rescale(Fruit_Flowers_t),#
		RGR_Size365_st = arm::rescale(RGR_Size365),#
		cactus_density_per_plot_st = arm::rescale(cactus_density_per_plot)		#
	)#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_RGR_pusilla <- Plant_Surveys_RGR %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_RGR_pusilla %<>% #
	mutate(#
		Ln_Size_t_1_st = arm::rescale(log(Size_t_1)),#
		LossToOffspring_st = arm::rescale(Loss_to_Offspring),#
		FruitFlowers_st = arm::rescale(Fruit_Flowers_t),#
		RGR_Size365_st = arm::rescale(RGR_Size365),#
		cactus_density_per_plot_st = arm::rescale(cactus_density_per_plot)#
	)#
Plant_Surveys_RGR_lag2_pusilla <- Plant_Surveys_RGR_lag2 %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_RGR_lag2_pusilla %<>% #
	mutate(#
		Ln_Size_t_1_st = arm::rescale(log(Size_t_1)),	#
		LossToOffspring_st = arm::rescale(Loss_to_Offspring),#
		FruitFlowers_st = arm::rescale(Fruit_Flowers_t),#
		RGR_Size365_st = arm::rescale(RGR_Size365),#
		cactus_density_per_plot_st = arm::rescale(cactus_density_per_plot)		#
	)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_RGR_stricta %>% write.csv("../data/Plant_Surveys_RGR_stricta.csv")#
Plant_Surveys_RGR_lag2_stricta %>% write.csv("../data/Plant_Surveys_RGR_lag2_stricta.csv")#
Plant_Surveys_RGR_pusilla %>% write.csv("../data/Plant_Surveys_RGR_pusilla.csv")#
Plant_Surveys_RGR_lag2_pusilla %>% write.csv("../data/Plant_Surveys_RGR_lag2_pusilla.csv")#
#
# --------------------------------------------------------------------------- ##
# TESTS#
# --------------------------------------------------------------------------- ##
#
# should only be one dead record (or zero) per plant#
Plant_Surveys_RGR_stricta %>%#
group_by(PlantID) %>%#
summarise(Dead_count = sum(Dead)) %>%#
filter(Dead_count > 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]#
# --------------------------------------------------------------------------- ##
# Check that all possible records are included in Plant_Surveys_Survival#
#	cannot include those where size was recorded #
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head#
# need confirmed dead/missing - two consecutive observations of dead EXCEPT for the last survey#
#
# some might not be in plant surveys survival if only one size measurement#
# --------------------------------------------------------------------------- ##
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta %>% #
	dplyr::select(#
 		Ln_Size_t_1_st,#
		everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_stricta.csv")#
Plant_Surveys_Survival_pusilla %>% dplyr::select(#
 		Ln_Size_t_1_st,#
		everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_pusilla.csv")#
# ---------------------------------------------------------------------------
dim(Plant_Surveys_Survival)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadMissingbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
# Warnings#
temp <- Plant_Surveys_by_Year %>% #
	filter(#
		is.na(Size_t),#
		month(Date) %in% c(4,5,6,7,8,9),#
		DeadbyEndofYear == 0 & MissingbyEndofYear == 0,#
		# verified these were entered correctly#
		!(PlantID=="7397" & Date=="2015-06-03"), #
		!(PlantID=="7435" & Date=="2014-05-27"),#
		!(PlantID=="9371" & Date=="2015-05-24"),#
		PlantID!=7548#
	)		#
if (dim(temp)[1] > 0) {#
	warning("Some plant sizes = NA. Data written to csv file.")#
	temp %>% write.csv("plants_w_no_size.csv")#
}#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)#
#
# for ones without size - were they measured in the winter? exclude those since I usually didn't record size then
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# -------- CREATE RGR DATASETS ---------------------------------------------- ##
#
Plant_Surveys_RGR <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
		Stage,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t,#
		Size_t_1,#
		Fruit_Flowers_t,#
		FruitFlowerPres_t,#
		RGR_Size365,#
		CA_t,#
		ME_t,#
		#Insect_t,#
		Old_Moth_Evidence_t,#
		CA_t_1,#
		ME_t_1,#
		Insect_t_1,#
		Old_Moth_Evidence_t_1,#
		#CAhistory,#
		#MEhistory,#
		#Insecthistory,#
		#OldMothhistory,#
		RecruitmentMode,#
		Clones_t,#
		Loss_to_Offspring,#
		cactus_density_per_plot,#
		Dead,#
		Alive#
 	) %>%#
	.[complete.cases(.),]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% dim
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# ---------------------------------------------------------------------------
head(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")
head(Plant_Surveys_Survival_pusilla)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	.[complete.cases(.$Size_t_1),]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival_stricta %>% #
	dplyr::select(#
 		Ln_Size_t_1_st,#
		everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_stricta.csv")#
Plant_Surveys_Survival_pusilla %>% dplyr::select(#
 		Ln_Size_t_1_st,#
		everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_pusilla.csv")
?everything
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	.[complete.cases(.$Size_t_1),]#
# --------------------------------------------------------------------------- ##
# Check that all possible records are included in Plant_Surveys_Survival#
#	cannot include those where size was recorded #
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head#
# need confirmed dead/missing - two consecutive observations of dead EXCEPT for the last survey#
#
# some might not be in plant surveys survival if only one size measurement#
# --------------------------------------------------------------------------- ##
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta %<>% #
	dplyr::select(#
 		Ln_Size_t_1_st,#
		everything()#
 	)
str(Plant_Surveys_Survival_stricta)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	.[complete.cases(.$Size_t_1),]#
# --------------------------------------------------------------------------- ##
# Check that all possible records are included in Plant_Surveys_Survival#
#	cannot include those where size was recorded #
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head#
# need confirmed dead/missing - two consecutive observations of dead EXCEPT for the last survey#
#
# some might not be in plant surveys survival if only one size measurement#
# --------------------------------------------------------------------------- ##
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta %<>% #
	dplyr::select(#
 		Ln_Size_t_1_st,#
		dplyr::everything()#
 	)
str(Plant_Surveys_Survival_stricta)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	.[complete.cases(.$Size_t_1),]#
# --------------------------------------------------------------------------- ##
# Check that all possible records are included in Plant_Surveys_Survival#
#	cannot include those where size was recorded #
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head#
# need confirmed dead/missing - two consecutive observations of dead EXCEPT for the last survey#
#
# some might not be in plant surveys survival if only one size measurement#
# --------------------------------------------------------------------------- ##
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta %>% #
	dplyr::select(#
 		Ln_Size_t_1_st,#
		dplyr::everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_stricta.csv")#
Plant_Surveys_Survival_pusilla %>% dplyr::select(#
 		Ln_Size_t_1_st,#
		dplyr::everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_pusilla.csv")#
# ---------------------------------------------------------------------------
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# calculate wait time to moth infestation#
# wait time positively related to survival: maybe didn't have time to observe the plants die#
# maybe not a good idea#
# p. 55 in the phreg article#
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		MissingbyEndofYear,#
		Alive#
 	) %>%#
	.[complete.cases(.$Size_t_1),]#
# --------------------------------------------------------------------------- ##
# Check that all possible records are included in Plant_Surveys_Survival#
#	cannot include those where size was recorded #
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(#
		DeadbyEndofYear==1 | MissingbyEndofYear==1#
	) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
filter(Species=="stricta") %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head#
# need confirmed dead/missing - two consecutive observations of dead EXCEPT for the last survey#
#
# some might not be in plant surveys survival if only one size measurement#
# --------------------------------------------------------------------------- ##
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia stricta")#
Plant_Surveys_Survival_stricta$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_stricta$Size_t_1))#
mean(Plant_Surveys_Survival_stricta$Ln_Size_t_1_st)#
#
Plant_Surveys_Survival_pusilla <- Plant_Surveys_Survival %>% #
	filter(Species=="Opuntia pusilla")#
Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st <- 	arm::rescale(log(Plant_Surveys_Survival_pusilla$Size_t_1))#
mean(Plant_Surveys_Survival_pusilla$Ln_Size_t_1_st)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_Survival_stricta %>% #
	write.csv("../data/Plant_Surveys_Survival_stricta.csv")#
Plant_Surveys_Survival_pusilla %>% dplyr::select(#
 		Ln_Size_t_1_st,#
		dplyr::everything()#
 	) %>%#
	write.csv("../data/Plant_Surveys_Survival_pusilla.csv")#
# ---------------------------------------------------------------------------
Plant_Surveys %>% arrange(Date) %>% filter(PlantID=="9637")
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Date, Dead, Missing) %>% filter(PlantID=="9637")
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Date, Dead, Missing, SamplingYear) %>% filter(PlantID=="9637")
Plant_Surveys %>% arrange(Date) %>% dplyr::select(PlantID, Date, Dead, Missing, SamplingYear) %>% filter(PlantID=="9637") %>% 		group_by(SamplingYear, PlantID) %>%		summarise(#
DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = sum(#
				c(#
					DeadbyEndofYear, #
					MissingbyEndofYear#
				), na.rm=T)			#
		)
Plant_Surveys_by_Year %>% arrange(Date) %>% dplyr::select(PlantID, Date, DeadbyEndofYear, MissingbyEndofYear, DeadMissingbyEndofYear) %>% filter(PlantID=="9637")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant)
Plant_Surveys_by_Year %>% arrange(Date) %>% dplyr::select(PlantID, Date, DeadbyEndofYear, MissingbyEndofYear, DeadMissingbyEndofYear) %>% filter(PlantID=="9637")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
#' Create Dataset by Year#
#'#
#' @description Create variabiles indicating whether an insect was present during the study. Useful in particular for Life Table Response Experiments.#
#
#' @param Plant_Surveys_by_Plant Plant Survey Dataset#
#'#
#' @export#
#
createPlantSurveysbyYear <- function(Plant_Surveys_by_Plant) {#
	Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(SamplingYear, PlantID) %>%#
		summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			#Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = sum(#
				c(#
					DeadbyEndofYear, #
					MissingbyEndofYear#
				), na.rm=T)			#
		) %>% #
		mutate(PrevSamplingYear = SamplingYear - 1)#
	# create PrevYear#
	Plant_Surveys_by_Year$Year <- year(Plant_Surveys_by_Year$Date)#
	Plant_Surveys_by_Year$PrevYear <- year(Plant_Surveys_by_Year$Date) - 1#
	Plant_Surveys_by_Year %<>% createInsectPresDuringStudy#
	return(Plant_Surveys_by_Year)#
}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install(upgrade_dependencies=F)
