setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlantID.First.Alive) <= #
						as.Date(Z[[i]]$Date[j]) + date.window) %>%#
					# exclude dead plants (including date plant was first recorded as dead)#
				filter(	FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlantID.First.Alive) <= #
						as.Date(Z[[i]]$Date[j]) + date.window)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.Date(Z[[i]]$Date[j]) + date.window)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.Date(Z[[i]]$Date[j]) + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlantID.First.Alive) <= #
						(as.Date(Z[[i]]$Date[j]) + date.window)) %>%#
					# exclude dead plants (including date plant was first recorded as dead)#
				filter(	FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
	as.POSIXct(strptime(as.Date(PlantID.First.Alive, format = "%Y-%m-%d"))) <= #
	(as.POSIXct(strptime(as.Date(Z[[i]]$Date[j]))) + date.window)#
	)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
	as.POSIXct(strptime(as.Date(PlantID.First.Alive, format = "%Y-%m-%d"))) <= #
	(as.POSIXct(strptime(as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d"))) + date.window)#
	)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.POSIXct(strptime(as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d")))
as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d")
strptime(as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]$Date[j]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
strptime(as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d"))
dat = data.frame(#
     Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
       (0:10)*30, format="%Y-%m-%d"))#
)
dat
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
strptime(as.Date(as.character(Z[[i]]$Date[j]), format = "%Y-%m-%d"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.Date(as.character(Z[[i]]$Date[j])
, format = "%Y-%m-%d")
?strptime
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.POSIXct(strptime(as.Date(Z[[i]]$Date[j]), format = "%Y-%m-%d"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
	as.POSIXct(strptime(as.Date(PlantID.First.Alive, format = "%Y-%m-%d"))) <= #
	(as.POSIXct(strptime(as.Date(Z[[i]]$Date[j]), format = "%Y-%m-%d")) + date.window)#
	)
as.POSIXct(strptime(as.Date(Plant.Info$PlantID.First.Alive, format = "%Y-%m-%d"))) %>% head
head(Plant.Info$PlantID.First.Alive)
as.Date(Plant.Info$PlantID.First.Alive, format = "%Y-%m-%d") %>% head
class(Plant.Info$PlantID.First.Alive)
as.POSIXct(strptime(as.Date(as.character(Plant.Info$PlantID.First.Alive), format = "%Y-%m-%d"))) %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.POSIXct(strptime(Z[[i]]$Date[j], format = "%Y-%m-%d"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
	as.POSIXct(strptime(PlantID.First.Alive, format = "%Y-%m-%d")) <= #
	(as.POSIXct(strptime(Z[[i]]$Date[j], format = "%Y-%m-%d")) + date.window)#
	)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]) %>%#
					filter(#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
	as.POSIXct(strptime(PlantID.First.Alive, format = "%Y-%m-%d")) <= #
	(as.POSIXct(strptime(Z[[i]]$Date[j], format = "%Y-%m-%d")
)
)
)
as.POSIXct(strptime(Plant.Info$PlantID.First.Alive, format = "%Y-%m-%d"))
as.POSIXct(strptime(Plant.Info$PlantID.First.Alive, format = "%Y-%m-%d")) %>% head
temp <-Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1])
as.POSIXct(strptime(temp$PlantID.First.Alive, format = "%Y-%m-%d")) %>% head
as.POSIXct(strptime(temp$PlantID.First.Alive, format = "%Y-%m-%d")) <= #
	(as.POSIXct(strptime(Z[[i]]$Date[j], format = "%Y-%m-%d")) + date.window)
Z[[i]]$Date[j]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1])
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]),#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]),#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)
str(Plant.Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp.A <- filter(Plant.Surveys, N.PlotPlantIDs > 1) %>% arrange(Date)#
	Z = list()
L = filter(temp.A, PlantID==9164)
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (max(L$Date) - min(L$Date) > #
			SequenceofDates[2] - SequenceofDates[1]) {#
			L.list <- L %>%#
				split(#
				.,#
				cut(#
					L$Date,#
					SequenceofDates#
				)#
			)#
			L.list %<>% .[sapply(., function(x) dim(x)[1]) > 0]#
			L.list %<>% lapply(., function(x) split(x, x$DemographicSurvey))#
			L.list %<>% unlist(recursive=F)#
			list.names <- gsub("\\..*","", names(L.list))#
			demography.surveys <- gsub("^.*\\.","", names(L.list))#
			Z[[i]] 	<- data.frame(#
				Date = list.names,#
				DemographicSurvey = demography.surveys#
			)#
		} else {#
			L.list <- list(L)#
			names(L.list) <- max(L.list[[1]]$Date)#
			Z[[i]] <- data.frame(Date = max(L.list[[1]]$Date))#
		}#
		Z[[i]][, "PlantID"] 			<- L$PlantID[1]
j=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)
M
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# ----------------------
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
str(Plant.Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Survey.Date.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.POSIXct(#
						strptime(#
							PlotPlantID.First.Survey.Date.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]
)
x <- Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1]
)
as.POSIXct(#
						strptime(#
							x$PlotPlantID.First.Survey.Date.Alive, format = "%Y-%m-%d"#
						)#
					) <= #
					(as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window)
x$PlotPlantID.First.Survey.Date.Alive
Z[[i]]$Date[j]
date.window
Z[[i]]$Date[j] + 48
as.POSIXct(#
+ 						strptime(#
+ 							Z[[i]]$Date[j], format = "%Y-%m-%d"#
+ 						)#
+ 					) + date.window
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window)
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j] + date.window, format = "%Y-%m-%d"#
						)#
					)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]$Date[j] + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.character(Z[[i]]$Date[j]) + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]$Date[j]
as.POSIXct(#
						strptime(#
							as.Date(Z[[i]]$Date[j], format = "%Y-%m-%d")#
						)#
					) + date.window
? strptime
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d"#
						)#
					) + date.window
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d", tz=""#
						)#
					) + date.window
as.POSIXct(#
						strptime(#
							Z[[i]]$Date[j], format = "%Y-%m-%d", usetz=F#
						)#
					) + date.window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window)
)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)#
Plant.Surveys.by.Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant.Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant.Surveys.by.Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant.Surveys.by.Plant),#
	warning = h#
)#
#
# find and keep only first dead/missing observation#
temp <- Plant.Surveys.by.Plant %>% findFirstDeadMissingObservation#
# create Fecundity and RGR dataset#
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)#
#
# --------------------------------------------------------------------------- ##
# which plants are missing size surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
# which plants are missing fruit/flowers surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
#
# these plantID and fecundity year combos are missing spring/summer surveys#
temp1 <- Plant.Surveys.by.Year %>% #
	filter(#
		is.na(SurveyDate_SpringSummer),#
		DeadMissingbyEndofYear != 1#
	) %>%#
	dplyr::select(PlantID, FecundityYear)#
temp1 <- Plant.Surveys.by.Plant %>%#
	filter(#
		Dead != 1 & Missing != 1,#
		month(Date) == 5 |#
		month(Date) == 6 |#
		month(Date) == 7 |#
		month(Date) == 8 |#
		month(Date) == 9,#
		is.na(Size_t)#
	) %>%#
	merge(#
		temp1,#
		by = c("PlantID", "FecundityYear")#
	) %>%#
	filter(!(#
			PlantID == 7548 & Date == "2014-09-05" |#
			PlantID == 7773 & Date == "2014-09-21" |#
			PlantID == 7774 & Date == "2014-09-21" |#
			PlantID == 7778 & Date == "2014-09-21" |#
			PlantID == 7791 & Date == "2014-09-21" |#
			PlantID == 7792 & Date == "2014-09-21" |#
			PlantID == 7793 & Date == "2014-09-21" |#
			PlantID == 7794 & Date == "2014-09-21" |#
			PlantID == 7795 & Date == "2014-09-21" |#
			PlantID == 7807 & Date == "2014-09-21" |#
			PlantID == 7810 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-06-28" |#
			PlantID == 8088 & Date == "2014-06-04" |#
			PlantID == 8647 & Date == "2013-07-18" |#
			PlantID == 8652 & Date == "2013-07-23" |#
			PlantID == 8653 & Date == "2013-07-23" |#
			PlantID == 9156 & Date == "2014-06-10" |#
			PlantID == 9156 & Date == "2014-09-11" |#
			PlantID == 9561 & Date == "2014-06-24" |#
			PlantID == 9561 & Date == "2014-05-12" |#
			PlantID == 9682 & Date == "2014-06-02" |#
			PlantID == 9024 & Date == "2014-06-25" |#
			PlantID == 9220 & Date == "2013-07-18" |#
			PlantID == 9220 & Date == "2013-05-21" |#
			PlantID == 9371 & Date == "2015-05-26"#
	)) %>%#
	dplyr::select(PlantID, Date)#
if (dim(temp)[1] > 0) {#
	write.csv(temp1, "SpringSummerSurveyswoSizeFruit.csv")#
	warning("Some plants are missing size/fruit records for spring/summer surveys. Data written to csv file.")#
}#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)#
#
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis %<>% #
	rowwise() %>%#
	mutate(#
		DaysBetweenFirstLastSurvey = (as.Date(LastDateAlive) + 1) - (as.Date(First.Survey.Date.Alive) - 1)#
	)#
	# createMothOccupancyVariable#
Plant.Info.stricta <- Plant.Info.Analysis %>% filter(Species=="stricta")#
Plant.Info.pusilla <- Plant.Info.Analysis %>% filter(Species=="pusilla")#
write.csv(Plant.Info.Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant.Info.stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant.Info.pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Survival <- Plant.Info.Analysis %>% #
	dplyr::select(-c(#
		FirstDeadObservation, #
		FirstMissingObservation, #
		FirstDeadMissingObservation,#
		First.Survey.Date,#
		First.Survey.Date.Alive,#
		First.Measurement.Date,#
		LastDateAlive#
	)) %>% #
	.[complete.cases(.),]#
# Plant.Info.Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant.Info.Survival.stricta <- Plant.Info.Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant.Info.Survival.pusilla <- Plant.Info.Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant.Info.Survival.stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant.Info.Survival.pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year %<>% calculateClonalReproduction(Plant.Surveys.by.Plant, #
	Plant.Info.Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
x <- Plant.Surveys.by.Year#
#
Plant.Surveys.by.Year %<>%#
	# dplyr::select(-Size_t) %>%#
	calculateDateLags # %>%#
	# setnames("SizewClones_t", "Size_t")#
Plant.Surveys.by.Year %<>%#
	arrange(FecundityYear) %>% #
	group_by(PlantID) %>%#
	mutate_at(#
		.funs=funs("1" = "lag"),#
		.vars=c("Size_t", "SizewClones_t", "CA_t", "ME_t", "DA_t", "CH_t", "Unknown_Moth_t", "Old_Moth_Evidence_t", "Moth_Evidence_t", "Insect_Evidence_t")#
		) %>%#
	createNewInsectVariables(#
		arrange.variable="FecundityYear", #
		grouping.variable="PlantID"#
	) %>% 			#
	mutate(#
		RGR_Size = (Size_t - Size_t_1) / (DaysSincePrevSurvey*Size_t_1),#
		max_RGR_Size = (SizewClones_t - Size_t_1) / #
			(DaysSincePrevSurvey*Size_t_1),#
		RGR_Size365 = RGR_Size*365,#
		max_RGR_Size365 = max_RGR_Size*365						#
	)#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant.Surveys.by.Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant.Surveys.by.Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"NClones_t",#
	"NSegLosttoClones_t"#
)] %<>% apply(., 2, as.integer)#
Plant.Surveys.by.Year[,c(#
	"Height_t",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"max_RGR_Size365"#
)] %<>% apply(., 2, as.numeric)#
Plant.Surveys.by.Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant.Surveys.by.Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	) %>%#
	as.data.frame#
# --------------------------------------------------------------------------- ##
Plant.Surveys.by.Year %<>% classifybyStage#
#
Data <- Plant.Surveys.by.Year#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original.Plant.Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant.Surveys.by.Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# ---------------------------------------------------------------------------
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot.Surveys[which(Plot.Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot.Surveys[which(Plot.Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot.Info %<>% processOccupancyPlotInfo(Plot.Vegetation, GIS.data.upd)#
#
# check errors by keeping track of dataframe size#
Plot.Info.Size = as.data.frame(matrix(NA, 1, 1))#
Plot.Info.Size[, 1] = dim(Plot.Info)[1]#
#
Plot.Surveys %<>% processOccupancyPlotSurveys(Plot.Info)#
#
write.csv(Plot.Info, "../data/Plot_Info.csv")#
write.csv(Plot.Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year %<>% estimateCactusDensityperPlot(Plot.Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year %>% filter(is.na(Species)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(PlantID)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(RecruitmentMode)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(Network)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(Island)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(HabitatType)) %$% dim(.)[1]#
Plant.Surveys.by.Year %>% filter(is.na(cactus_density_per_plot)) %$% dim(.)[1]#
# 4812 without RGR#
Plant.Surveys.by.Year %>% filter(is.na(RGR_Size365)) %$% dim(.)[1]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year %>% filter(#
	is.na(RGR_Size365),#
	minFecundityYear == FecundityYear | # first-year surveys#
	Alive == 0 | # dead so would have no current size#
	PrevFecundityYear == 2012 | # no spring/summer survey in 2012#
	PrevFecundityYear == 2011 # no spring/summer survey in 2011#
) %$% dim(.)[1]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year %>% filter(#
	is.na(RGR_Size365),#
	minFecundityYear != FecundityYear, # first-year surveys#
	Alive != 0, # dead so would have no current size#
	PrevFecundityYear != 2012, # no spring/summer survey in 2012#
	PrevFecundityYear != 2011 # no spring/summer survey in 2011#
) %>% head
Plant.Surveys.by.Year %>% filter(#
	is.na(RGR_Size365),#
	minFecundityYear != FecundityYear, # first-year surveys#
	Alive != 0, # dead so would have no current size#
	PrevFecundityYear != 2012, # no spring/summer survey in 2012#
	PrevFecundityYear != 2011 # no spring/summer survey in 2011#
) %>% tail
Plant.Surveys.by.Year %>% filter(PlantID==9164)
Plant.Surveys.by.Plant %>% filter(PlantID==9164)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)#
Plant.Surveys.by.Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant.Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant.Surveys.by.Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant.Surveys.by.Plant),#
	warning = h#
)#
#
# find and keep only first dead/missing observation#
temp <- Plant.Surveys.by.Plant %>% findFirstDeadMissingObservation#
# create Fecundity and RGR dataset#
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)#
#
# --------------------------------------------------------------------------- ##
# which plants are missing size surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
# which plants are missing fruit/flowers surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
#
# these plantID and fecundity year combos are missing spring/summer surveys#
temp1 <- Plant.Surveys.by.Year %>% #
	filter(#
		is.na(SurveyDate_SpringSummer),#
		DeadMissingbyEndofYear != 1#
	) %>%#
	dplyr::select(PlantID, FecundityYear)#
temp1 <- Plant.Surveys.by.Plant %>%#
	filter(#
		Dead != 1 & Missing != 1,#
		month(Date) == 5 |#
		month(Date) == 6 |#
		month(Date) == 7 |#
		month(Date) == 8 |#
		month(Date) == 9,#
		is.na(Size_t)#
	) %>%#
	merge(#
		temp1,#
		by = c("PlantID", "FecundityYear")#
	) %>%#
	filter(!(#
			PlantID == 7548 & Date == "2014-09-05" |#
			PlantID == 7773 & Date == "2014-09-21" |#
			PlantID == 7774 & Date == "2014-09-21" |#
			PlantID == 7778 & Date == "2014-09-21" |#
			PlantID == 7791 & Date == "2014-09-21" |#
			PlantID == 7792 & Date == "2014-09-21" |#
			PlantID == 7793 & Date == "2014-09-21" |#
			PlantID == 7794 & Date == "2014-09-21" |#
			PlantID == 7795 & Date == "2014-09-21" |#
			PlantID == 7807 & Date == "2014-09-21" |#
			PlantID == 7810 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-06-28" |#
			PlantID == 8088 & Date == "2014-06-04" |#
			PlantID == 8647 & Date == "2013-07-18" |#
			PlantID == 8652 & Date == "2013-07-23" |#
			PlantID == 8653 & Date == "2013-07-23" |#
			PlantID == 9156 & Date == "2014-06-10" |#
			PlantID == 9156 & Date == "2014-09-11" |#
			PlantID == 9561 & Date == "2014-06-24" |#
			PlantID == 9561 & Date == "2014-05-12" |#
			PlantID == 9682 & Date == "2014-06-02" |#
			PlantID == 9024 & Date == "2014-06-25" |#
			PlantID == 9220 & Date == "2013-07-18" |#
			PlantID == 9220 & Date == "2013-05-21" |#
			PlantID == 9371 & Date == "2015-05-26"#
	)) %>%#
	dplyr::select(PlantID, Date)#
if (dim(temp)[1] > 0) {#
	write.csv(temp1, "SpringSummerSurveyswoSizeFruit.csv")#
	warning("Some plants are missing size/fruit records for spring/summer surveys. Data written to csv file.")#
}#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)#
#
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp.A <- filter(Plant.Surveys, N.PlotPlantIDs > 1) %>% arrange(Date)#
	Z = list()
L = filter(temp.A, PlantID==9164)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (max(L$Date) - min(L$Date) > #
			SequenceofDates[2] - SequenceofDates[1]) {#
			L.list <- L %>%#
				split(#
				.,#
				cut(#
					L$Date,#
					SequenceofDates#
				)#
			)#
			L.list %<>% .[sapply(., function(x) dim(x)[1]) > 0]#
			L.list %<>% lapply(., function(x) split(x, x$DemographicSurvey))#
			L.list %<>% unlist(recursive=F)#
			list.names <- gsub("\\..*","", names(L.list))#
			demography.surveys <- gsub("^.*\\.","", names(L.list))#
			Z[[i]] 	<- data.frame(#
				Date = list.names,#
				DemographicSurvey = demography.surveys#
			)#
		} else {#
			L.list <- list(L)#
			names(L.list) <- max(L.list[[1]]$Date)#
			Z[[i]] <- data.frame(Date = max(L.list[[1]]$Date))#
		}#
		Z[[i]][, "PlantID"] 			<- L$PlantID[1]#
		# for each window of dates#
		for (j in 1:length(names(L.list))) {#
			K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# ---------------------------------------------------------------- ##
			# get list of PlotPlantIDs alive at this time#
			# plant would be dead if no PlantID records showed up in N#
			N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)#
			# the plant can only be marked dead if no live part was surveyed and no parts remained unsurveyed#
			if (dim(M)[1] == 0 & dim(N)[1] == 0 & dim(O)[1] > 0) {#
				Z[[i]][j, "Dead"]	 <- Maximum(O$Dead)#
				Z[[i]][j, "Missing"] <- Maximum(O$Missing)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					O$PlotPlantID, collapse=","#
				)#
				Z[[i]][j, "DeadDuetoMothDamage"] <- paste(#
					O$DeadDuetoMothDamage,#
					collapse=","#
				)#
			} else#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)) {#
				Z[[i]][j, "CA_t"] 					<- mysum2(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum2(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum2(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum2(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum2(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum2(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum2(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			} else {#
				# if all PlotPlantIDs were NOT surveyed on this date consider the insect to be detected if the sum is greater than zero#
				Z[[i]][j, "CA_t"] 					<- mysum1(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum1(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum1(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum1(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum1(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum1(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum1(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "FALSE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			}#
			# Number of segments#
			Z[[i]][j, "Size_t"] 					<- mysum(M$Size_t)#
			Z[[i]][j, "SizeInPlots_t"] <- #
				mysum(M$Size_t[which(M$OutsideOfPlot!="Yes")])#
			Z[[i]][j, "Plant_Segments_w_leaves"] <- #
				mysum(M$Plant_Segments_w_leaves)#
			Z[[i]][j, "Plant_Segments_wo_leaves"] <-#
			 	mysum(M$Plant_Segments_wo_leaves)#
			Z[[i]][j, "Plant_Segments_woody"] <- mysum(M$Plant_Segments_woody)#
			# Size#
			Z[[i]][j, "Height_t"] 			<- Maximum(M$Height_t)#
			Z[[i]][j, "Width_t"] 			<- Maximum(M$Width_t)#
			Z[[i]][j, "Perpen_Width"] 		<- Maximum(M$Perpen_Width)#
			# Fruit	and Flowers#
			Z[[i]][j, "Num_FlowerBuds"] 			<- mysum(M$Num_FlowerBuds)#
			Z[[i]][j, "Num_Fruit_red"] 				<- mysum(M$Num_Fruit_red)#
			Z[[i]][j, "Num_Fruit_green"] 			<- mysum(M$Num_Fruit_green)#
			Z[[i]][j, "Num_Flowers"] 				<- mysum(M$Num_Flowers)#
			Z[[i]][j, "Fruit_t"] 					<- mysum(M$Fruit_t)#
			Z[[i]][j, "Fruit_Flowers_t"] 			<- mysum(M$Fruit_Flowers_t)#
			Z[[i]][j, "DemographicSurvey"] 			<- K$DemographicSurvey[1]#
			Z[[i]][j, "FecundityYear"] 				<- K$FecundityYear[1]#
			Z[[i]][j, "OutsideOfPlot"] 				<- ""#
			Z[[i]][j, "DeadDuetoMothDamage"] 		<- ""#
			Z[[i]][j, "PlantPictures"]			 	<- paste(#
				K$PlantPictures[which(!is.na(K$PlantPictures))],#
				collapse=","#
			)#
			# Paste PlotPlantIDs together to know which plants were surveyed on this date#
		}
Z
j=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# --------------------
M
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)#
			# the plant can only be marked dead if no live part was surveyed and no parts remained unsurveyed#
			if (dim(M)[1] == 0 & dim(N)[1] == 0 & dim(O)[1] > 0) {#
				Z[[i]][j, "Dead"]	 <- Maximum(O$Dead)#
				Z[[i]][j, "Missing"] <- Maximum(O$Missing)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					O$PlotPlantID, collapse=","#
				)#
				Z[[i]][j, "DeadDuetoMothDamage"] <- paste(#
					O$DeadDuetoMothDamage,#
					collapse=","#
				)#
			} else#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)) {#
				Z[[i]][j, "CA_t"] 					<- mysum2(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum2(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum2(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum2(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum2(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum2(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum2(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			} else {#
				# if all PlotPlantIDs were NOT surveyed on this date consider the insect to be detected if the sum is greater than zero#
				Z[[i]][j, "CA_t"] 					<- mysum1(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum1(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum1(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum1(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum1(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum1(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum1(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "FALSE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			}
Z
j=2
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)
M
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}
Z[[i]]
j=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)#
			# the plant can only be marked dead if no live part was surveyed and no parts remained unsurveyed#
			if (dim(M)[1] == 0 & dim(N)[1] == 0 & dim(O)[1] > 0) {#
				Z[[i]][j, "Dead"]	 <- Maximum(O$Dead)#
				Z[[i]][j, "Missing"] <- Maximum(O$Missing)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					O$PlotPlantID, collapse=","#
				)#
				Z[[i]][j, "DeadDuetoMothDamage"] <- paste(#
					O$DeadDuetoMothDamage,#
					collapse=","#
				)#
			} else#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)) {#
				Z[[i]][j, "CA_t"] 					<- mysum2(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum2(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum2(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum2(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum2(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum2(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum2(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			} else {#
				# if all PlotPlantIDs were NOT surveyed on this date consider the insect to be detected if the sum is greater than zero#
				Z[[i]][j, "CA_t"] 					<- mysum1(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum1(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum1(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum1(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum1(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum1(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum1(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "FALSE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			}#
			# Number of segments#
			Z[[i]][j, "Size_t"] 					<- mysum(M$Size_t)#
			Z[[i]][j, "SizeInPlots_t"] <- #
				mysum(M$Size_t[which(M$OutsideOfPlot!="Yes")])#
			Z[[i]][j, "Plant_Segments_w_leaves"] <- #
				mysum(M$Plant_Segments_w_leaves)#
			Z[[i]][j, "Plant_Segments_wo_leaves"] <-#
			 	mysum(M$Plant_Segments_wo_leaves)#
			Z[[i]][j, "Plant_Segments_woody"] <- mysum(M$Plant_Segments_woody)#
			# Size#
			Z[[i]][j, "Height_t"] 			<- Maximum(M$Height_t)#
			Z[[i]][j, "Width_t"] 			<- Maximum(M$Width_t)#
			Z[[i]][j, "Perpen_Width"] 		<- Maximum(M$Perpen_Width)#
			# Fruit	and Flowers#
			Z[[i]][j, "Num_FlowerBuds"] 			<- mysum(M$Num_FlowerBuds)#
			Z[[i]][j, "Num_Fruit_red"] 				<- mysum(M$Num_Fruit_red)#
			Z[[i]][j, "Num_Fruit_green"] 			<- mysum(M$Num_Fruit_green)#
			Z[[i]][j, "Num_Flowers"] 				<- mysum(M$Num_Flowers)#
			Z[[i]][j, "Fruit_t"] 					<- mysum(M$Fruit_t)#
			Z[[i]][j, "Fruit_Flowers_t"] 			<- mysum(M$Fruit_Flowers_t)#
			Z[[i]][j, "DemographicSurvey"] 			<- K$DemographicSurvey[1]#
			Z[[i]][j, "FecundityYear"] 				<- K$FecundityYear[1]#
			Z[[i]][j, "OutsideOfPlot"] 				<- ""#
			Z[[i]][j, "DeadDuetoMothDamage"] 		<- ""#
			Z[[i]][j, "PlantPictures"]			 	<- paste(#
				K$PlantPictures[which(!is.na(K$PlantPictures))],#
				collapse=","#
			)
Z[[i]]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
j=2
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
j=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)
M
N
O
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)
j=2
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# ---------------------------------------------------------------- ##
			# get list of PlotPlantIDs alive at this time#
			# plant would be dead if no PlantID records showed up in N#
			N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)
M
N
O
j=3
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
j=2
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
j=2
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))#
			# save range of dates used to create whole plant survey#
			if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					K$Date[1], #
					" - ", #
					tail(K$Date, n=1),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- as.character(K$Date[1])#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]
K
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K %>% filter(Dead != 1, Missing != 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M <- K %>% filter(Dead != 1, Missing != 1)
M
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K %>% filter(Dead != 1 | is.na(Dead), Missing != 1 | is.naMissing)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K %>% filter(Dead != 1 | is.na(Dead), Missing != 1 | is.na(Missing)
)_
K %>% filter(Dead != 1 | is.na(Dead), Missing != 1 | is.na(Missing)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
M <- K %>% filter(#
				Dead != 1 | is.na(Dead), #
				Missing != 1 | is.na(Missing)#
			)#
			# --------------------------------------------------------- WARNINGS#
			# throw error if a plotplantID is surveyed multiple times within this window and multiple records have size measurements#
			temp <- M %>% filter(SegmentsMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of segment counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(FruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records of fruit counts for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			temp <- M %>% filter(SizeMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple records of size measurements for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# ---------------------------------------------------------------- ##
			# get list of PlotPlantIDs alive at this time#
			# plant would be dead if no PlantID records showed up in N#
			N = Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)	#
			# pull all surveys where plant was marked dead#
			O <- K %>% filter(Dead == 1 | Missing == 1)#
			# the plant can only be marked dead if no live part was surveyed and no parts remained unsurveyed#
			if (dim(M)[1] == 0 & dim(N)[1] == 0 & dim(O)[1] > 0) {#
				Z[[i]][j, "Dead"]	 <- Maximum(O$Dead)#
				Z[[i]][j, "Missing"] <- Maximum(O$Missing)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					O$PlotPlantID, collapse=","#
				)#
				Z[[i]][j, "DeadDuetoMothDamage"] <- paste(#
					O$DeadDuetoMothDamage,#
					collapse=","#
				)#
			} else#
			# if all PlotPlantIDs were surveyed for a given date:#
			if (dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)) {#
				Z[[i]][j, "CA_t"] 					<- mysum2(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum2(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum2(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum2(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum2(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum2(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum2(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "TRUE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			} else {#
				# if all PlotPlantIDs were NOT surveyed on this date consider the insect to be detected if the sum is greater than zero#
				Z[[i]][j, "CA_t"] 					<- mysum1(M$CA_t)#
				Z[[i]][j, "ME_t"] 					<- mysum1(M$ME_t)#
				Z[[i]][j, "CH_t"] 					<- mysum1(M$CH_t)#
				Z[[i]][j, "DA_t"] 					<- mysum1(M$DA_t)#
				Z[[i]][j, "Unknown_Moth_t"] 		<- mysum1(M$Unknown_Moth_t)#
				Z[[i]][j, "Gerstaeckeria_t"] 		<- mysum1(M$Gerstaeckeria_t)#
				Z[[i]][j, "Old_Moth_Evidence_t"]<- mysum1(M$Old_Moth_Evidence_t)#
				Z[[i]][j, "AllSurveyed"] 			<- "FALSE"#
				Z[[i]][j, "Dead"] <- 0#
				Z[[i]][j, "Missing"] <- 0#
				Z[[i]][j, "PlantsSurveyed"] <- paste(#
					M$PlotPlantID, collapse=","#
				)#
			}#
			# Number of segments#
			Z[[i]][j, "Size_t"] 					<- mysum(M$Size_t)#
			Z[[i]][j, "SizeInPlots_t"] <- #
				mysum(M$Size_t[which(M$OutsideOfPlot!="Yes")])#
			Z[[i]][j, "Plant_Segments_w_leaves"] <- #
				mysum(M$Plant_Segments_w_leaves)#
			Z[[i]][j, "Plant_Segments_wo_leaves"] <-#
			 	mysum(M$Plant_Segments_wo_leaves)#
			Z[[i]][j, "Plant_Segments_woody"] <- mysum(M$Plant_Segments_woody)#
			# Size#
			Z[[i]][j, "Height_t"] 			<- Maximum(M$Height_t)#
			Z[[i]][j, "Width_t"] 			<- Maximum(M$Width_t)#
			Z[[i]][j, "Perpen_Width"] 		<- Maximum(M$Perpen_Width)#
			# Fruit	and Flowers#
			Z[[i]][j, "Num_FlowerBuds"] 			<- mysum(M$Num_FlowerBuds)#
			Z[[i]][j, "Num_Fruit_red"] 				<- mysum(M$Num_Fruit_red)#
			Z[[i]][j, "Num_Fruit_green"] 			<- mysum(M$Num_Fruit_green)#
			Z[[i]][j, "Num_Flowers"] 				<- mysum(M$Num_Flowers)#
			Z[[i]][j, "Fruit_t"] 					<- mysum(M$Fruit_t)#
			Z[[i]][j, "Fruit_Flowers_t"] 			<- mysum(M$Fruit_Flowers_t)#
			Z[[i]][j, "DemographicSurvey"] 			<- K$DemographicSurvey[1]#
			Z[[i]][j, "FecundityYear"] 				<- K$FecundityYear[1]#
			Z[[i]][j, "OutsideOfPlot"] 				<- ""#
			Z[[i]][j, "DeadDuetoMothDamage"] 		<- ""#
			Z[[i]][j, "PlantPictures"]			 	<- paste(#
				K$PlantPictures[which(!is.na(K$PlantPictures))],#
				collapse=","#
			)
Z
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dim(M)[1] > 0 & all(M$PlotPlantID %in% N$PlotPlantID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Info %>%#
				filter( #
					PlantID==L$PlantID[1],#
					# only include plants that are listed as having been added to Plant.Info on or after Date#
					as.Date(PlotPlantID.First.Survey.Date.Alive) <= #
					(as.Date(Z[[i]]$Date[j]) + date.window),#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date.window | #
						is.na(FirstDeadMissingObservation)==T#
				)
M
