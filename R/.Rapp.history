setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(PlantID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# remove Parent survey dates that are after offspring was observed#
		filter(Parent.Obs.Date <= First.Survey.Date) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date", "Date")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D %<>% addSamplingYear
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# figure out parent size#
	parent_size <- D %>% #
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		# still need to count number of clones per size class#
		summarise(n.clones=length(unique(PlantID))) %>%#
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		summarise(#
			n.clones = n.clones[1],#
			n.offspring.segments = Offspring.Size_t * n.clones#
			) %>%#
		as.data.frame %>% #
		group_by(Parent, SamplingYear) %>%#
		# calculate Parent size as observed parent size plus all offspring; this ensures that a parent cannot have size equal to or less than offspring#
		mutate(Parent_Size_t = Parent.Size_t[1] + sum(n.offspring.segments)) %>%#
		ungroup %>%#
		dplyr::select(Parent, SamplingYear, Parent_Size_t) %>%#
		unique
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# merge offspring info with parent size info#
	D %<>% #
		as.data.frame %>%#
	   	dplyr::select(Parent, SamplingYear, PlantID, Offspring.Size_t) %>%#
		merge(parent_size, by=c("Parent", "SamplingYear"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
SizeClass <- c(0:5,10,140)#
	Parent_Size_Class <- cut(D$Parent_Size_t, SizeClass, include.lowest=T, labels=FALSE)#
	E <- cbind(D, Parent_Size_Class)#
	Offspring_Size_Class <- cut(E$Offspring.Size_t, SizeClass, include.lowest=T, labels=FALSE)#
	clone_production <- cbind(E, Offspring_Size_Class)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
table(clone_production$Offspring_Size_Class, clone_production$Parent_Size_Class)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
loss_to_clones <- clone_production %>% #
		group_by(Parent, SamplingYear) %>%#
		summarise(#
			Clones_t = length(unique(PlantID)),#
			Size_t_w_clone = paste(unique(Parent_Size_t), collapse=","),#
			Loss_to_Offspring = sum(Offspring.Size_t)#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones <- merge(#
			Plant_Surveys_by_Year, #
			loss_to_clones, #
			by.x=c("PlantID", "SamplingYear"), #
			by.y=c("Parent", "SamplingYear"),#
			all=T#
		) %>% #
		as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones %<>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			),#
			Size_t_w_clone = replace(#
				Size_t_w_clone,#
				which(is.na(Size_t_w_clone)),#
				Size_t#
			),#
			Loss_to_Offspring = replace(#
				Loss_to_Offspring,#
				which(is.na(Loss_to_Offspring)),#
				0#
			)#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t")#
	# prep offspring survey data#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t")#
	# merge parent data with offspring info#
	C <- Plant_Info_Analysis %>%#
		merge(#
			A, #
			by.x="Parent", #
			by.y="PlantID", #
			all=T#
		) %>%#
		# merge first offspring size#
		filter(!is.na(PlantID)) %>%#
		merge(#
			B,#
			by="PlantID", #
			all.x=T#
			) %>%#
			filter(!is.na(Parent))#
	D <- C %>%#
		group_by(PlantID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# remove Parent survey dates that are after offspring was observed#
		filter(Parent.Obs.Date <= First.Survey.Date) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date", "Date")
head(D)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D %<>% addSamplingYear
D %>% as.data.frame %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t")#
	# prep offspring survey data#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t")#
	# merge parent data with offspring info#
	C <- Plant_Info_Analysis %>%#
		merge(#
			A, #
			by.x="Parent", #
			by.y="PlantID", #
			all=T#
		) %>%#
		# merge first offspring size#
		filter(!is.na(PlantID)) %>%#
		merge(#
			B,#
			by="PlantID", #
			all.x=T#
			) %>%#
			filter(!is.na(Parent))#
	D <- C %>%#
		group_by(PlantID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# remove Parent survey dates that are after offspring was observed#
		filter(Parent.Obs.Date <= First.Survey.Date) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date", "Date")	#
	D %<>% addSamplingYear#
	# figure out parent size#
	parent_size <- D %>% #
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		# still need to count number of clones per size class#
		summarise(n.clones=length(unique(PlantID))) %>%#
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		summarise(#
			n.clones = n.clones[1],#
			n.offspring.segments = Offspring.Size_t * n.clones#
			) %>%#
		as.data.frame %>% #
		group_by(Parent, SamplingYear) %>%#
		# calculate Parent size as observed parent size plus all offspring; this ensures that a parent cannot have size equal to or less than offspring#
		mutate(Parent_Size_t = Parent.Size_t[1] + sum(n.offspring.segments)) %>%#
		ungroup %>%#
		dplyr::select(Parent, SamplingYear, Parent_Size_t) %>%#
		unique#
	# merge offspring info with parent size info#
	D %<>% #
		as.data.frame %>%#
	   	dplyr::select(Parent, SamplingYear, PlantID, Offspring.Size_t) %>%#
		merge(parent_size, by=c("Parent", "SamplingYear"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
SizeClass <- c(0:5,10,140)#
	Parent_Size_Class <- cut(D$Parent_Size_t, SizeClass, include.lowest=T, labels=FALSE)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Parent_Size_Class
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
SizeClass <- c(0:5,10,140)#
	Parent_Size_Class <- cut(D$Parent_Size_t, SizeClass, include.lowest=T, labels=FALSE)#
	E <- cbind(D, Parent_Size_Class)
head(E)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Offspring_Size_Class <- cut(E$Offspring.Size_t, SizeClass, include.lowest=T, labels=FALSE)#
	clone_production <- cbind(E, Offspring_Size_Class)
head(clone_production)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
loss_to_clones <- clone_production %>% #
		group_by(Parent, SamplingYear) %>%#
		summarise(#
			Clones_t = length(unique(PlantID)),#
			Size_t_w_clone = paste(unique(Parent_Size_t), collapse=","),#
			Loss_to_Offspring = sum(Offspring.Size_t)#
		)
head(loss_to_clones)
tail(clone_production)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t")#
	# prep offspring survey data#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t")#
	# merge parent data with offspring info#
	C <- Plant_Info_Analysis %>%#
		merge(#
			A, #
			by.x="Parent", #
			by.y="PlantID", #
			all=T#
		) %>%#
		# merge first offspring size#
		filter(!is.na(PlantID)) %>%#
		merge(#
			B,#
			by="PlantID", #
			all.x=T#
			) %>%#
			filter(!is.na(Parent))#
	D <- C %>%#
		group_by(PlantID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# remove Parent survey dates that are after offspring was observed#
		filter(Parent.Obs.Date <= First.Survey.Date) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date", "Date")	#
	D %<>% addSamplingYear#
	# figure out parent size#
	parent_size <- D %>% #
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		# still need to count number of clones per size class#
		summarise(n.clones=length(unique(PlantID))) %>%#
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		summarise(#
			n.clones = n.clones[1],#
			n.offspring.segments = Offspring.Size_t * n.clones#
			) %>%#
		as.data.frame %>% #
		group_by(Parent, SamplingYear) %>%#
		# calculate Parent size as observed parent size plus all offspring; this ensures that a parent cannot have size equal to or less than offspring#
		mutate(Parent_Size_t = Parent.Size_t[1] + sum(n.offspring.segments)) %>%#
		ungroup %>%#
		dplyr::select(Parent, SamplingYear, Parent_Size_t) %>%#
		unique#
	# merge offspring info with parent size info#
	D %<>% #
		as.data.frame %>%#
	   	dplyr::select(Parent, SamplingYear, PlantID, Offspring.Size_t) %>%#
		merge(parent_size, by=c("Parent", "SamplingYear"))#
	# need to know number of segments produced per size class#
	loss_to_clones <- D %>% #
		group_by(Parent, SamplingYear) %>%#
		summarise(#
			Clones_t = length(unique(PlantID)),#
			Size_t_w_clone = paste(unique(Parent_Size_t), collapse=","),#
			Loss_to_Offspring = sum(Offspring.Size_t)#
		)#
#
	Plant_Surveys_by_Yearw_clones <- merge(#
			Plant_Surveys_by_Year, #
			loss_to_clones, #
			by.x=c("PlantID", "SamplingYear"), #
			by.y=c("Parent", "SamplingYear"),#
			all=T#
		) %>% #
		as.data.frame#
	Plant_Surveys_by_Yearw_clones %<>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			),#
			Size_t_w_clone = replace(#
				Size_t_w_clone,#
				which(is.na(Size_t_w_clone)),#
				Size_t#
			),#
			Loss_to_Offspring = replace(#
				Loss_to_Offspring,#
				which(is.na(Loss_to_Offspring)),#
				0#
			)#
		)#
	Plant_Surveys_by_Yearw_clones$Size_t_w_clone %<>% as.numeric#
	# presence of clonal reproduction#
	Plant_Surveys_by_Yearw_clones$ClonePres_t <- ifelse(#
		Plant_Surveys_by_Yearw_clones$Loss_to_Offspring > 0,#
		1,#
		0#
	)
head(Plant_Surveys_by_Yearw_clones)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t")#
	# prep offspring survey data#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		#filter(Species=="Opuntia stricta") %>%#
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t")#
	# merge parent data with offspring info#
	C <- Plant_Info_Analysis %>%#
		merge(#
			A, #
			by.x="Parent", #
			by.y="PlantID", #
			all=T#
		) %>%#
		# merge first offspring size#
		filter(!is.na(PlantID)) %>%#
		merge(#
			B,#
			by="PlantID", #
			all.x=T#
			) %>%#
			filter(!is.na(Parent))#
	D <- C %>%#
		group_by(PlantID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# remove Parent survey dates that are after offspring was observed#
		filter(Parent.Obs.Date <= First.Survey.Date) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date", "Date")	#
	D %<>% addSamplingYear#
	# figure out parent size#
	parent_size <- D %>% #
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		# still need to count number of clones per size class#
		summarise(n.clones=length(unique(PlantID))) %>%#
		group_by(Parent, SamplingYear, Parent.Size_t, Offspring.Size_t) %>%#
		summarise(#
			n.clones = n.clones[1],#
			n.offspring.segments = Offspring.Size_t * n.clones#
			) %>%#
		as.data.frame %>% #
		group_by(Parent, SamplingYear) %>%#
		# calculate Parent size as observed parent size plus all offspring; this ensures that a parent cannot have size equal to or less than offspring#
		mutate(Parent_Size_t = Parent.Size_t[1] + sum(n.offspring.segments)) %>%#
		ungroup %>%#
		dplyr::select(Parent, SamplingYear, Parent_Size_t) %>%#
		unique#
	# merge offspring info with parent size info#
	D %<>% #
		as.data.frame %>%#
	   	dplyr::select(Parent, SamplingYear, PlantID, Offspring.Size_t) %>%#
		merge(parent_size, by=c("Parent", "SamplingYear"))#
	# need to know number of segments produced per size class#
	loss_to_clones <- D %>% #
		group_by(Parent, SamplingYear) %>%#
		summarise(#
			Clones_t = length(unique(PlantID)),#
			Size_t_w_clone = paste(unique(Parent_Size_t), collapse=","),#
			Loss_to_Offspring = sum(Offspring.Size_t)#
		)#
#
	Plant_Surveys_by_Yearw_clones <- merge(#
			Plant_Surveys_by_Year, #
			loss_to_clones, #
			by.x=c("PlantID", "SamplingYear"), #
			by.y=c("Parent", "SamplingYear"),#
			all=T#
		) %>% #
		as.data.frame#
	Plant_Surveys_by_Yearw_clones %<>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			),#
			Size_t_w_clone = replace(#
				Size_t_w_clone,#
				which(is.na(Size_t_w_clone)),#
				Size_t#
			),#
			Loss_to_Offspring = replace(#
				Loss_to_Offspring,#
				which(is.na(Loss_to_Offspring)),#
				0#
			)#
		)#
	Plant_Surveys_by_Yearw_clones$Size_t_w_clone %<>% as.numeric#
	# presence of clonal reproduction#
	Plant_Surveys_by_Yearw_clones$ClonePres_t <- ifelse(#
		Plant_Surveys_by_Yearw_clones$Loss_to_Offspring > 0,#
		1,#
		0#
	)
head(Plant_Surveys_by_Yearw_clones)
Plant_Surveys_by_Yearw_clones$Clones_t %>% filter(is.na())
Plant_Surveys_by_Yearw_clones %>% filter(is.na(Clones_t))
Plant_Surveys_by_Yearw_clones %>% filter(is.na(Size_t_w_clone))
Plant_Surveys_by_Yearw_clones %>% filter(is.na(Loss_to_Offspring))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones %<>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones %<>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			),#
			Size_t_w_clone = replace(#
				Size_t_w_clone,#
				which(is.na(Size_t_w_clone)),#
				Size_t#
			)
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones %<>%#
		rowwise %>%#
		mutate(#
			Clones_t = replace(#
				Clones_t,#
				which(is.na(Clones_t)),#
				0#
			),#
			Size_t_w_clone = replace(#
				Size_t_w_clone,#
				which(is.na(Size_t_w_clone)),#
				Size_t#
			),#
			Loss_to_Offspring = replace(#
				Loss_to_Offspring,#
				which(is.na(Loss_to_Offspring)),#
				0#
			)#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Yearw_clones$Size_t_w_clone %<>% as.numeric#
	# presence of clonal reproduction#
	Plant_Surveys_by_Yearw_clones$ClonePres_t <- ifelse(#
		Plant_Surveys_by_Yearw_clones$Loss_to_Offspring > 0,#
		1,#
		0#
	)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring",#
	"CA_t_2",#
	"ME_t_2",#
	"Old_Moth_Evidence_t_2",#
	"Insect_t_2",#
	"CA_t_3",#
	"ME_t_3",#
	"Old_Moth_Evidence_t_3",#
	"Insect_t_3"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys_by_Year %>% #
		filter(is.na(Size_t))#
	if (dim(temp)[1] > 0) {#
		warning("Some plant sizes = NA. Data written to csv file.")#
		temp %>% write.csv("plants_w_no_size.csv")#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plot_Info %>%#
		group_by(Network) %>%#
		summarise(n_plots = length(Tag_Number))#
	# count plants per demographic plot per demographic survey#
	temp_A <- Plant_Surveys_by_Year %>%#
		filter(Dead==0 & Missing==0) %>%#
		group_by(SamplingYear, Network, Species) %>%#
		summarise(#
			#N_plants = length(unique(PlantID)),#
			N_segments = sum(Size_t, na.rm=T),#
			Island = Island[1]#
		) %>%#
		as.data.frame %>%#
		arrange(Network, SamplingYear) %>%#
		dcast(#
			., #
			SamplingYear + Network + Island ~ Species, #
			value.var="N_segments"#
		) %>%#
		setnames("Opuntia pusilla", "pusilla_density") %>%#
		setnames("Opuntia stricta", "stricta_density") %>%#
		merge(temp, by="Network")
head(Plant_Surveys_by_Year)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData
head(Plant_Surveys_by_Year)
Data <- Plant_Surveys_by_Year
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Data$Stage <- Data$RecruitmentMode#
	Data[which(Data$Stage!="Seedling"), ]$Stage <- "Adult"#
	Data[which(is.na(Data$Stage)), ]$Stage <- "Adult"#
	Data[which(Data$DeadbyEndofYear==1), ]$Stage <- "Dead"#
	Data[which(Data$MissingbyEndofYear==1), ]$Stage <- "Dead"#
	# fix Seedling category#
	stages <- Data$Stage#
	temp <- split(Data, stages)#
	temp$Seedling %<>% #
		group_by(PlantID) %>%#
		mutate(FirstObs = min(Date)) %>%#
		as.data.frame %>%#
		mutate(#
			# individuals remain a seedling only for one year, then automatically transition to a "juvenile" stage#
			Stage = replace(#
				Stage,#
				which(Date > FirstObs),#
				"Juvenile"#
			),#
			# once the plant reaches two segments, it is no longer a juvenile#
			Stage = replace(#
				Stage,#
				which(Size_t > 1),#
				"Adult"#
			)#
		) %>%#
		group_by(PlantID) %>%#
		mutate(FirstAdult = ifelse(#
			max(Size_t) > 1,#
			min(Date[which(Size_t > 1)]),#
			NA#
		)) %>%#
		# once plants reach "Adult", they remain "Adult", even if they retrogress to one segment#
		mutate(#
			Stage = replace(#
				Stage,#
				which(Date > FirstAdult),#
				"Adult"#
			)#
		) %>%#
		dplyr::select(-c(FirstObs, FirstAdult)) %>%#
		as.data.frame#
		temp$Seedling$FirstAdult %<>% as.Date
Data <- Plant_Surveys_by_Year
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Data$Stage <- Data$RecruitmentMode#
	Data[which(Data$Stage!="Seedling"), ]$Stage <- "Adult"#
	Data[which(is.na(Data$Stage)), ]$Stage <- "Adult"#
	Data[which(Data$DeadbyEndofYear==1), ]$Stage <- "Dead"#
	Data[which(Data$MissingbyEndofYear==1), ]$Stage <- "Dead"#
	# fix Seedling category#
	stages <- Data$Stage#
	temp <- split(Data, stages)#
	temp$Seedling %<>% #
		group_by(PlantID) %>%#
		mutate(FirstObs = min(Date)) %>%#
		as.data.frame %>%#
		mutate(#
			# individuals remain a seedling only for one year, then automatically transition to a "juvenile" stage#
			Stage = replace(#
				Stage,#
				which(Date > FirstObs),#
				"Juvenile"#
			),#
			# once the plant reaches two segments, it is no longer a juvenile#
			Stage = replace(#
				Stage,#
				which(Size_t > 1),#
				"Adult"#
			)#
		)
Data <- Plant_Surveys_by_Year
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Data$Stage <- Data$RecruitmentMode#
	Data[which(Data$Stage!="Seedling"), ]$Stage <- "Adult"#
	Data[which(is.na(Data$Stage)), ]$Stage <- "Adult"#
	Data[which(Data$DeadbyEndofYear==1), ]$Stage <- "Dead"#
	Data[which(Data$MissingbyEndofYear==1), ]$Stage <- "Dead"#
	# fix Seedling category#
	stages <- Data$Stage#
	temp <- split(Data, stages)#
	temp$Seedling %<>% #
		group_by(PlantID) %>%#
		mutate(FirstObs = min(Date)) %>%#
		as.data.frame %>%#
		mutate(#
			# individuals remain a seedling only for one year, then automatically transition to a "juvenile" stage#
			Stage = replace(#
				Stage,#
				which(Date > FirstObs),#
				"Juvenile"#
			),#
			# once the plant reaches two segments, it is no longer a juvenile#
			Stage = replace(#
				Stage,#
				which(Size_t > 1),#
				"Adult"#
			)#
		) %>%#
		group_by(PlantID) %>%#
		mutate(FirstAdult = ifelse(#
			max(Size_t) > 1,#
			min(Date[which(Size_t > 1)]),#
			NA#
		)) %>%#
		# once plants reach "Adult", they remain "Adult", even if they retrogress to one segment#
		mutate(#
			Stage = replace(#
				Stage,#
				which(Date > FirstAdult),#
				"Adult"#
			)#
		)
Data <- Plant_Surveys_by_Year
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Data$Stage <- Data$RecruitmentMode#
	Data[which(Data$Stage!="Seedling"), ]$Stage <- "Adult"#
	Data[which(is.na(Data$Stage)), ]$Stage <- "Adult"#
	Data[which(Data$DeadbyEndofYear==1), ]$Stage <- "Dead"#
	Data[which(Data$MissingbyEndofYear==1), ]$Stage <- "Dead"#
	# fix Seedling category#
	stages <- Data$Stage#
	temp <- split(Data, stages)#
	temp$Seedling %<>% #
		group_by(PlantID) %>%#
		mutate(FirstObs = min(Date)) %>%#
		as.data.frame %>%#
		mutate(#
			# individuals remain a seedling only for one year, then automatically transition to a "juvenile" stage#
			Stage = replace(#
				Stage,#
				which(Date > FirstObs),#
				"Juvenile"#
			),#
			# once the plant reaches two segments, it is no longer a juvenile#
			Stage = replace(#
				Stage,#
				which(Size_t > 1),#
				"Adult"#
			)#
		) %>%#
		group_by(PlantID) %>%#
		mutate(FirstAdult = ifelse(#
			max(Size_t) > 1,#
			min(Date[which(Size_t > 1)]),#
			NA#
		)) %>%#
		# once plants reach "Adult", they remain "Adult", even if they retrogress to one segment#
		mutate(#
			Stage = replace(#
				Stage,#
				which(Date > FirstAdult),#
				"Adult"#
			)#
		) %>%#
		dplyr::select(-c(FirstObs, FirstAdult))
Data <- Plant_Surveys_by_Year
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Data$Stage <- Data$RecruitmentMode#
	Data[which(Data$Stage!="Seedling"), ]$Stage <- "Adult"#
	Data[which(is.na(Data$Stage)), ]$Stage <- "Adult"#
	Data[which(Data$DeadbyEndofYear==1), ]$Stage <- "Dead"#
	Data[which(Data$MissingbyEndofYear==1), ]$Stage <- "Dead"#
	# fix Seedling category#
	stages <- Data$Stage#
	temp <- split(Data, stages)#
	temp$Seedling %<>% #
		group_by(PlantID) %>%#
		mutate(FirstObs = min(Date)) %>%#
		as.data.frame %>%#
		mutate(#
			# individuals remain a seedling only for one year, then automatically transition to a "juvenile" stage#
			Stage = replace(#
				Stage,#
				which(Date > FirstObs),#
				"Juvenile"#
			),#
			# once the plant reaches two segments, it is no longer a juvenile#
			Stage = replace(#
				Stage,#
				which(Size_t > 1),#
				"Adult"#
			)#
		) %>%#
		group_by(PlantID) %>%#
		mutate(FirstAdult = ifelse(#
			max(Size_t) > 1,#
			min(Date[which(Size_t > 1)]),#
			NA#
		)) %>%#
		# once plants reach "Adult", they remain "Adult", even if they retrogress to one segment#
		mutate(#
			Stage = replace(#
				Stage,#
				which(Date > FirstAdult),#
				"Adult"#
			)#
		) %>%#
		dplyr::select(-c(FirstObs, FirstAdult)) %>%#
		as.data.frame
head(temp$Seedling$FirstAdult)
temp$Seedling$FirstAdult
head(temp)
str(temp)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys_by_Year %>% #
		filter(is.na(Size_t))#
	if (dim(temp)[1] > 0) {#
		warning("Some plant sizes = NA. Data written to csv file.")#
		temp %>% write.csv("plants_w_no_size.csv")#
	}#
	# need to control for # of plots in network#
	temp <- Plot_Info %>%#
		group_by(Network) %>%#
		summarise(n_plots = length(Tag_Number))#
	# count plants per demographic plot per demographic survey#
	temp_A <- Plant_Surveys_by_Year %>%#
		filter(DeadbyEndofYear==0 & MissingbyEndofYear==0) %>%#
		group_by(SamplingYear, Network, Species) %>%#
		summarise(#
			#N_plants = length(unique(PlantID)),#
			N_segments = sum(Size_t, na.rm=T),#
			Island = Island[1]#
		) %>%#
		as.data.frame %>%#
		arrange(Network, SamplingYear) %>%#
		dcast(#
			., #
			SamplingYear + Network + Island ~ Species, #
			value.var="N_segments"#
		) %>%#
		setnames("Opuntia pusilla", "pusilla_density") %>%#
		setnames("Opuntia stricta", "stricta_density") %>%#
		merge(temp, by="Network")#
	temp_A[which(is.na(temp_A$pusilla_density)), ]$pusilla_density <- 0#
	temp_A[which(is.na(temp_A$stricta_density)), ]$stricta_density <- 0#
	temp_A %<>%#
		rowwise() %>%#
		mutate(#
			cactus_density = pusilla_density + stricta_density,#
			pusilla_density_per_plot = pusilla_density/n_plots,#
			stricta_density_per_plot = stricta_density/n_plots,#
			cactus_density_per_plot = cactus_density/n_plots#
		)#
	Plant_Surveys_by_Year %<>% #
		merge(temp_A, by=c("SamplingYear", "Network", "Island"))
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		Dead,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]
head(Plant_Surveys_by_Year)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
str(Plant_Surveys_by_Year)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
head(Plant_Surveys_by_Year)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_Survival %>% filter(DeadbyEndofYear==1) %$% unique(PlantID)
head(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis %>%#
		filter(Dead==1) %$%#
		unique(PlantID)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis[!(plant_surveys_dead %in% plant_info_dead), ] %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(DeadbyEndofYear==1) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
	filter(Dead==1) %$%#
	unique(PlantID)#
Plant_Info_Analysis[!(plant_surveys_dead %in% plant_info_dead), ] %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis[!(plant_info_dead %in% plant_surveys_dead), ] %>% head
Plant_Surveys_by_Year %>% filter(PlantID=="8715")
Plant_Surveys_by_Year %>% filter(PlantID=="8715") %>% arrange(Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_info_dead <- Plant_Info_Analysis %>%#
	filter(Dead==1)
head(plant_info_dead)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(DeadbyEndofYear==1) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
	filter(Dead==1)#
#
Plant_Info_Analysis[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head
Plant_Surveys_by_Year %>% filter(PlantID=="9155") %>% arrange(Date)
Plant_Surveys_by_Year %>% filter(PlantID=="9183") %>% arrange(Date)
Plant_Surveys_by_Year %>% filter(PlantID=="9201") %>% arrange(Date)
Plant_Surveys_by_Year %>% filter(PlantID=="9204") %>% arrange(Date)
Plant_Surveys_Survival %>% filter(PlantID == "9204")
Plant_Info %>% filter(PlantID == "9204")
Plant_Info_Analysis %>% filter(PlantID == "9204")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
str(Plant_Info)
str(Plant_Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dups <- Plant_Surveys %>% #
		group_by(PlantID, DateSurveyed) %>%#
		summarise(n.obs = length(Plant_collected)) %>%#
		filter(n.obs > 1)#
	if (dim(dups)[1] > 0) {stop("Duplicates observations for a PlantID, Date combination are present in the dataset.")}#
	# check for PlantID = NA#
	dups <- Plant_Surveys %>% filter(is.na(PlantID))#
	if (dim(dups)[1] > 0) {stop("NA values for PlantID.")}#
	# are all Plant IDs from the Plant Surveys data in Plant Info?#
	dups <- filter(Plant_Surveys, !(PlantID %in% Plant_Info$PlantID))[, 4:5]#
	if (dim(#
		filter(Plant_Surveys, !(PlantID %in% Plant_Info$PlantID))[, 4:5]#
	)[1] > 0) {#
		warning(paste(#
			"These Plant IDs from Plant Surveys are not in Plant Info:",#
			paste(unique(dups$PlantID), collapse=", ")#
		))#
	}#
	# Duplicates in Plant Surveys#
	# duplicates for 1795 on 2013-02-10 are okay - I accidentally surveyed the plot twice; keep it for detectability#
	dups = Plant_Surveys %>%#
		group_by(PlantID, DateSurveyed) %>%#
		summarise(Nrecords = length(First_Observer_Initials)) %>%#
		as.data.frame %>% #
		arrange(PlantID) %>%#
		filter(Nrecords > 1)#
	if (dim(dups)[1] > 0) {#
		warning(paste(#
			"Duplicate surveys on the same date for the following plants:",#
			paste(unique(dups$PlantID), collapse=", ")#
		))#
	}#
	# check for size = 0#
	dups <- Plant_Surveys %>% filter(Max_Height==0)#
		if (dim(dups)[1] > 0) {stop("Max. height values = 0.")}#
	dups <- Plant_Surveys %>% filter(Max_Width==0)#
		if (dim(dups)[1] > 0) {stop("Max. width values = 0.")}#
	dups <- Plant_Surveys %>% filter(Perpen_Width==0)#
		if (dim(dups)[1] > 0) {stop("Perpendicular width values = 0.")}#
	# ------------------------------------------------------------- CHANGE NAMES#
	# remame size and height#
	Plant_Surveys %<>%	as.data.table %>%#
		setnames("Max_Height", 				"Height_t") %>%#
		setnames("Max_Width", 				"Width_t") %>%#
		setnames("CACA_Larvae", 			"CA_t") %>%#
		setnames("MEPR_Larvae", 			"ME_t") %>%#
		setnames("CHVI_Evidence", 			"CH_t") %>%#
		setnames("DACT_Evidence", 			"DA_t") %>%#
		setnames("UnknownMoth_Evidence", 	"Unknown_Moth_t") %>%#
		setnames("Old_Moth_Evidence", 		"Old_Moth_Evidence_t") %>%#
		setnames("DateSurveyed", 			"Date") %>%#
		setnames("Gerstaeckeria", 			"Gerstaeckeria_t") %>%#
		as.data.frame#
	# formatting/preparation necessary for prepping Demographic Plant Info#
	Plant_Surveys$Date %<>% Format_Date_Function#
	Plant_Surveys %<>% arrange(Date)#
	Plant_Surveys %<>% Format_PlantIDs_Function#
	# ------------------------------------------------ CONVERT ALL "999s" to NAs#
	Plant_Surveys[,c(#
		"Plant_Segments_total", #
		"Plant_Segments_w_leaves",#
		"Plant_Segments_wo_leaves",#
		"Plant_Segments_woody",#
		"Perpen_Width",#
		"Width_t",#
		"Height_t",#
		"Num_FlowerBuds",#
		"Num_Fruit_red",#
		"Num_Fruit_green",#
		"Num_Flowers",#
		"Num_Fruit")] %<>% #
		apply(2, NA_Function#
	)#
	# ------------------- INSECT SURVEYS, MISSING, DEAD - CHANGE YES, NO to 0, 1#
	Plant_Surveys[,c(#
		"CA_t",#
		"ME_t",#
		"CH_t",#
		"DA_t",#
		"Unknown_Moth_t",#
		"Gerstaeckeria_t",#
		"Old_Moth_Evidence_t",#
		"Dead",#
		"Missing")] %<>% #
		apply(2, Yes_Function#
	)#
	Plant_Surveys[,c(#
		"CA_t",#
		"ME_t",#
		"CH_t",#
		"DA_t",#
		"Unknown_Moth_t",#
		"Gerstaeckeria_t",#
		"Old_Moth_Evidence_t",#
		"Dead",#
		"Missing")] %<>%#
		apply(2, No_Function#
	)#
	Plant_Surveys[,c(#
		"CA_t",#
		"ME_t",#
		"CH_t",#
		"DA_t",#
		"Unknown_Moth_t",#
		"Gerstaeckeria_t",#
		"Old_Moth_Evidence_t",#
		"Dead",#
		"Missing")] %<>% #
		apply(2, NA_Function#
	)#
	# ------------------------------------------------------------- MAKE NUMERIC#
	Plant_Surveys[,c(#
		"CA_t",#
		"ME_t",#
		"CH_t",#
		"DA_t",#
		"Unknown_Moth_t",#
		"Gerstaeckeria_t",#
		"Old_Moth_Evidence_t",#
		"Plant_Segments_total",#
		"Plant_Segments_w_leaves",#
		"Plant_Segments_wo_leaves",#
		"Plant_Segments_woody",#
		"Height_t",#
		"Width_t",#
		"Perpen_Width",#
		"Num_FlowerBuds",#
		"Num_Fruit_red",#
		"Num_Fruit_green",#
		"Num_Flowers",#
		"Num_Fruit",#
		"Dead",#
		"Missing")] %<>% #
		apply(2, destring#
	)#
	# ------------------------------------------------- ADD TOTAL SEGMENT COLUMN#
	# do this so that plants that have no segments recorded (all NAs) have a total segment count = NA#
	# for those plants that have fewer than four NAs (at least one segment column has a number), sum the segments#
	Plant_Surveys$Size_t <- Plant_Surveys %>%#
		dplyr::select(#
			Plant_Segments_total,#
			Plant_Segments_w_leaves,#
			Plant_Segments_wo_leaves,#
			Plant_Segments_woody#
		) %>%#
		apply(1, mysum)#
	Plant_Surveys$Size_t %<>% Zero_is_NA_Function#
	# --------------------------------------------------------- ADD FRUIT COLUMN#
	Plant_Surveys$Fruit_t <- Plant_Surveys %>%#
		dplyr::select(#
			Num_Fruit_red,#
			Num_Fruit_green,#
			Num_Fruit#
		) %>%#
		apply(1, mysum)#
	Plant_Surveys$Fruit_Flowers_t <- Plant_Surveys %>%#
		dplyr::select(#
			Num_FlowerBuds,#
			Num_Flowers,#
			Num_Fruit_red,#
			Num_Fruit_green,#
			Num_Fruit#
		) %>%#
		apply(1, mysum)#
	# ----------------------------------------------------------- ERROR MESSAGES#
	dups <- Plant_Surveys %>% filter(Size_t==0)#
		if (dim(dups)[1] > 0) {stop("Size values = 0.")}
str(Plant_Surveys)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dups <- Plant_Info %>%#
		filter(!(is.na(Size_t)) & Dead == 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dups <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Dead == 1)
dim(dups)
dups
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Missing == 1)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"Records ",#
			temp$PlantMeasureID,#
			"have size measurements but are also marked missing"#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Dead == 1)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"Records ",#
			temp$PlantMeasureID,#
			"have size measurements but are also marked dead"#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (dim(temp)[1] > 0) {#
		warning(paste(#
			"Records ",#
			paste(temp$PlantMeasureID, collapse=", "),#
			"have size measurements but are also marked dead"#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
dups <- Plant_Surveys %>% filter(Size_t==0)#
		if (dim(dups)[1] > 0) {stop("Size values = 0.")}#
	# throw a warning if a plant has a recorded size but is also marked either dead or missing#
	temp <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Dead == 1)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"PlantMeasureID Records ",#
			paste(temp$PlantMeasureID, collapse=", "),#
			"have size measurements but are also marked dead"#
		))#
	}#
	temp <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Missing == 1)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"PlantMeasureID Records ",#
			paste(temp$PlantMeasureID, collapse=", "),#
			"have size measurements but are also marked missing"#
		))#
	}#
	# -----------------------------
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
Plant_Info <- Demographic.Plant.Info#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# those marked dead/missing, then not dead/missing#
# find a 10 in concatenated?#
#
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo %>%#
	filter(InDemographicStudy=="yes")#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant %>%#
	createPlantInsectPresence#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches %>%#
	#createMothOccupancytVariable %>%#
	createMothOccupancyVariable %>%#
	createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)#
# Alive Variable#
Plant_Surveys_by_Year$Alive <- abs(Plant_Surveys_by_Year$DeadbyEndofYear - 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% calculateClonalReproduction(Plant_Surveys_by_Plant, #
	Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>%#
	dplyr::select(-Size_t) %>%#
	setnames("Size_t_w_clone", "Size_t") %>%#
	# lag variables#
	calculateSizeLags(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	calculateDateLags %>%#
	createNewInsectVariables(#
		arrange.variable="Date", #
		grouping.variable="PlantID"#
	) %>%#
	 calculateInsectLags(#
	 	arrange.variable="Date", #
	 	grouping.variable="PlantID"#
	 ) %>%#
	 #calculateInsectLags2(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	 #calculateInsectLags3(#
	 #	arrange.variable="Date", #
	 #	grouping.variable="PlantID"#
	 #) %>%#
	as.data.frame %>%#
	calculateRGR ## this leads to a few values with PlantID = NA#
#
#Plant_Surveys_by_Year %<>%#
#	setnames("ME_t_1_1", "ME_t_2") %>%#
#	setnames("CA_t_1_1", "CA_t_2") %>%#
#	setnames("Old_Moth_Evidence_t_1_1", "Old_Moth_Evidence_t_2") %>%#
#	setnames("Insect_t_1_1", "Insect_t_2") %>%#
#	setnames("ME_t_1_1_1", "ME_t_3") %>%#
#	setnames("CA_t_1_1_1", "CA_t_3") %>%#
#	setnames("Old_Moth_Evidence_t_1_1_1", "Old_Moth_Evidence_t_3") %>%#
#	setnames("Insect_t_1_1_1", "Insect_t_3")#
# --------------------------------------------------------------------------- ##
########################## ERROR MESSAGE#
	# check for PlantID = NA#
	dups <- Plant_Surveys_by_Year %>% #
		filter(is.na(PlantID))#
#
	if (dim(dups)[1] > 0) {#
			stop("NA values for PlantID.")#
	}#
# --------------------------------------------------------------------------- ##
# fix variable formats#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year[,c(#
	"Insect_Evidence_t",#
	"Moth_Evidence_t",#
	"Gerstaeckeria_t",#
	"Unknown_Moth_t",#
	"Old_Moth_Evidence_t",#
	"NatInsect_t",#
	"Insect_t",#
	"DA_t",#
	"CH_t",#
	"ME_t",#
	"CA_t",                #
	"Size_t",#
	"FruitPres_t",#
	"FruitFlowerPres_t",#
	"Fruit_t",#
	"Size_t_1",#
	"DaysSincePrevSurvey",#
	"DaysSinceStart",#
	"CA_t_1",#
	"ME_t_1",#
	"CH_t_1",#
	"DA_t_1",#
	"Insect_t_1",#
	"NatInsect_t_1",#
	"Old_Moth_Evidence_t_1",#
    "Unknown_Moth_t_1",#
	"Gerstaeckeria_t_1",#
	"Moth_Evidence_t_1",#
	"Insect_Evidence_t_1",#
	"Clones_t",#
	"Loss_to_Offspring"#
)] %<>% apply(., 2, as.integer)#
Plant_Surveys_by_Year[,c(#
	"Height_t",#
	"Height_t_1",#
 	"RGR_Height",#
 	"RGR_Height365",#
 	"RGR_Size",#
 	"RGR_Size365",#
	"DaysSinceStart"#
)] %<>% apply(., 2, as.numeric)#
Plant_Surveys_by_Year[,c(#
	"Size_t",#
	"CA_t",#
	"ME_t",#
	"Old_Moth_Evidence_t",#
	"Fruit_Flowers_t"#
)] %<>% apply(., 2, NA_Function)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %<>% classifybyStage#
# process original plant data (before new PlantIDs were given) for occupancy surveys#
Original_Plant_Data %<>% processOriginalPlantData#
#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% write.csv("../data/Plant_Surveys_by_Year.csv")#
# --------------------------------------------------------------------------- ##
Plant_Surveys_by_Year %>% #
	filter(is.na(Size_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_SizeNAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(CA_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_CANAs.csv")#
#
Plant_Surveys_by_Year %>%#
	filter(is.na(ME_t)) %>%#
	filter(Stage!="DeadbyEndofYear") %>%#
	write.csv("../data/PlantSurveys_MENAs.csv")#
#
Plant_Surveys_by_Year %>% #
	filter(is.na(Old_Moth_Evidence_t)) %>% #
	filter(Stage!="DeadbyEndofYear") %>% #
	write.csv("../data/PlantSurveys_OldMothNAs.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------- DATA CHECKING#
# compare these numbers to the numbers after data is further processed#
#
# number of CACA observations#
length(Plot_Surveys[which(Plot_Surveys$CACA_on_Stricta=="Yes"), ]$CACA_on_Stricta)#
# number of MEPR observations#
length(Plot_Surveys[which(Plot_Surveys$MEPR_on_Stricta=="Yes"), ]$MEPR_on_Stricta)#
# don't exclude all plots for the demography study#
#
# --------------------------------------------------------------------------- ##
# --------------- Occupancy Plot Info --------------------------------------- ##
# --------------------------------------------------------------------------- ##
#
Plot_Info %<>% processOccupancyPlotInfo#
#
# check errors by keeping track of dataframe size#
Plot_Info_Size = as.data.frame(matrix(NA, 1, 1))#
Plot_Info_Size[, 1] = dim(Plot_Info)[1]#
#
Plot_Surveys %<>% processOccupancyPlotSurveys#
#
write.csv(Plot_Info, "../data/Plot_Info.csv")#
write.csv(Plot_Surveys, "../data/Plot_Surveys.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% estimateCactusDensityperPlot(Plot_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# -------- CREATE Survival/Size DATASETS ------------------------------------- ##
Plant_Surveys_Survival <- Plant_Surveys_by_Year %>% 	#
	as.data.frame %>%#
 	droplevels %>% #
 	dplyr::select(#
 		Species,#
		PlantID,#
 		Date,#
		SamplingYear,#
 		Network,#
 		Island,#
		Size_t_1,#
		RecruitmentMode,#
		cactus_density_per_plot,#
		DeadbyEndofYear,#
		Alive#
 	) %>%#
	filter(Species=="Opuntia stricta") %>%#
	.[complete.cases(.$Size_t_1),]#
# does the number of deaths in the plant surveys survival dataset match the number of deaths in the plant info dataset?#
#
plant_surveys_dead <- Plant_Surveys_Survival %>%#
	filter(DeadbyEndofYear==1) %$%#
	unique(PlantID)#
#
plant_info_dead <- Plant_Info_Analysis %>%#
	filter(Dead==1)#
#
plant_info_dead[!(plant_info_dead$PlantID %in% plant_surveys_dead), ] %>% head
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Dead == 1)#
	if (dim(temp)[1] > 0) {#
		warning(paste(#
			"PlantMeasureID Records ",#
			paste(temp$PlantMeasureID, collapse=", "),#
			"have size measurements but are also marked dead"#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys %>%#
		filter(!(is.na(Size_t)) & Dead == 1)
