Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
# Plant_Surveys <- Plant.Surveys.processed.26jun17#
Plant_Info <- Demographic.Plant.Info#
# Plant_Info <- Plant.Info.processed.26jun17#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
#
placeholder <- Plant_Info#
#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo#
#
# saved here#
# write.csv(Plant_Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant_Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant_Surveys$Date %<>% as.Date#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
Plant_Surveys_by_Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant_Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%
head(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# use this dataset to use parent size that is consistent for all offpsring#
	A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)#
		Plant_Surveys_by_Plant %>%#
		filter(#
			PlantID %in% PlantIDwoSize,#
			!(is.na(Size_t))#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)
Plant_Surveys_by_Plant %>% filter(PlantID==8650)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)#
		temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% filter(is.na(Parent.Size_t)) %$% #
			unique(Parent.ID)#
		temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)
temp
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		setnames(#
			"minFecundityYear", #
			"Offspring.minFecundityYear"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			Offspring.minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "Offspring.minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")
head(A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")
head(B)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		setnames(#
			"minFecundityYear", #
			"Offspring.minFecundityYear"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			Offspring.minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "Offspring.minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		)
head(C)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		setnames(#
			"minFecundityYear", #
			"Offspring.minFecundityYear"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			Offspring.minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "Offspring.minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
head(C)
head(Plant_Info_Analysis)
Plant_Info_Analysis$First.Survey.Date.Alive %<>% as.Date
head(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
head(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		setnames(#
			"minFecundityYear", #
			"Offspring.minFecundityYear"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			Offspring.minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "Offspring.minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
head(C)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)#
		temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)#
		if (dim(temp)[1] > 0) {#
			warning(paste(#
				"Size data available for",#
				paste(temp, collapse=","),#
				"but not included in Plant Info."#
			))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)
temp
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)#
		temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)#
		if (length(temp) > 0) {#
			warning(paste(#
				"Size data available for",#
				paste(temp, collapse=","),#
				"but not included in Plant Info."#
			))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t)) %$% #
			unique(Parent.ID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			)
Plant_Surveys_by_Plant %>% filter(PlantID== 7599)
Plant_Surveys_by_Year %>% filter(Parent==7599)
Plant_Info_Analysis %>% filter(Parent==7599)
Plant_Surveys_by_Year %>% filter(Parent==8046)
Plant_Surveys_by_Plant %>% filter(PlantID== 8046)
Plant_Surveys %>% filter(PlantID== 8046)
Plant_Info %>% filter(PlantID==8046)
Demographic.Plant.Info %>% filter(PlantID==8046)
Plant_Info %>% filter(Parent==8046)
Plant_Info %>% filter(Parent==8692)
Plant_Surveys_by_Plant %>% filter(PlantID== 8692)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
Plant_Info %>% filter(Parent==8841)
Plant_Surveys_by_Plant %>% filter(PlantID== 8841)
Plant_Surveys %>% filter(PlantID== 8841)
Plant_Info %>% filter(Parent==9076)
Plant_Surveys %>% filter(PlantID== 9076)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
Plant_Info %>% filter(Parent==9155)
Plant_Surveys %>% filter(PlantID== 9155)
Plant_Info_Analysis %>% filter(Parent==9155)
Plant_Surveys_by_Year %>% filter(PlantID== 9155)
Plant_Surveys %>% filter(PlantID== 9155) %>% arrange(Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
Plant_Surveys %>% filter(PlantID== 9682) %>% arrange(Date)
Plant_Info_Analysis %>% filter(Parent== 9682)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
Plant_Info_Analysis %>% filter(Parent== 9815)
Plant_Surveys %>% filter(PlantID== 9815) %>% arrange(Date)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% filter(is.na(Parent.Size_t)) %$% #
			unique(Parent.ID)#
		temp <- Plant_Surveys_by_Plant %>%#
			filter(#
				PlantID %in% PlantIDwoSize,#
				!(is.na(Size_t))#
			) %$%#
			unique(PlantID)#
		if (length(temp) > 0) {#
			warning(paste(#
				"Parent obs date and size not available for parent(s)",#
				paste(temp, collapse=",")#
			))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% filter(is.na(Parent.Size_t)) %$% #
			unique(Parent.ID)#
		if (length(temp) > 0) {#
			warning(paste(#
				"Parent obs date and size not available for parent(s)",#
				paste(PlantIDwoSize, collapse=",")#
			))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.Size_t)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= First.Survey.Date.Alive#
		) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date.Alive", "Date")	%>%#
		as.data.frame
str(C)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= First.Survey.Date.Alive#
		) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date.Alive", "Date")	%>%#
		as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= Offspring.First.Survey.Date.Alive#
		) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date)) %>%#
		# find Offspring observation date (WITH a size obs) closest to (or equal to) date it was first observed#
		filter(Offspring.Obs.Date==min(Offspring.Obs.Date)) %>%#
		setnames("First.Survey.Date.Alive", "Date")	%>%#
		as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= Offspring.First.Survey.Date.Alive#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= Offspring.First.Survey.Date.Alive#
		) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= Offspring.First.Survey.Date.Alive#
		) %>%#
		# find Parent observation date (WITH a size obs) closest to (or equal to) date that the offspring was observed#
		filter(Parent.Obs.Date==max(Parent.Obs.Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date)) %>%#
		# keep only parent surveys that are before or on the same date as the first offspring obs. date#
		filter(#
			Parent.Obs.Date <= Offspring.First.Survey.Date.Alive#
		)
head(D)
D %>% filter(Parent.ID==7138)
D %>% tally(Parent.ID) %>% unique(n)
D %>% tally(Parent.ID) %$% unique(n)
?tally
D %>% count(Parent.ID) %$% unique(n)
tail(D)
D %>% filter(Parent.ID == 9984)
D %>% filter(Parent.ID == 9984) %>% as.data.frame
D %>% count(Parent.ID,Offspring.ID) %$% unique(n)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
D <- C %>%#
		group_by(Parent.ID) %>%#
		# remove NAs#
		filter(!is.na(Parent.Size_t)) %>%#
		filter(!is.na(Offspring.First_Size)) %>%#
		filter(!is.na(Parent.Obs.Date))
D %>% filter(Parent.ID == 9984) %>% as.data.frame
length(unique(Plant_Surveys_by_Plant$PlantID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(FecundityYear, PlantID) %>%#
		dplyr::summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode 			= RecruitmentMode[1],#
			FruitPres_t 				= Maximum(FruitPres_t),#
			Fruit_Flowers_t 			= Maximum(Fruit_Flowers_t),#
			FruitFlowerPres_t 			= Maximum(FruitFlowerPres_t),#
			Size_t 						= Maximum(Size_t),#
			Height_t 					= Maximum(Height_t),#
			Fruit_t 					= Maximum(Fruit_t),#
			FruitPres_t 				= Maximum(FruitPres_t),#
			CA_t 						= Maximum(CA_t),#
			ME_t 						= Maximum(ME_t),#
			DA_t 						= Maximum(DA_t),#
			CH_t 						= Maximum(CH_t),#
			Gerstaeckeria_t 			= Maximum(Gerstaeckeria_t),#
			Unknown_Moth_t 				= Maximum(Unknown_Moth_t),#
			Old_Moth_Evidence_t 		= Maximum(Old_Moth_Evidence_t),#
			Moth_Evidence_t 			= Maximum(Moth_Evidence_t),#
			Insect_Evidence_t 			= Maximum(Insect_Evidence_t),#
			DeadbyEndofYear 			= Maximum(Dead),#
			MissingbyEndofYear 			= Maximum(Missing),#
			DeadMissingbyEndofYear = sum(#
				c(DeadbyEndofYear, MissingbyEndofYear),#
				na.rm=T#
			)#
		) %>%#
		ungroup() %>%#
		rowwise() %>%#
		mutate(#
			PrevFecundityYear = FecundityYear - 1,#
			Alive = abs(DeadMissingbyEndofYear - 1)#
		)
length(unique(Plant_Surveys_by_Year $PlantID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year %<>% createInsectPresDuringStudy
length(unique(Plant_Surveys_by_Year $PlantID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# figure out spring/summer survey dates	#
	temp <- Plant_Surveys_by_Plant %>%#
		filter(#
			month(Date) == 5 |#
			month(Date) == 6 |#
			month(Date) == 7 |#
			month(Date) == 8 |#
			month(Date) == 9,#
		    !(#
				is.na(Fruit_Flowers_t) |#
				is.na(Size_t)#
			)#
		) %>%#
		dplyr::select(#
			Date,#
			PlantID,#
			FecundityYear#
		) %>%#
		setnames("Date", "SurveyDate_SpringSummer")#
	# merge#
	#########################
	# DO I LOSE PLANTS HERE?#
	########################	#
	Plant_Surveys_by_Year %<>% merge(temp, by=c("PlantID", "FecundityYear"), all.x=T)
length(unique(Plant_Surveys_by_Year $PlantID))
head(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# one record per plant#
	# 2849 records#
	Plant_Info_Analysis <- Plant_Info %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= Maximum(DaysAlive),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= Minimum(ConfirmedDeadMissing),#
			Dead 				= Minimum(ConfirmedDead),#
			Missing 			= Minimum(ConfirmedMissing),#
			First.Survey.Date.Alive 	= First.Survey.Date.Alive[1]#
		) %>%#
		filter(!is.na(Network))#
	# save to figure out if some plants were lost during processing#
	temp1 <- Plant_Info_Analysis$PlantID#
	Plant_Info_Analysis$DaysAlive %<>% as.numeric#
	# Parent#
	Plant_Info_Analysis %<>% mutate(#
		Parent = replace(#
			Parent,#
			which(is.na(Parent)),#
			"Unknown"#
		)#
	)	#
	Plant_Info_Analysis$Parent %<>% NA_Function#
	Plant_Info_Analysis$Parent[which(Plant_Info_Analysis$Parent=="")] <- NA#
	# order#
	Plant_Info_Analysis %<>% arrange(desc(Island), desc(Parent))#
	# summarise insect presence on plants and in networks#
	network_summary <- Plant_Surveys_by_Year %>%#
		group_by(Network) %>%#
		dplyr::summarise(#
			OldMothNetworkPres 	= Maximum(Old_Moth_Evidence_t),#
			MENetworkPres 		= Maximum(ME_t),#
			CANetworkPres 		= Maximum(CA_t),#
			MothNetworkPres 	= Maximum(Moth_Evidence_t)#
		)#
	Plant_summary <- Plant_Surveys_by_Year %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			OldMothPlantPres 	= Maximum(Old_Moth_Evidence_t),#
			MEPlantPres 		= Maximum(ME_t),#
			CAPlantPres 		= Maximum(CA_t),#
			MothPlantPres 		= Maximum(Moth_Evidence_t)#
		)#
	Plant_Info_Analysis %<>% #
		merge(network_summary, by="Network") %>%#
		merge(Plant_summary, by="PlantID")#
	# get size at first survey#
	First_Size <- Plant_Surveys_by_Plant %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			First.Survey.Date 		= Date[1],#
			minFecundityYear 		= Minimum(FecundityYear),#
			First_Size 				= Size_t[!(is.na(Size_t))][1],#
			First.Measurement.Date 	= Date[!(is.na(Size_t))][1],#
			min.Size 				= Minimum(Size_t),#
			max.Size 				= Maximum(Size_t),#
			DaysAlive2				= #
				Maximum(PlantID.Last.Alive) - Minimum(PlantID.First.Alive)#
		)#
	Plant_Info_Analysis %<>% #
		merge(First_Size, by=c("PlantID"))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis <- Plant_Info %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= Maximum(DaysAlive),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= Minimum(ConfirmedDeadMissing),#
			Dead 				= Minimum(ConfirmedDead),#
			Missing 			= Minimum(ConfirmedMissing),#
			First.Survey.Date.Alive 	= First.Survey.Date.Alive[1],#
			DaysAlive2			= #
				Maximum(PlantID.Last.Alive) - Minimum(PlantID.First.Alive)#
		) %>%#
		filter(!is.na(Network))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Demographic.Plant.Info
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Demographic.Plant.Info
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
# Plant_Surveys <- Plant.Surveys.processed.26jun17#
Plant_Info <- Demographic.Plant.Info#
# Plant_Info <- Plant.Info.processed.26jun17#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
#
placeholder <- Plant_Info#
#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo#
#
# saved here#
# write.csv(Plant_Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant_Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant_Surveys$Date %<>% as.Date#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
Plant_Surveys_by_Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant_Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis <- Plant_Info %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= Maximum(DaysAlive),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= Minimum(ConfirmedDeadMissing),#
			Dead 				= Minimum(ConfirmedDead),#
			Missing 			= Minimum(ConfirmedMissing),#
			First.Survey.Date.Alive 	= First.Survey.Date.Alive[1],#
			DaysAlive2			= #
				Maximum(PlantID.Last.Alive) - Minimum(PlantID.First.Alive)#
		) %>%#
		filter(!is.na(Network))
head(Plant_Info)
Plant_Info %>% filter(PlantID==7101)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis <- Plant_Info %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= Maximum(DaysAlive),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= Minimum(ConfirmedDeadMissing),#
			Dead 				= Minimum(ConfirmedDead),#
			Missing 			= Minimum(ConfirmedMissing),#
			First.Survey.Date.Alive 	= First.Survey.Date.Alive[1],#
			DaysAlive2			= #
				Maximum(PlantID.Last.Alive) - Minimum(PlantID.First.Alive)#
		) %>%#
		filter(!is.na(Network))
Plant_Info_Analysis %>% filter(PlantID==7101)
Plant_Info_Analysis %>% filter(PlantID==7101) %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis <- Plant_Info %>%#
		arrange(First.Survey.Date.Alive) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= Maximum(DaysAlive),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= Minimum(ConfirmedDeadMissing),#
			Dead 				= Minimum(ConfirmedDead),#
			Missing 			= Minimum(ConfirmedMissing),#
			First.Survey.Date.Alive 	= First.Survey.Date.Alive[1],#
			DaysAlive2			= #
				Maximum(PlantID.Last.Alive) - Minimum(PlantID.First.Alive)#
		) %>%#
		filter(!is.na(Network))#
	# save to figure out if some plants were lost during processing#
	temp1 <- Plant_Info_Analysis$PlantID#
	Plant_Info_Analysis$DaysAlive %<>% as.numeric#
	# Parent#
	Plant_Info_Analysis %<>% mutate(#
		Parent = replace(#
			Parent,#
			which(is.na(Parent)),#
			"Unknown"#
		)#
	)	#
	Plant_Info_Analysis$Parent %<>% NA_Function#
	Plant_Info_Analysis$Parent[which(Plant_Info_Analysis$Parent=="")] <- NA#
	# order#
	Plant_Info_Analysis %<>% arrange(desc(Island), desc(Parent))#
	# summarise insect presence on plants and in networks#
	network_summary <- Plant_Surveys_by_Year %>%#
		group_by(Network) %>%#
		dplyr::summarise(#
			OldMothNetworkPres 	= Maximum(Old_Moth_Evidence_t),#
			MENetworkPres 		= Maximum(ME_t),#
			CANetworkPres 		= Maximum(CA_t),#
			MothNetworkPres 	= Maximum(Moth_Evidence_t)#
		)#
	Plant_summary <- Plant_Surveys_by_Year %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			OldMothPlantPres 	= Maximum(Old_Moth_Evidence_t),#
			MEPlantPres 		= Maximum(ME_t),#
			CAPlantPres 		= Maximum(CA_t),#
			MothPlantPres 		= Maximum(Moth_Evidence_t)#
		)#
	Plant_Info_Analysis %<>% #
		merge(network_summary, by="Network") %>%#
		merge(Plant_summary, by="PlantID")#
	# get size at first survey#
	First_Size <- Plant_Surveys_by_Plant %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			First.Survey.Date 		= Date[1],#
			minFecundityYear 		= Minimum(FecundityYear),#
			First_Size 				= Size_t[!(is.na(Size_t))][1],#
			First.Measurement.Date 	= Date[!(is.na(Size_t))][1],#
			min.Size 				= Minimum(Size_t),#
			max.Size 				= Maximum(Size_t)#
		)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis %<>% #
		merge(First_Size, by=c("PlantID"))
dim(Plant_Info_Analysis)
head(Plant_Info_Analysis)
Plant_Info_Analysis %>% filter(DaysAlive!= DaysAlive2)
Plant_Info %>% filter(PlantID==9606)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%
head(Plant_Info_Analysis)
Plant_Surveys %>% filter(PlantID==6070)
Plant_Info %>% filter(PlantID==6070)
Plant_Surveys %>% filter(PlantID==9815)
Plant_Surveys %>% filter(PlantID==9815) %>% arrange(Date)
Plant_Info %>% filter(PlantID == 9815)
Plant_Info %>% filter(PlantID == 7406)
Plant_Info %>% filter(PlantID == 9155)
Plant_Info %>% filter(PlantID == 9147)
Plant_Surveys %>% arrange(Date) %>% filter(PlantID==9147)
Plant_Info %>% filter(PlantID == 9147)
Plant_Info %>% filter(PlantID == 9076)
Plant_Info %>% filter(PlantID == 6121)
Plant_Info %>% filter(PlantID == 8692)
Plant_Info %>% filter(PlantID == 9069)
Plant_Surveys %>% filter(PlantID == 8692)
Plant_Surveys %>% filter(PlantID == 8692) %>% arrange(Date)
Plant_Surveys %>% filter(PlantID == 9069) %>% arrange(Date)
Plant_Info %>% filter(PlantID == 8912)
Plant_Info %>% filter(PlantID == 8232)
Plant_Surveys %>% filter(PlantID==8232)
Plant_Info %>% filter(Tag_Number == 907)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis')
reload.project()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
# Plant_Surveys <- Plant.Surveys.processed.26jun17#
Plant_Info <- Demographic.Plant.Info#
# Plant_Info <- Plant.Info.processed.26jun17#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
#
placeholder <- Plant_Info#
#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo#
#
# saved here#
# write.csv(Plant_Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant_Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant_Surveys$Date %<>% as.Date#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
Plant_Surveys_by_Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant_Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		setnames(#
			"minFecundityYear", #
			"Offspring.minFecundityYear"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			Offspring.minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "Offspring.minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t)) %$% #
		unique(Parent.ID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
		filter(is.na(Parent.Size_t))#
		# these are fine:#
		filter(Parent.ID!=8692 | Parent.ID!=9076)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
		filter(is.na(Parent.Size_t)) %>%#
		# these are fine:#
		filter(Parent.ID!=8692 | Parent.ID!=9076)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
		filter(is.na(Parent.Size_t)) %>%#
		# these are fine:#
		filter(Parent.ID!=8692, Parent.ID!=9076)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>%#
		filter(is.na(Parent.Size_t)) %>%#
		# these are fine:#
		filter(Parent.ID!=8692, Parent.ID!=9076) %$% #
		unique(Parent.ID)#
	if (length(temp) > 0) {#
		warning(paste(#
			"Parent obs date and size not available for parent(s)",#
			paste(PlantIDwoSize, collapse=",")#
		))#
	}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
		filter(is.na(Parent.Size_t))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
		filter(is.na(Parent.Size_t)) %>%#
		# these are fine:#
		filter(Parent.ID!=8692, Parent.ID!=9076)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>%#
   		filter(is.na(Parent.Obs.Date))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")
A %>% filter(PlantID==7599)
A %>% filter(Parent.ID ==7599)
Plant_Surveys_by_Plant %>% filter(PlantID==7599, FecundityYear==2014)
Plant_Surveys_by_Plant %>% filter(PlantID==7599)
