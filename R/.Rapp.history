setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
stricta.fruit.percentile.estimates %>% dplyr::(Label, Percentile)
stricta.fruit.percentile.estimates %>% dplyr::select(Label, Percentile)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)
stricta.fruit.percentile.estimates %>% dplyr::select(Label, Percentile)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91)#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93)#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`count covariates: absence of CA`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix/Survival')
Ln_Size_max_t_1 <- quantile(#
	Plant.Surveys.Survival.stricta$Ln_Size_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.Survival.stricta$Size_t_1)) # 0.7241458#
# sd(log(Plant.Surveys.Survival.stricta$Size_t_1)) # 0.7482365#
#
Ln_Size_max_t_1_percentiles_backtransformed <- exp(#
	Ln_Size_max_t_1*2*0.7482365 + 0.7241458#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
temp <- GLIMMIX.STRICTA.Survival.standardized.size.percentiles %>%#
	mutate(#
		Prob_Estimate = exp(Estimate)/(exp(Estimate) + 1),#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Moth Ev. Present", Label)==T#
			),#
			"Moth Evidence Present"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Moth Ev. Absent", Label)==T#
			),#
			"Moth Evidence Absent"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Invasive Moth Present", Label)==T#
			),#
			"Invasive Moth Present"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Invasive Moth Absent", Label)==T#
			),#
			"Invasive Moth Absent"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Recruited as Clone", Label)==T#
			),#
			"Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("Did Not Recruit as Clone", Label)==T#
			),#
			"Not a Clone"#
		),#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("0-10,20,30", Label)==T),#
			"0-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50,60", Label)==T),#
			"40,50,60"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("70,80", Label)==T),#
			"70,80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92,93", Label)==T),#
			"92,93"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("94", Label)==T),#
			"94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99 Perc.:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("995", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("9975", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("999", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	)#
	temp %<>%#
		dplyr::select(Variable, Prob_Estimate, Percentile) %>%#
		reshape2::dcast(Percentile ~ Variable, value.var="Prob_Estimate")#
temp <- rbind.fill(#
	temp,#
	temp[1, ] %>% mutate(Percentile=1),#
	temp[1, ] %>% mutate(Percentile=2),	#
	temp[1, ] %>% mutate(Percentile=3),	#
	temp[1, ] %>% mutate(Percentile=4),#
	temp[1, ] %>% mutate(Percentile=5),#
	temp[1, ] %>% mutate(Percentile=6),	#
	temp[1, ] %>% mutate(Percentile=7),	#
	temp[1, ] %>% mutate(Percentile=8),#
	temp[1, ] %>% mutate(Percentile=9),#
	temp[1, ] %>% mutate(Percentile=10),#
	temp[1, ] %>% mutate(Percentile=20),#
	temp[1, ] %>% mutate(Percentile=30),#
	temp[3, ] %>% mutate(Percentile=40),#
	temp[3, ] %>% mutate(Percentile=50),	#
	temp[3, ] %>% mutate(Percentile=60),#
	temp[4, ] %>% mutate(Percentile=70),	#
	temp[4, ] %>% mutate(Percentile=80),	#
#
	temp[5, ] %>% mutate(Percentile=90),	#
	temp[5, ] %>% mutate(Percentile=91),#
#
	temp[6, ] %>% mutate(Percentile=92),#
	temp[6, ] %>% mutate(Percentile=93)#
#
) %>%#
filter(#
	Percentile != "0-10,20,30" &#
	Percentile != "40,50,60" &#
	Percentile != "70,80" &#
	Percentile != "90,91" &#
	Percentile != "92,93"#
) %>%#
	arrange(as.numeric(Percentile))#
temp$Size_t_1 <- Ln_Size_max_t_1_percentiles_backtransformed#
temp %<>% dplyr::select(-Percentile) %>% reshape2::melt(id.vars="Size_t_1")#
#
temp$variable %<>% as.character#
#
temp %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Moth Evidence Present" | variable=="Moth Evidence Absent"),#
		"Moth Evidence Present?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Invasive Moth Present" | variable=="Invasive Moth Absent"),#
		"Invasive Moth Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Present", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absent", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)#
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	temp,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_line(aes(y=value), size=2) +#
#stat_smooth(se=F,size=2, method="glm") +#
#coord_trans(y = "identity", x="log10") +#
#annotation_logticks(scaled = FALSE)	+#
ylab("Probability of Survival\nto Fecundity Year z + 1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14),#
	legend.title = element_blank()#
) +#
scale_x_log10(#
	breaks=c(1,5,10,100)#
) +#
scale_y_continuous(limits=c(0.3,1)) +#
scale_linetype_manual(values=c("dotted","solid")) +#
scale_colour_manual(values=c("black","red")) +#
guides( #
	linetype=guide_legend(keywidth=3.5, title=""),#
	colour=guide_legend(keywidth=3.5, title="")#
)
p
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
names(stricta.fruit.percentile.estimates)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	)#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed#
stricta.fruit.percentile.estimates %<>% dplyr::select(-Percentile) %>% reshape2::melt(id.vars="Size_t_1")#
#
stricta.fruit.percentile.estimates$variable %<>% as.character
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed
names(stricta.fruit.percentile.estimates)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(#
		Clone,                                  #
		Not a Clone,                              #
		Old Moth Evidence Presence,               #
		Old Moth Evidence Absence,                #
		Size_t_1                                 #
	) %>% #
	reshape2::melt(id.vars="Size_t_1")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(#
		Clone,                                  #
		`Not a Clone`,                              #
		`Old Moth Evidence Presence`,               #
		`Old Moth Evidence Absence`,                #
		Size_t_1                                 #
	) %>% #
	reshape2::melt(id.vars="Size_t_1")#
#
stricta.fruit.percentile.estimates$variable %<>% as.character
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,5,10,20,40,60,80)#
) +#
scale_x_continuous(#
	breaks=c(1,10,20,30,40,50,100,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
summary(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)
summary(Plant.Surveys.SexualRepro.stricta$Size_t_1)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(#
		Clone,                                  #
		`Not a Clone`,                              #
		`Old Moth Evidence Presence`,               #
		`Old Moth Evidence Absence`,                #
		Size_t_1                                 #
	) %>% #
	reshape2::melt(id.vars="Size_t_1")#
#
stricta.fruit.percentile.estimates$variable %<>% as.character#
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)#
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.estimates
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,160)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,160)#
) +#
scale_linetype_manual(values=c("dotted","solid")) +#
scale_colour_manual(values=c("black", "red")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_Size_max_t_1 <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_Size_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7943941#
# sd(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7793611#
Ln_Size_max_t_1_percentiles_backtransformed <- exp(#
	Ln_Size_max_t_1*2*0.7793611 + 0.7943941#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentiles %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob", Label)==T#
			),#
			"superscript for prob0"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50,60", Label)==T),#
			"40,50,60"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("70", Label)==T),#
			"70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92,93", Label)==T),#
			"92,93"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("94", Label)==T),#
			"94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0 = exp(`superscript for prob0`) / (1 + exp(`superscript for prob0`)),#
		# mean of the positive count data#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=60),	#
#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=92),	#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=93)#
) %>%#
arrange(`count covariates: absence of Moth Damage`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50,60" &#
	Percentile != "90,91" &#
	Percentile != "92,93"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_max_t_1 <- Ln_Size_max_t_1_percentiles_backtransformed#
stricta.fruit.percentile.est.melt <- stricta.fruit.percentile.estimates %>%#
dplyr::select(#
	`Old Moth Evidence Presence`,#
	`Old Moth Evidence Absence`,	#
	Size_max_t_1#
) %>%#
reshape2::melt(id.vars="Size_max_t_1")#
#
stricta.fruit.percentile.estimates$variable %<>% as.character
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt$variable %<>% as.character
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
ggplot(#
	stricta.fruit.percentile.est.melt,#
	aes(#
		Size_max_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
geom_line(aes(y=value), size=2) +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_Size_max_t_1 <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_Size_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7943941#
# sd(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7793611#
Ln_Size_max_t_1_percentiles_backtransformed <- exp(#
	Ln_Size_max_t_1*2*0.7793611 + 0.7943941#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentiles %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob", Label)==T#
			),#
			"superscript for prob0"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50,60", Label)==T),#
			"40,50,60"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("70", Label)==T),#
			"70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92,93", Label)==T),#
			"92,93"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("94", Label)==T),#
			"94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0 = exp(`superscript for prob0`) / (1 + exp(`superscript for prob0`)),#
		# mean of the positive count data#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=60),	#
#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=92),	#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=93)#
) %>%#
arrange(`count covariates: absence of Moth Damage`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50,60" &#
	Percentile != "90,91" &#
	Percentile != "92,93"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_max_t_1 <- Ln_Size_max_t_1_percentiles_backtransformed#
stricta.fruit.percentile.est.melt <- stricta.fruit.percentile.estimates %>%#
dplyr::select(#
	`Old Moth Evidence Presence`,#
	`Old Moth Evidence Absence`,	#
	Size_max_t_1#
) %>%#
reshape2::melt(id.vars="Size_max_t_1")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt$variable %<>% as.character
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis')
reload.project()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_Size_max_t_1 <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_Size_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7943941#
# sd(log(Plant.Surveys.SexualRepro.stricta$Size_t_1)) # 0.7793611#
Ln_Size_max_t_1_percentiles_backtransformed <- exp(#
	Ln_Size_max_t_1*2*0.7793611 + 0.7943941#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentiles %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob", Label)==T#
			),#
			"superscript for prob0"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50,60", Label)==T),#
			"40,50,60"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("70", Label)==T),#
			"70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92,93", Label)==T),#
			"92,93"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("94", Label)==T),#
			"94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0 = exp(`superscript for prob0`) / (1 + exp(`superscript for prob0`)),#
		# mean of the positive count data#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=60),	#
#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=92),	#
	stricta.fruit.percentile.estimates[7, ] %>% mutate(Percentile=93)#
) %>%#
arrange(`count covariates: absence of Moth Damage`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50,60" &#
	Percentile != "90,91" &#
	Percentile != "92,93"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_max_t_1 <- Ln_Size_max_t_1_percentiles_backtransformed#
stricta.fruit.percentile.est.melt <- stricta.fruit.percentile.estimates %>%#
dplyr::select(#
	`Old Moth Evidence Presence`,#
	`Old Moth Evidence Absence`,	#
	Size_max_t_1#
) %>%#
reshape2::melt(id.vars="Size_max_t_1")#
#
stricta.fruit.percentile.est.melt$variable %<>% as.character#
stricta.fruit.percentile.est.melt %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
stricta.fruit.percentile.est.melt
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
ggplot(#
	stricta.fruit.percentile.est.melt,#
	aes(#
		Size_max_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
geom_line(aes(y=value), size=2) +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
pdf("figure_fruit_stricta_pred_effect_of_insects.pdf", width=7, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	stricta.fruit.percentile.est.melt,#
	aes(#
		Size_max_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
geom_line(aes(y=value), size=2) +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("solid","dotted","dashed","dotdash")) +#
scale_colour_manual(values=c("red", "black", "purple", "black")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
#
pdf("figure_fruit_stricta_pred_effect_of_insects.pdf", width=7, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
p <- ggplot(#
	stricta.fruit.percentile.est.melt,#
	aes(#
		Size_max_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
geom_line(aes(y=value), size=2) +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,150)#
) +#
scale_linetype_manual(values=c("dotted","solid")) +#
scale_colour_manual(values=c("black", "red")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
#
pdf("figure_fruit_stricta_pred_effect_of_insects.pdf", width=7, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
Ln_SizewClones_t_1_st <- quantile(#
	Plant.Surveys.SexualRepro.stricta$Ln_SizewClones_t_1_st, #
	c(#
		seq(0.01,0.09,0.01),#
		seq(0.1,0.9,0.1), #
		seq(0.91,0.99,0.01),#
		0.995,#
		0.9975,#
		0.999,#
		1#
	), type=1#
)#
#
#timeseries_fecundity_stricta %<>% mutate(Ln_Size_max_t_1_st = log(Size_max_t_1))#
#
# mean(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.8165118#
# sd(log(Plant.Surveys.SexualRepro.stricta$SizewClones_t_1)) # 0.7980329#
#
Ln_SizewClones_t_1_st_percentiles_backtransformed <- exp(#
	Ln_SizewClones_t_1_st*2*0.7980329 + 0.8165118#
)#
#
#NLMIXED.stricta.fruit.standardized.size.percentiles <- NLMIXED.stricta.fruit.size.percentiles.old#
stricta.fruit.percentile.estimates <- NLMIXED.STRICTA.FRUIT.standardized.size.percentile.w.clones %>%#
	mutate(#
		Variable = NA,#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T#
			),#
			"count covariates"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("absence of Moth Damage", Label)==T#
			),#
			"count covariates: absence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("count covariates", Label)==T &#
				grepl("presence of Moth Damage", Label)==T#
			),#
			"count covariates: presence of Moth Damage"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T#
			),#
			"zero model"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Recruited as Clone", Label)==T#
			),#
			"zero model: Recruited as Clone"#
		),#
		Variable = replace(#
			Variable,#
			which(#
				grepl("superscript for prob0", Label)==T &#
				grepl("Did not recruit as Clone", Label)==T#
			),#
			"zero model: Did not recruit as Clone"#
		)#
	) %>%#
	mutate(#
		Percentile = NA,#
		Percentile = replace(#
			Percentile,#
			which(grepl("1-10,20,30", Label)==T),#
			"1-10,20,30"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("40,50", Label)==T),#
			"40,50"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("60,70", Label)==T),#
			"60,70"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("80", Label)==T #
			),#
			"80"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("90,91", Label)==T #
			),#
			"90,91"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("92", Label)==T),#
			"92"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("93,94", Label)==T),#
			"93,94"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("95", Label)==T),#
			"95"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("96", Label)==T),#
			"96"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("97", Label)==T),#
			"97"#
		),#
		Percentile = replace(#
			Percentile,#
			which(grepl("98", Label)==T),#
			"98"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99:", Label)==T #
			),#
			"99"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.5", Label)==T #
			),#
			"99.5"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.75", Label)==T #
			),#
			"99.75"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("99.9", Label)==T #
			),#
			"99.9"#
		),#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("100", Label)==T #
			),#
			"100"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("superscript for prob0, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	) %>%#
	mutate(#
		Percentile = replace(#
			Percentile,#
			which(#
				grepl("count covariates, Perc. 99", Label)==T &#
				is.na(Percentile)#
			),#
			"99"#
		)#
	)#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(Variable, Estimate, Percentile) %>%#
	reshape2::dcast(Percentile ~ Variable, value.var="Estimate") %>%#
	mutate(#
		# probability of a zero#
		prob0.clone = exp(`zero model: Recruited as Clone`) / (1 + exp(`zero model: Recruited as Clone`)),#
		prob0.not.clone = exp(`zero model: Did not recruit as Clone`) / (1 + exp(`zero model: Did not recruit as Clone`)),#
		prob0 = exp(`zero model`) / (1 + exp(`zero model`)),#
		# mean of the positive count data#
		mu = exp(`count covariates`),#
		mu_OldMoth_absence = exp(`count covariates: absence of Moth Damage`),#
		mu_OldMoth_presence = exp(`count covariates: presence of Moth Damage`),#
		# expected count#
		`Clone` = mu * (1 - prob0.clone),#
		`Not a Clone` = mu * (1 - prob0.not.clone),#
		`Old Moth Evidence Presence` = mu_OldMoth_presence * (1 - prob0),#
		`Old Moth Evidence Absence` = mu_OldMoth_absence * (1 - prob0)#
	)#
#
stricta.fruit.percentile.estimates <- rbind.fill(#
	stricta.fruit.percentile.estimates,#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=1),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=2),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=3),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=4),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=5),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=6),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=7),	#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=8),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=9),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=10),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=20),#
	stricta.fruit.percentile.estimates[1, ] %>% mutate(Percentile=30),#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=40),	#
	stricta.fruit.percentile.estimates[3, ] %>% mutate(Percentile=50),	#
#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=60),	#
	stricta.fruit.percentile.estimates[4, ] %>% mutate(Percentile=70),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=90),	#
	stricta.fruit.percentile.estimates[6, ] %>% mutate(Percentile=91),#
#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=93),#
	stricta.fruit.percentile.estimates[8, ] %>% mutate(Percentile=94)#
) %>%#
arrange(`Old Moth Evidence Presence`) %>%#
filter(#
	Percentile != "1-10,20,30" &#
	Percentile != "40,50" &#
	Percentile != "60,70" &#
	Percentile != "90,91" &#
	Percentile != "93,94"#
	) %>%#
	arrange(as.numeric(Percentile))#
stricta.fruit.percentile.estimates$Size_t_1 <- Ln_SizewClones_t_1_st_percentiles_backtransformed#
stricta.fruit.percentile.estimates %<>%#
	dplyr::select(#
		Clone,                                  #
		`Not a Clone`,                              #
		`Old Moth Evidence Presence`,               #
		`Old Moth Evidence Absence`,                #
		Size_t_1                                 #
	) %>% #
	reshape2::melt(id.vars="Size_t_1")#
#
stricta.fruit.percentile.estimates$variable %<>% as.character#
stricta.fruit.percentile.estimates %<>% mutate(#
	facet_variable = NA,#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Clone" | variable=="Not a Clone"),#
		"Clone?"#
	),#
	facet_variable = replace(#
		facet_variable,#
		which(variable=="Old Moth Evidence Presence" | variable=="Old Moth Evidence Absence"),#
		"Moth Evidence Present?"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Presence", variable)==T#
		),#
		"Yes"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Absence", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Not a Clone", variable)==T#
		),#
		"No"#
	),#
	variable = replace(#
		variable,#
		which(#
			grepl("Clone", variable)==T#
		),#
		"Yes"#
	)#
)#
# Relationship Between Size at Different Percentiles and Predicted Fruit#
p <- ggplot(#
	stricta.fruit.percentile.estimates,#
	aes(#
		Size_t_1,#
		value,#
		colour=factor(variable),#
		linetype=factor(variable)#
	)#
) +#
#geom_point() +#
geom_smooth(se=F,size=2, method="loess") +#
ylab("Predicted Number of Fruit/Flowers\nProduced during Fecundity Year z+1") +#
xlab("Size During Fecundity Year z") +#
KEStheme() +#
facet_wrap(~facet_variable) +#
#theme_bw() +#
theme(legend.position="bottom") +#
guides(#
	colour=guide_legend(title="", nrow=2),#
	linetype=guide_legend(title="", nrow=2, keywidth=2.5)#
) +#
scale_y_continuous(#
	breaks=c(0,10,50,100),#
	limits=c(0,100)#
) +#
scale_x_continuous(#
	breaks=c(1,10,50,100,150),#
	limits=c(0,160)#
) +#
scale_linetype_manual(values=c("dotted","solid")) +#
scale_colour_manual(values=c("black", "red")) +#
theme(#
	panel.grid.major = element_line(colour = "grey85"),#
	panel.grid.minor = element_line(colour = "grey95"),#
	legend.text = element_text(size = 14)#
)#
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=10, height=6.6)#
p#
dev.off()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/Manuscript/Demography/Vital_Rate_ Appendix')
pdf("figure_fruit_stricta_pred_effect_of_insects_w_clones.pdf", width=12, height=6.6)#
p#
dev.off()
ls()
str(Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")#
#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)
str(Plant.Surveys.by.Plant)
Plant.Surveys.by.Plant$Tag_Numbers_Surveyed
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")#
#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)
Plant.Surveys.by.Plant$Tag_Numbers_Surveyed
Plant.Surveys.by.Plant$Tag_Numbers_Surveyed %>% unique
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant.Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant.Surveys.by.Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant.Surveys.by.Plant),#
	warning = h#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
temp <- Plant.Surveys.by.Plant %>% findFirstDeadMissingObservation
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)
str(Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)
sr(Plant.Surveys.by.Year)
str(Plant.Surveys.by.Year)
Plant.Surveys.by.Year$Tag_Numbers_Surveyed %>% unique
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# these plantID and fecundity year combos are missing spring/summer surveys#
temp1 <- Plant.Surveys.by.Year %>% #
	filter(#
		is.na(SurveyDate_SpringSummer),#
		DeadMissingbyEndofYear != 1#
	) %>%#
	dplyr::select(PlantID, FecundityYear)#
temp1 <- Plant.Surveys.by.Plant %>%#
	filter(#
		Dead != 1 & Missing != 1,#
		month(Date) == 5 |#
		month(Date) == 6 |#
		month(Date) == 7 |#
		month(Date) == 8 |#
		month(Date) == 9,#
		is.na(Size_t)#
	) %>%#
	merge(#
		temp1,#
		by = c("PlantID", "FecundityYear")#
	) %>%#
	filter(!(#
			PlantID == 7548 & Date == "2014-09-05" |#
			PlantID == 7773 & Date == "2014-09-21" |#
			PlantID == 7774 & Date == "2014-09-21" |#
			PlantID == 7778 & Date == "2014-09-21" |#
			PlantID == 7791 & Date == "2014-09-21" |#
			PlantID == 7792 & Date == "2014-09-21" |#
			PlantID == 7793 & Date == "2014-09-21" |#
			PlantID == 7794 & Date == "2014-09-21" |#
			PlantID == 7795 & Date == "2014-09-21" |#
			PlantID == 7807 & Date == "2014-09-21" |#
			PlantID == 7810 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-06-28" |#
			PlantID == 8088 & Date == "2014-06-04" |#
			PlantID == 8647 & Date == "2013-07-18" |#
			PlantID == 8652 & Date == "2013-07-23" |#
			PlantID == 8653 & Date == "2013-07-23" |#
			PlantID == 9156 & Date == "2014-06-10" |#
			PlantID == 9156 & Date == "2014-09-11" |#
			PlantID == 9561 & Date == "2014-06-24" |#
			PlantID == 9561 & Date == "2014-05-12" |#
			PlantID == 9682 & Date == "2014-06-02" |#
			PlantID == 9024 & Date == "2014-06-25" |#
			PlantID == 9220 & Date == "2013-07-18" |#
			PlantID == 9220 & Date == "2013-05-21" |#
			PlantID == 9371 & Date == "2015-05-26"#
	)) %>%#
	dplyr::select(PlantID, Date)#
if (dim(temp)[1] > 0) {#
	write.csv(temp1, "SpringSummerSurveyswoSizeFruit.csv")#
	warning("Some plants are missing size/fruit records for spring/summer surveys. Data written to csv file.")#
}#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)#
#
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis %<>% #
	rowwise() %>%#
	mutate(#
		DaysBetweenFirstLastSurvey = (as.Date(LastDateAlive) + 1) - (as.Date(First.Survey.Date.Alive) - 1)#
	)#
	# createMothOccupancyVariable#
Plant.Info.stricta <- Plant.Info.Analysis %>% filter(Species=="Opuntia stricta")#
Plant.Info.pusilla <- Plant.Info.Analysis %>% filter(Species=="Opuntia pusilla")#
write.csv(Plant.Info.Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant.Info.stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant.Info.pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Survival.stricta <- Plant.Info.Analysis %>% #
	filter(Species=="Opuntia stricta") %>%#
	arrange(desc(maxDaysAlive)) %>%#
	as.data.frame %>%#
	dplyr::select(#
		maxDaysAlive,#
		HabitatType,#
		Island,#
		Network,#
		MEPlantPres,#
		CAPlantPres,#
		OldMothPlantPres,#
		RecruitmentMode,#
		minDaysAlive,#
		AliveatEndofStudy#
	) %>% #
	.[complete.cases(.),]#
# Plant.Info.Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
write.csv(Plant.Info.Survival.stricta, "../data/Plant_Info_Survival_stricta.csv", row.names = F)
str(Plant.Surveys.by.Year)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents <- Plant.Info.Analysis %>% filter(Parent=="Unknown")
head(Plants.wo.parents)
head(Plants.wo.parents) %>% as.data.
str(Plants.wo.parents)
head(Plants.wo.parents)
head(Plants.wo.parents)%>%as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# 2849 records#
	Plant.Info.Analysis <- Plant.Info %>%#
		mutate(#
			Parent = replace(#
				Parent,#
				which(Parent=="Unkn"),#
				NA#
			),#
			AliveatEndofStudy = abs(ConfirmedDeadMissing - 1)#
		) %>%#
		renameSpecies
head(Plant.Info.Analysis)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)
head(Plant.Info.Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis %<>% #
	rowwise() %>%#
	mutate(#
		DaysBetweenFirstLastSurvey = (as.Date(LastDateAlive) + 1) - (as.Date(First.Survey.Date.Alive) - 1)#
	)#
	# createMothOccupancyVariable#
Plant.Info.stricta <- Plant.Info.Analysis %>% filter(Species=="Opuntia stricta")#
Plant.Info.pusilla <- Plant.Info.Analysis %>% filter(Species=="Opuntia pusilla")#
write.csv(Plant.Info.Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant.Info.stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant.Info.pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Survival.stricta <- Plant.Info.Analysis %>% #
	filter(Species=="Opuntia stricta") %>%#
	arrange(desc(maxDaysAlive)) %>%#
	as.data.frame %>%#
	dplyr::select(#
		maxDaysAlive,#
		HabitatType,#
		Island,#
		Network,#
		MEPlantPres,#
		CAPlantPres,#
		OldMothPlantPres,#
		RecruitmentMode,#
		minDaysAlive,#
		AliveatEndofStudy#
	) %>% #
	.[complete.cases(.),]#
# Plant.Info.Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
write.csv(Plant.Info.Survival.stricta, "../data/Plant_Info_Survival_stricta.csv", row.names = F)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents <- Plant.Info.Analysis %>% filter(Parent=="Unknown")
unique(Plants.wo.parents$Tag_Number)
sgtr(Plant.Surveys.by.Year)
str(Plant.Surveys.by.Year)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")#
#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)#
Plant.Surveys.by.Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant.Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant.Surveys.by.Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant.Surveys.by.Plant),#
	warning = h#
)#
#
# find and keep only first dead/missing observation#
temp <- Plant.Surveys.by.Plant %>% findFirstDeadMissingObservation#
# create Fecundity and RGR dataset#
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)#
#
# --------------------------------------------------------------------------- ##
# which plants are missing size surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
# which plants are missing fruit/flowers surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
#
# these plantID and fecundity year combos are missing spring/summer surveys#
temp1 <- Plant.Surveys.by.Year %>% #
	filter(#
		is.na(SurveyDate_SpringSummer),#
		DeadMissingbyEndofYear != 1#
	) %>%#
	dplyr::select(PlantID, FecundityYear)#
temp1 <- Plant.Surveys.by.Plant %>%#
	filter(#
		Dead != 1 & Missing != 1,#
		month(Date) == 5 |#
		month(Date) == 6 |#
		month(Date) == 7 |#
		month(Date) == 8 |#
		month(Date) == 9,#
		is.na(Size_t)#
	) %>%#
	merge(#
		temp1,#
		by = c("PlantID", "FecundityYear")#
	) %>%#
	filter(!(#
			PlantID == 7548 & Date == "2014-09-05" |#
			PlantID == 7773 & Date == "2014-09-21" |#
			PlantID == 7774 & Date == "2014-09-21" |#
			PlantID == 7778 & Date == "2014-09-21" |#
			PlantID == 7791 & Date == "2014-09-21" |#
			PlantID == 7792 & Date == "2014-09-21" |#
			PlantID == 7793 & Date == "2014-09-21" |#
			PlantID == 7794 & Date == "2014-09-21" |#
			PlantID == 7795 & Date == "2014-09-21" |#
			PlantID == 7807 & Date == "2014-09-21" |#
			PlantID == 7810 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-06-28" |#
			PlantID == 8088 & Date == "2014-06-04" |#
			PlantID == 8647 & Date == "2013-07-18" |#
			PlantID == 8652 & Date == "2013-07-23" |#
			PlantID == 8653 & Date == "2013-07-23" |#
			PlantID == 9156 & Date == "2014-06-10" |#
			PlantID == 9156 & Date == "2014-09-11" |#
			PlantID == 9561 & Date == "2014-06-24" |#
			PlantID == 9561 & Date == "2014-05-12" |#
			PlantID == 9682 & Date == "2014-06-02" |#
			PlantID == 9024 & Date == "2014-06-25" |#
			PlantID == 9220 & Date == "2013-07-18" |#
			PlantID == 9220 & Date == "2013-05-21" |#
			PlantID == 9371 & Date == "2015-05-26"#
	)) %>%#
	dplyr::select(PlantID, Date)#
if (dim(temp)[1] > 0) {#
	write.csv(temp1, "SpringSummerSurveyswoSizeFruit.csv")#
	warning("Some plants are missing size/fruit records for spring/summer surveys. Data written to csv file.")#
}#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)#
#
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant.Info.Analysis %<>% #
	rowwise() %>%#
	mutate(#
		DaysBetweenFirstLastSurvey = (as.Date(LastDateAlive) + 1) - (as.Date(First.Survey.Date.Alive) - 1)#
	)#
	# createMothOccupancyVariable#
Plant.Info.stricta <- Plant.Info.Analysis %>% filter(Species=="Opuntia stricta")#
Plant.Info.pusilla <- Plant.Info.Analysis %>% filter(Species=="Opuntia pusilla")#
write.csv(Plant.Info.Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant.Info.stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant.Info.pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Survival.stricta <- Plant.Info.Analysis %>% #
	filter(Species=="Opuntia stricta") %>%#
	arrange(desc(maxDaysAlive)) %>%#
	as.data.frame %>%#
	dplyr::select(#
		maxDaysAlive,#
		HabitatType,#
		Island,#
		Network,#
		MEPlantPres,#
		CAPlantPres,#
		OldMothPlantPres,#
		RecruitmentMode,#
		minDaysAlive,#
		AliveatEndofStudy#
	) %>% #
	.[complete.cases(.),]#
# Plant.Info.Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
write.csv(Plant.Info.Survival.stricta, "../data/Plant_Info_Survival_stricta.csv", row.names = F)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents <- Plant.Info.Analysis %>% filter(Parent=="Unknown")
str(Plants.wo.parents)
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- temp %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i]#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- temp %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Year %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
str(Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Surveys.by.Plant %<>% as.numeric
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant.Surveys.by.Plant$DemographicSurvey %<>% as.numeric
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i]
)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents$DemographicSurvey %<>% as.numeric
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents$First.DemographicSurvey %<>% as.numeric
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Alive == 1,#
				Stage#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
when plant was discovered#
		A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Dead == 0#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
dim(A)
Plants.wo.parents[i,]
Plants.wo.parents[i,] %>% as.data.frame
str(Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Dead == 0,#
				Plants.wo.parents$Tag_Number[i] %in% Tag_Numbers_Surveyed#
			)
dim(A)
head(A)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Dead == 0,#
				grepl(Plants.wo.parents$Tag_Number[i], Tag_Numbers_Surveyed)==T#
			)
dim(A)
head(A)
str(Plant.Surveys.by.Plant)
unique(Plant.Surveys.by.Plant$Tag_Number)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot.Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot.Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant.Surveys <- Demographic.Plant.Surveys#
# Plant.Surveys <- Plant.Surveys.processed.26jun17#
Plant.Info <- Demographic.Plant.Info#
# Plant.Info <- Plant.Info.processed.26jun17#
Plant.Surveys.All <- Demographic.Plant.Surveys#
Plant.Info.All <- Demographic.Plant.Info#
D.Plot.Surveys <- Demographic.Plot.Surveys#
Original.Plant.Data <- Original.Demographic.Plant.Data#
Seed.Abund <- Seed.Abundance#
Seed.Abund.Surveys <- Seed.Abundance.Surveys#
GIS.data.upd <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D.Plot.Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant.Surveys %<>% processPlantSurveys(Plant.Info) # Plant Surveys#
Plant.Surveys %<>% fixInconsistentDeadMissingRecords#
#
Plant.Info %<>% processPlantInfo(Plot.Info, Plant.Surveys)#
#
# edit 9164 - recorded missing three consecutive records#
Plant.Surveys %<>%#
mutate(#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2013-07-18"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Dead = replace(#
		Dead,#
		which(PlantID==9164 & Date=="2014-01-10"),#
		NA#
	),#
	Missing = replace(#
		Missing,#
		which(PlantID==9164 & Date=="2014-06-09"),#
		NA#
	)#
)#
# measured two days in a row; remove second measurement#
Plant.Surveys %<>% filter(!(PlantID==9282 & Date=="2014-06-15"))#
Plant.Surveys %<>% filter(!(PlotPlantID=="9352" & Date=="2015-05-26"))#
#
# saved here#
# write.csv(Plant.Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant.Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant.Surveys$Date %<>% as.Date#
#
Plant.Surveys <- Plant.Info %>%#
	group_by(PlantID) %>%#
	dplyr::summarise(#
		N.PlotPlantIDs = length(unique(PlotPlantID))#
	) %>%#
	merge(Plant.Surveys, by="PlantID")#
Plant.Surveys <- Plant.Info %>%#
	dplyr::select(PlotPlantID, Tag_Number, Species) %>%#
	merge(Plant.Surveys, by="PlotPlantID")#
#
Plant.Surveys.by.Plant <- Plant.Surveys %>% #
	processSurveysMergedbyPlant(Plant.Info)#
Plant.Surveys.by.Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant.Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant.Surveys.by.Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant.Surveys.by.Plant),#
	warning = h#
)#
#
# find and keep only first dead/missing observation#
temp <- Plant.Surveys.by.Plant %>% findFirstDeadMissingObservation#
# create Fecundity and RGR dataset#
Plant.Surveys.by.Year <- createPlantSurveysbyYear(Plant.Surveys.by.Plant)#
#
# --------------------------------------------------------------------------- ##
# which plants are missing size surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
# which plants are missing fruit/flowers surveys in the spring/summer that were NOT dead/missing, and that have a photo?#
#
# these plantID and fecundity year combos are missing spring/summer surveys#
temp1 <- Plant.Surveys.by.Year %>% #
	filter(#
		is.na(SurveyDate_SpringSummer),#
		DeadMissingbyEndofYear != 1#
	) %>%#
	dplyr::select(PlantID, FecundityYear)#
temp1 <- Plant.Surveys.by.Plant %>%#
	filter(#
		Dead != 1 & Missing != 1,#
		month(Date) == 5 |#
		month(Date) == 6 |#
		month(Date) == 7 |#
		month(Date) == 8 |#
		month(Date) == 9,#
		is.na(Size_t)#
	) %>%#
	merge(#
		temp1,#
		by = c("PlantID", "FecundityYear")#
	) %>%#
	filter(!(#
			PlantID == 7548 & Date == "2014-09-05" |#
			PlantID == 7773 & Date == "2014-09-21" |#
			PlantID == 7774 & Date == "2014-09-21" |#
			PlantID == 7778 & Date == "2014-09-21" |#
			PlantID == 7791 & Date == "2014-09-21" |#
			PlantID == 7792 & Date == "2014-09-21" |#
			PlantID == 7793 & Date == "2014-09-21" |#
			PlantID == 7794 & Date == "2014-09-21" |#
			PlantID == 7795 & Date == "2014-09-21" |#
			PlantID == 7807 & Date == "2014-09-21" |#
			PlantID == 7810 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-09-21" |#
			PlantID == 8088 & Date == "2014-06-28" |#
			PlantID == 8088 & Date == "2014-06-04" |#
			PlantID == 8647 & Date == "2013-07-18" |#
			PlantID == 8652 & Date == "2013-07-23" |#
			PlantID == 8653 & Date == "2013-07-23" |#
			PlantID == 9156 & Date == "2014-06-10" |#
			PlantID == 9156 & Date == "2014-09-11" |#
			PlantID == 9561 & Date == "2014-06-24" |#
			PlantID == 9561 & Date == "2014-05-12" |#
			PlantID == 9682 & Date == "2014-06-02" |#
			PlantID == 9024 & Date == "2014-06-25" |#
			PlantID == 9220 & Date == "2013-07-18" |#
			PlantID == 9220 & Date == "2013-05-21" |#
			PlantID == 9371 & Date == "2015-05-26"#
	)) %>%#
	dplyr::select(PlantID, Date)#
if (dim(temp)[1] > 0) {#
	write.csv(temp1, "SpringSummerSurveyswoSizeFruit.csv")#
	warning("Some plants are missing size/fruit records for spring/summer surveys. Data written to csv file.")#
}#
# --------------------------------------------------------------------------- ##
#
Plant.Info.Analysis <- createPlantInfobyPlant(Plant.Info, Plant.Surveys.by.Year, Plant.Surveys.by.Plant)#
#
Plant.Surveys.by.Year <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Year, by="PlantID")#
#
Plant.Surveys.by.Year[which(is.na(Plant.Surveys.by.Year$OutsideOfPlot)),]$OutsideOfPlot <- ""#
#
Plant.Surveys.by.Year %<>% filter(OutsideOfPlot!="Yes")#
#
Plant.Surveys.by.Plant <- Plant.Info.Analysis %>%#
	merge(Plant.Surveys.by.Plant, by="PlantID")
str(Plant.Surveys.by.Plant)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plants.wo.parents <- Plant.Info.Analysis %>% filter(Parent=="Unknown")#
	Plant.Surveys.by.Plant$DemographicSurvey %<>% as.numeric#
	Plants.wo.parents$First.DemographicSurvey %<>% as.numeric
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant.Surveys.by.Plant %>% #
			filter(#
				PlantID!=Plants.wo.parents$PlantID[i],#
				Species == Plants.wo.parents$Species[i],#
				DemographicSurvey == #
					Plants.wo.parents$First.DemographicSurvey[i] - 1,#
				Dead == 0,#
				grepl(Plants.wo.parents$Tag_Number[i], Tag_Numbers_Surveyed)==T#
			) %>%#
			filter(#
				!(FecundityYear == minFecundityYear &#
				RecruitmentMode == "Seedling")#
			)
A
A
Plants.wo.parents[i]
Plants.wo.parents[i,]
