?substr
C <- Plant_Info_Analysis %>%#
		#setnames("PlantID", "Offspring.ID") %>%#
		#setnames("Parent", "Parent.ID") %>%#
		#setnames("First_Size", "Offspring.First_Size") %>%#
		#setnames(#
		#	"First.Survey.Date.Alive", #
		#	"Offspring.First.Survey.Date.Alive"#
		#) %>%#
		mutate(Parent.ID = substr(Parent.ID,1,4)) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		)
str(Plant_Info_Analysis)
head(C)
C <- Plant_Info_Analysis %>%#
		#setnames("PlantID", "Offspring.ID") %>%#
		#setnames("Parent", "Parent.ID") %>%#
		#setnames("First_Size", "Offspring.First_Size") %>%#
		#setnames(#
		#	"First.Survey.Date.Alive", #
		#	"Offspring.First.Survey.Date.Alive"#
		#) %>%#
		mutate(Parent.ID = substr(Parent.ID,1,4)) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
head(C)
substr("9383",1,4)
C %>% filter(Parent.ID=="9383")
Plant_Info_Analysis %>% filter(Offspring.ID=="938")
Plant_Info_Analysis %>% filter(Offspring.ID=="9383")
Plant_Info_Analysis %>% filter(Offspring.ID=="7643")
?setnames
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		mutate(Parent.ID = substr(Parent.ID,1,4)) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
C %>% filter(Parent.ID=="9383")
head(C)
substr(x="9383",start=1,stop=4)
?mutate
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		mutate(Parent.ID = substr(x=Parent.ID,start=1,stop=4))
head(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent.ID = substr(x=Parent.ID,start=1,stop=4))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(PlantID = substr(x=PlantID,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		)
str(Plant_Info_Analysis)
head(C)
C %>% filter(Parent.ID=="938")
C %>% filter(Parent.ID=="9383")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(PlantID = substr(x=PlantID,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
head(C)
C %>% filter(Parent.ID=="9383")
C %>% filter(Offspring.ID =="7643")
str(C)
? str_replace_all
?sapce
?space
str(Plant_Info)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info$Parent %<>% str_replace_all(x, fixed(" "), "")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info$Parent %<>% str_replace_all(fixed(" "), "")
Plant_Info$Parent
Plant_Info %>% filter(Parent=="9383")
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
# ---------------------------------------------------------- Shorten names#
Plot_Info <- OccupancySRSWOR.Plot.Surveys.Info#
Plot_Surveys <- OccupancySRSWOR.Plot.Surveys#
Plant_Surveys <- Demographic.Plant.Surveys#
# Plant_Surveys <- Plant.Surveys.processed.26jun17#
Plant_Info <- Demographic.Plant.Info#
# Plant_Info <- Plant.Info.processed.26jun17#
Plant_Surveys_All <- Demographic.Plant.Surveys#
Plant_Info_All <- Demographic.Plant.Info#
D_Plot_Surveys <- Demographic.Plot.Surveys#
Original_Plant_Data <- Original.Demographic.Plant.Data#
Seed_Abundance <- Seed.Abundance#
Seed_Abundance_Surveys <- Seed.Abundance.Surveys#
GIS_data_updated <- GIS.data.updated
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
D_Plot_Surveys$Date %<>% as.Date("%m/%d/%Y") # Demographic Plot Surveys#
Plant_Surveys %<>% processPlantSurveys(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% fixInconsistentDeadMissingRecords#
#
placeholder <- Plant_Info#
#
Plant_Info %<>% processPlantInfo(Plot_Info) # Plant Info#
Plant_Surveys %<>% mergePlantSurveysPlantInfo(Plant_Info) # Plant Surveys#
Plant_Surveys %<>% processPlantSurveysafterMergewPlantInfo#
#
# saved here#
# write.csv(Plant_Surveys, "../data/Plant_Surveys_processed_26jun17.csv")#
# write.csv(Plant_Info, "../data/Plant_Info_processed_26jun17.csv")#
Plant_Surveys$Date %<>% as.Date#
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant#
Plant_Surveys_by_Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant_Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
Plant_Info %>% filter(Parent=="9383")
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(PlantID = substr(x=PlantID,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
head(C)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID))
head(C)
C %>% filter(Parent.ID =="9383")
C %>% filter(is.na(Parent.Size_t))
C %>% filter(is.na(Parent.Size_t)) %>% head
C %>% filter(is.na(Parent.Size_t)) %>% dim
dim(C)
C %>% filter(is.na(Parent.Size_t)) %>% tail
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
dim(C)
C %>% 	filter(is.na(Parent.Size_t)) %>% dim
C %>% 	filter(is.na(Parent.Size_t))
C %>% 		filter(is.na(Offspring.Size_t))
C %>% 		filter(is.na(Offspring.First_Size))
C %>% filter(is.na(Parent.Obs.Date))
Plant_Surveys %>% filter(PlantID=="8650")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis <- Plant_Info %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			Island 				= Island[1],#
			Network 			= Network[1],#
			# make sure they are all the same species#
			Species 			= Species[1],#
			# fix/verify#
			RecruitmentMode 	= paste(Unique(RecruitmentMode), collapse=","),#
			Parent 				= Parent[1],#
			# should figure out the longest span of time a plotplantid was alive#
			DaysAlive 			= max(DaysAlive, na.rm=T),#
			# plant may have died in one plot but is alive in another#
			DeadMissing 		= min(ConfirmedDeadMissing),#
			Dead 				= min(ConfirmedDead),#
			Missing 			= min(ConfirmedMissing),#
			First.Survey.Date.Alive 	= min(First.Survey.Date.Alive)#
		) %>%#
		filter(!is.na(Network))
dim(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp1 <- Plant_Info_Analysis$PlantID#
	Plant_Info_Analysis$DaysAlive %<>% as.numeric#
	# Parent#
	Plant_Info_Analysis %<>% mutate(#
		Parent = replace(#
			Parent,#
			which(is.na(Parent)),#
			"Unknown"#
		)#
	)	#
	Plant_Info_Analysis$Parent %<>% NA_Function#
	Plant_Info_Analysis$Parent[which(Plant_Info_Analysis$Parent=="")] <- NA
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
# order#
	Plant_Info_Analysis %<>% arrange(desc(Island), desc(Parent))#
	# summarise insect presence on plants and in networks#
	network_summary <- Plant_Surveys_by_Year %>%#
		group_by(Network) %>%#
		dplyr::summarise(#
			OldMothNetworkPres = max(Old_Moth_Evidence_t, na.rm=T),#
			#InsectNetworkPres = max(Insect_t, na.rm=T),#
			MENetworkPres = max(ME_t, na.rm=T),#
			CANetworkPres = max(CA_t, na.rm=T),#
			MothNetworkPres = max(Moth_Evidence_t, na.rm=T)#
		)#
	Plant_summary <- Plant_Surveys_by_Year %>%#
		group_by(PlantID) %>%#
		dplyr::summarise(#
			OldMothPlantPres = max(Old_Moth_Evidence_t, na.rm=T),#
			#InsectPlantPres = max(Insect_t, na.rm=T),#
			MEPlantPres = max(ME_t, na.rm=T),#
			CAPlantPres = max(CA_t, na.rm=T),#
			MothPlantPres = max(Moth_Evidence_t, na.rm=T)#
		)
dim(Plant_Info_Analysis)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Info_Analysis %<>% #
		merge(network_summary, by="Network") %>%#
		merge(Plant_summary, by="PlantID")#
	# get size at first survey
dim(Plant_Info_Analysis)
min(NA,NA)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
First_Size <- Plant_Surveys_by_Year %>%#
		group_by(PlantID) %>%#
		summarise(#
			minFecundityYear = min(FecundityYear, na.rm=T),#
			First_Size = #
				min(Size_t[FecundityYear == min(FecundityYear)]),#
			min.Size = min(Size_t, na.rm=T),#
			max.Size = max(Size_t, na.rm=T)#
		)
head(First_Size)
tail(First_Size)
Plant_Surveys_by_Year %>% filter(PlantID=="9995")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(FecundityYear, PlantID) %>%#
		dplyr::summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode = RecruitmentMode[1],#
			#Date = min(Date),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			Fruit_Flowers_t = max(Fruit_Flowers_t, na.rm=T),#
			FruitFlowerPres_t = max(FruitFlowerPres_t, na.rm=T),#
			Size_t = max(Size_t, na.rm=T),#
			Height_t = max(Height_t, na.rm=T),#
			Fruit_t = max(Fruit_t, na.rm=T),#
			FruitPres_t = max(FruitPres_t, na.rm=T),#
			CA_t = max(CA_t, na.rm=T),#
			ME_t = max(ME_t, na.rm=T),#
			DA_t = max(DA_t, na.rm=T),#
			CH_t = max(CH_t, na.rm=T),#
			Gerstaeckeria_t = max(Gerstaeckeria_t, na.rm=T),#
			Unknown_Moth_t = max(Unknown_Moth_t, na.rm=T),#
			Old_Moth_Evidence_t = max(Old_Moth_Evidence_t, na.rm=T),#
			Moth_Evidence_t = max(Moth_Evidence_t, na.rm=T),#
			Insect_Evidence_t = max(Insect_Evidence_t, na.rm=T),#
			DeadbyEndofYear = max(Dead, na.rm=T),#
			MissingbyEndofYear = max(Missing, na.rm=T),#
			DeadMissingbyEndofYear = sum(#
				c(DeadbyEndofYear, MissingbyEndofYear),#
				na.rm=T#
			)#
		) %>% #
		rowwise() %>%#
		mutate(#
			PrevFecundityYear = FecundityYear - 1,#
			Alive = abs(DeadMissingbyEndofYear - 1)#
		)
Plant_Surveys_by_Year %>% filter(PlantID=="9995")
Plant_Surveys_by_Year %>% filter(PlantID=="9995") %>% as.data.frame
Plant_Surveys_by_Plant %>% filter(FecundityYear==2015, PlantID==9995)
max(NA,NA)
max(NA,NA,na.rm=T)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%
warnings()
setwd('/Users/KSauby/Documents/Projects')
setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%
Plant_Surveys_by_Year %>% filter(PlantID=="9995") %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
C %>% filter(is.na(Parent.Size_t))
C %>% filter(Parent.Size_t==-Inf)
C %>% filter(Offspring.First_Size ==-Inf)
Plant_Surveys_by_Year %>% filter(Size_t ==-Inf)
head(Plant_Surveys_by_Year)
Plant_Surveys_by_Year %>% filter(CA_t ==-Inf)
Plant_Surveys %>% filter(PlantID==7185)
Plant_Surveys %>% filter(PlantID==7185) %>% arrange(Date)
Plant_Surveys %>% filter(PlantID==9637) %>% arrange(Date)
Plant_Surveys_by_Year %>% filter(PlantID==9637) %>% arrange(Date)
Plant_Surveys_by_Year %>% filter(PlantID==9637)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%
Plant_Surveys_by_Year %>% filter(is.na(FecundityYear)) %>% dim
Plant_Surveys_by_Year %>% filter(is.na(FecundityYear))
Plant_Surveys %>% filter(PlantID==7185)
Plant_Surveys %>% filter(PlantID==7185) %>% arrange(FecundityYear)
Plant_Surveys %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear)
Plant_Surveys %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlotPlantID, Date, DemographicSurvey, FecundityYear, Size_t)
Plant_Surveys %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlotPlantID, Date, DemographicSurvey, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
Plant_Surveys_by_Year %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlotPlantID, Date, DemographicSurvey, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
Plant_Surveys_by_Year %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlotPlantID, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
Plant_Surveys_by_Year %>% filter(PlantID==7185) %>% arrange(FecundityYear) %>% dplyr::select(PlantID, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
Plant_Surveys_by_Year %>% filter(PlantID==7185) %>% arrange(FecundityYear) %>% dplyr::select(PlantID, FecundityYear, Size_t, Old_Moth_Evidence_t , DeadbyEndofYear, MissingbyEndofYear)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Plant_Surveys_by_Year <- Plant_Surveys_by_Plant %>% #
		group_by(FecundityYear, PlantID) %>%#
		dplyr::summarise(#
			Species = Species[1],#
			Network = Network[1],#
			Island = Island[1],#
			RecruitmentMode 			= RecruitmentMode[1],#
			FruitPres_t 				= Maximum(FruitPres_t),#
			Fruit_Flowers_t 			= Maximum(Fruit_Flowers_t),#
			FruitFlowerPres_t 			= Maximum(FruitFlowerPres_t),#
			Size_t 						= Maximum(Size_t),#
			Height_t 					= Maximum(Height_t),#
			Fruit_t 					= Maximum(Fruit_t),#
			FruitPres_t 				= Maximum(FruitPres_t),#
			CA_t 						= Maximum(CA_t),#
			ME_t 						= Maximum(ME_t),#
			DA_t 						= Maximum(DA_t),#
			CH_t 						= Maximum(CH_t),#
			Gerstaeckeria_t 			= Maximum(Gerstaeckeria_t),#
			Unknown_Moth_t 				= Maximum(Unknown_Moth_t),#
			Old_Moth_Evidence_t 		= Maximum(Old_Moth_Evidence_t),#
			Moth_Evidence_t 			= Maximum(Moth_Evidence_t),#
			Insect_Evidence_t 			= Maximum(Insect_Evidence_t),#
			DeadbyEndofYear 			= Maximum(Dead),#
			MissingbyEndofYear 			= Maximum(Missing),#
			DeadMissingbyEndofYear = sum(#
				c(DeadbyEndofYear, MissingbyEndofYear),#
				na.rm=T#
			)#
		)
Plant_Surveys_by_Year %>% filter(PlantID==7185) %>% arrange(FecundityYear) %>% dplyr::select(PlantID, FecundityYear, Size_t, Old_Moth_Evidence_t , DeadbyEndofYear, MissingbyEndofYear)
Plant_Surveys_by_Plant %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlotPlantID, Date, DemographicSurvey, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
Plant_Surveys_by_Plant %>% filter(PlantID==7185) %>% arrange(DemographicSurvey , FecundityYear) %>% dplyr::select(PlantID, Date, DemographicSurvey, FecundityYear, Size_t, Old_Moth_Evidence_t , Dead, Missing)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
	# restrict to plants that span multiple plots#
	temp_A <- filter(Plant_Surveys, N.PlotPlantIDs > 1)#
	Z = list()
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L = filter(temp_A, PlantID==
7185)
L
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (max(L$Date) - min(L$Date) > date_window) {#
			L.list <- L %>%#
				split(#
				.,#
				# this is really slow for i=2#
				cut(#
					L$Date,#
					# it's doing sequence of seconds#
					seq(#
						min(L$Date), #
						max(L$Date) + date_window, #
						by = date_window#
					)#
				)#
			)#
			L.list %<>% .[sapply(., function(x) dim(x)[1]) > 0]#
			L.list %<>% lapply(., function(x) split(x, x$DemographicSurvey))#
			L.list %<>% unlist(recursive=F)#
			list.names <- gsub("\\..*","", names(L.list))#
			demography.surveys <- gsub("^.*\\.","", names(L.list))#
			Z[[i]] 	<- data.frame(#
				Date = list.names,#
				DemographicSurvey = demography.surveys#
			)#
		} else {#
			L.list <- list(L)#
			names(L.list) <- max(L.list[[1]]$Date)#
			Z[[i]] <- data.frame(Date = max(L.list[[1]]$Date))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
date_window=48
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (max(L$Date) - min(L$Date) > date_window) {#
			L.list <- L %>%#
				split(#
				.,#
				# this is really slow for i=2#
				cut(#
					L$Date,#
					# it's doing sequence of seconds#
					seq(#
						min(L$Date), #
						max(L$Date) + date_window, #
						by = date_window#
					)#
				)#
			)#
			L.list %<>% .[sapply(., function(x) dim(x)[1]) > 0]#
			L.list %<>% lapply(., function(x) split(x, x$DemographicSurvey))#
			L.list %<>% unlist(recursive=F)#
			list.names <- gsub("\\..*","", names(L.list))#
			demography.surveys <- gsub("^.*\\.","", names(L.list))#
			Z[[i]] 	<- data.frame(#
				Date = list.names,#
				DemographicSurvey = demography.surveys#
			)#
		} else {#
			L.list <- list(L)#
			names(L.list) <- max(L.list[[1]]$Date)#
			Z[[i]] <- data.frame(Date = max(L.list[[1]]$Date))#
		}
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
max(L$Date) - min(L$Date) > date_window
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L.list <- L %>%#
				split(#
				.,#
				# this is really slow for i=2#
				cut(#
					L$Date,#
					# it's doing sequence of seconds#
					seq(#
						min(L$Date), #
						max(L$Date) + date_window, #
						by = date_window#
					)#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
L.list %<>% .[sapply(., function(x) dim(x)[1]) > 0]#
			L.list %<>% lapply(., function(x) split(x, x$DemographicSurvey))#
			L.list %<>% unlist(recursive=F)#
			list.names <- gsub("\\..*","", names(L.list))#
			demography.surveys <- gsub("^.*\\.","", names(L.list))
L.list
i=1
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]] 	<- data.frame(#
				Date = list.names,#
				DemographicSurvey = demography.surveys#
			)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][, "PlantID"] 			<- L$PlantID[1]#
		Z[[i]][, "ClusterID"] 			<- L$ClusterID[1]#
		Z[[i]][, "Network"] 			<- L$Network[1]#
		Z[[i]][, "Island"] 				<- L$Island[1]#
		Z[[i]][, "Species"] 			<- L$Species[1]#
		Z[[i]][, "Easting"] 			<- L$Easting[1]#
		Z[[i]][, "Northing"] 			<- L$Northing[1]#
		Z[[i]][, "RecruitmentMode"]		<- L$RecruitmentMode %>%#
			.[which(. != "NA")] %>%#
			.[which(!is.na(.))] %>%#
			unique(.) %>%#
			paste(collapse="")
L
L.list
j=3
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K <- eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
K
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
if (length(unique(K$Date)) > 1) {#
				Z[[i]][j, "RangeofDates"] <- paste(#
					min(K$Date), #
					" - ", #
					max(K$Date),#
					sep=""#
				)#
				Z[[i]][j, "SizeofDateRange"] <- max(K$Date) - min(K$Date)#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			} else {#
				Z[[i]][j, "RangeofDates"] <- unique(K$Date)#
				Z[[i]][j, "SizeofDateRange"] <- 0#
				Z[[i]][j, "maxDate"] <- as.character(max(K$Date))#
			}#
			# pull all plant survey records for this date from plant surveys within the window of dates, excluding dead/missing#
			M <- K %>% filter(Dead != 1, Missing != 1)
M
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
temp <- M %>% filter(SizeFruitMeasured > 0) %>%#
				dplyr::add_count(PlotPlantID) %>%				#
				filter(n > 1)#
			if (dim(temp)[1] > 0) {#
				warning(paste(#
					"Multiple size records for PlotPlantID", #
					M$PlotPlantID[1], #
					"around date", #
					paste(M$Date, collapse=",")#
				))#
			}#
			# -------------------
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
N = Plant_Info %>%#
				filter( #
					PlantID==L$PlantID[1], #
					# only include plants that are listed as having been added to Plant_Info on or after Date#
					First.Survey.Date.Alive <= #
						as.Date(Z[[i]]$Date[j]) + date_window,#
					# exclude dead plants (including date plant was first recorded as dead)#
					FirstDeadMissingObservation > #
						as.Date(Z[[i]]$Date[j]) + date_window | #
						is.na(FirstDeadMissingObservation)==T#
				)
N
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
K %>% filter(Dead == 1 | Missing == 1)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
O <- K %>% filter(Dead == 1 | Missing == 1)#
			# the plant can only be marked dead if no live part was surveyed and no parts remained unsurveyed#
			if (dim(M)[1] == 0 & dim(N)[1] == 0 & dim(O)[1] > 0) {#
				Z[[i]][j, "Dead"] <- withCallingHandlers(#
					max(O$Dead, na.rm=T),#
					warning = h#
				)#
				Z[[i]][j, "Missing"] <- withCallingHandlers(#
					max(O$Missing, na.rm=T),#
					warning = h#
				)#
			} else
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][j, "Size_t"] 					<- mysum(M$Size_t)#
			Z[[i]][j, "Plant_Segments_w_leaves"] <- #
				mysum(M$Plant_Segments_w_leaves)#
			Z[[i]][j, "Plant_Segments_wo_leaves"] <-#
			 	mysum(M$Plant_Segments_wo_leaves)#
			Z[[i]][j, "Plant_Segments_woody"] <- mysum(M$Plant_Segments_woody)#
			# Size#
			Z[[i]][j, "Height_t"] 				<- withCallingHandlers(#
				max(M$Height_t, na.rm=T),#
				warning = h#
			)#
			Z[[i]][j, "Width_t"] 				<- withCallingHandlers(#
				max(M$Width_t, na.rm=T),#
				warning = h#
			)#
			Z[[i]][j, "Perpen_Width"] 			<- withCallingHandlers(#
				max(M$Perpen_Width, na.rm=T),#
				warning = h#
			)#
			# Fruit	and Flowers#
			Z[[i]][j, "Num_FlowerBuds"] 			<- mysum(M$Num_FlowerBuds)#
			Z[[i]][j, "Num_Fruit_red"] 				<- mysum(M$Num_Fruit_red)#
			Z[[i]][j, "Num_Fruit_green"] 			<- mysum(M$Num_Fruit_green)#
			Z[[i]][j, "Num_Flowers"] 				<- mysum(M$Num_Flowers)#
			Z[[i]][j, "Fruit_t"] 					<- mysum(M$Fruit_t)#
			Z[[i]][j, "Fruit_Flowers_t"] 			<- mysum(M$Fruit_Flowers_t)
Z[[i]]
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
eval(parse(text=paste(#
				"L.list$", #
				'"', #
				names(L.list)[j], #
				'"', #
				sep=""#
			)))
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]][j, "Num_FlowerBuds"] 			<- mysum(M$Num_FlowerBuds)#
			Z[[i]][j, "Num_Fruit_red"] 				<- mysum(M$Num_Fruit_red)#
			Z[[i]][j, "Num_Fruit_green"] 			<- mysum(M$Num_Fruit_green)#
			Z[[i]][j, "Num_Flowers"] 				<- mysum(M$Num_Flowers)#
			Z[[i]][j, "Fruit_t"] 					<- mysum(M$Fruit_t)#
			Z[[i]][j, "Fruit_Flowers_t"] 			<- mysum(M$Fruit_Flowers_t)#
			Z[[i]][j, "DemographicSurvey"] 			<- K$DemographicSurvey[1]#
			Z[[i]][j, "FecundityYear"] 				<- K$FecundityYear[1]#
			# Paste PlotPlantIDs together to know which plants were surveyed on this date
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
Z[[i]]
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant
Plant_Surveys_by_Plant %>% filter(PlantID==7185)
setwd('/Users/KSauby/Documents/Projects')
setwd("./GTMNERRproc")#
#setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Plant <- Plant_Surveys %>% #
	processSurveysMergedbyPlant
Plant_Surveys_by_Plant %>% filter(PlantID==7185)
Plant_Surveys_by_Plant %>% filter(is.na(FecundityYear))
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Surveys_by_Plant %>% filter(AllSurveyed==F) %>% write.csv("incompletesurveys.csv")#
#
Plant_Surveys %>% filter(N.PlotPlantIDs > 1) %>% filter(Dead==1 | Missing == 1) %>% write.csv("deadmissing.csv")#
#
h <- function(w) if( any( grepl( "no non-missing arguments to max", w) ) ) invokeRestart( "muffleWarning" )#
Plant_Surveys_by_Plant <- withCallingHandlers(#
	createPlantInsectPresence(Plant_Surveys_by_Plant),#
	warning = h#
)#
# create Fecundity and RGR dataset#
Plant_Surveys_by_Year <- createPlantSurveysbyYear(Plant_Surveys_by_Plant) %>%#
	renamePatches #%>%#
	#createMothOccupancytVariable %>%#
	#createMothOccupancyVariable %>%#
	#createDeadFactorVariable#
# Second Plant ID#
Plant_Surveys_by_Year %<>% mutate(#
	PlantIDb = paste(#
		Island,#
		PlantID,#
		sep=", "#
	),#
	PlantIDc = paste(#
		Island,#
		PlantID,#
		sep="\n"#
	)#
)
setwd('/Users/KSauby/Documents/Projects/GTMNERR_analysis/munge')
Plant_Info_Analysis <- createPlantInfobyPlant(Plant_Info, Plant_Surveys_by_Year)# %>%#
	# createMothOccupancyVariable#
Plant_Info_stricta <- Plant_Info_Analysis %>% filter(Species=="stricta")#
Plant_Info_pusilla <- Plant_Info_Analysis %>% filter(Species=="pusilla")#
write.csv(Plant_Info_Analysis, "../data/Plant_Info_Analysis.csv")#
write.csv(Plant_Info_stricta, "../data/Plant_Info_Analysis_stricta.csv")#
write.csv(Plant_Info_pusilla, "../data/Plant_Info_Analysis_pusilla.csv")#
# --------------------------------------------------------------------------- ##
# Survival#
# --------------------------------------------------------------------------- ##
#
# WHY ARE PLANTS RECORDED AS 0 DAYS ALIVE DURING SURVEYS OTHER THAN THE LAST SURVEY?#
temp <- Plant_Info_Analysis %>% #
	filter(#
		DaysAlive==0,#
		!(#
			month(First.Survey.Date.Alive) == 5 |#
			month(First.Survey.Date.Alive) == 6 |#
			month(First.Survey.Date.Alive) == 7 |#
			month(First.Survey.Date.Alive) == 8 & #
			year(First.Survey.Date.Alive) == 2015#
		)#
	)#
if (dim(temp)[1] > 0) {#
	write.csv(temp,"PlantsAlive0Days.csv")#
	warning(paste(#
		"Plants that first recruited before the last survey are marked as alive 0 days. Records written to csv."#
	))#
}	#
#
Plant_Info_Survival <- Plant_Info_Analysis %>% #
	filter(DaysAlive!=0) %>%#
	dplyr::select(-c(First_Size, Parent)) %>% #
	.[complete.cases(.),] %>%#
	renameSpecies#
Plant_Info_Survival %<>%#
	mutate(#
		HabitatType = NA,#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island=="Roadway1" |#
				Island=="Roadway2"#
			),#
			"Barrier Island Habitat"#
		),#
		HabitatType = replace(#
			HabitatType,#
			which(#
				Island!="Roadway1" &#
				Island!="Roadway2"#
			),#
			"Intracoastal Waterway Island"#
		)#
	)#
# Plant_Info_Survival %<>% #
	#renamePatches %>%#
	#createDeadFactorVariable#
Plant_Info_Survival_stricta <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia stricta") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
Plant_Info_Survival_pusilla <- Plant_Info_Survival %>% #
	filter(Species=="Opuntia pusilla") # %>% 	dplyr::select(-c(MothOccupancy, IslandFullNames, DeadFactor))#
write.csv(Plant_Info_Survival_stricta, "../data/Plant_Info_Survival_stricta.csv")#
write.csv(Plant_Info_Survival_pusilla, "../data/Plant_Info_Survival_pusilla.csv")
Plant_Surveys_by_Year %>% filter(is.na(FecundityYear)) %>% dim
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
A <- Plant_Surveys_by_Year %>% #
		dplyr::select(#
			PlantID, #
			FecundityYear, #
			SurveyDate_SpringSummer, #
			Size_t#
		) %>% #
		setnames("SurveyDate_SpringSummer", "Parent.Obs.Date") %>%#
		setnames("Size_t", "Parent.Size_t") %>%#
		setnames("FecundityYear", "Parent.FecundityYear") %>%#
		setnames("PlantID", "Parent.ID")#
	# OFFSPRING SURVEY DATA#
	# use this dataset to figure out first size of offspring#
	B <- Plant_Surveys_by_Plant %>% #
		dplyr::select(PlantID, Date, Size_t) %>% #
		setnames("Date", "Offspring.Obs.Date") %>%#
		setnames("Size_t", "Offspring.Size_t") %>%#
		setnames("PlantID", "Offspring.ID")#
	# merge parent data (from A) with offspring info (from Plant_Info_Analysis)#
	C <- Plant_Info_Analysis #
	C %<>%#
		mutate(Parent = substr(x=Parent,start=1,stop=4)) %>%#
		setnames("PlantID", "Offspring.ID") %>%#
		setnames("Parent", "Parent.ID") %>%#
		setnames("First_Size", "Offspring.First_Size") %>%#
		setnames(#
			"First.Survey.Date.Alive", #
			"Offspring.First.Survey.Date.Alive"#
		) %>%#
		dplyr::select(#
			Parent.ID, #
			Offspring.ID, #
			Offspring.First_Size,#
			Offspring.First.Survey.Date.Alive,#
			minFecundityYear#
		) %>%#
		merge(#
			A, #
			by.x = c("Parent.ID", "minFecundityYear"),#
			by.y  = c("Parent.ID", "Parent.FecundityYear"),#
			all=T#
		) %>%#
		# remove plants that had no offspring#
		filter(!is.na(Offspring.ID)) %>%#
		# remove plants without identified parents#
		filter(!is.na(Parent.ID))
C %>% filter(is.na(Parent.Size_t))
C %>% filter(is.na(Offspring.Size_t)) %>% dim
C %>% filter(is.na(Offspring.First_Size)) %>% dim
C %>% filter(is.na(Offspring.First_Size))
C %>% filter(PlantID==7185)
C %>% filter(Offspring.ID ==7185)
C %>% filter(Parent.ID ==7185)
C %>% filter(Offspring.ID ==9637)
Plant_Surveys_by_Plant %>% filter(PlantID== 8650)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(PlantID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
PlantIDwoSize <- C %>% #
			filter(is.na(Offspring.First_Size)) %$% #
			unique(Offspring.ID)#
		Plant_Surveys_by_Plant %>%#
		filter(#
			PlantID %in% PlantIDwoSize,#
			!(is.na(Size_t))#
		)
Plant_Surveys_by_Year %>% filter(PlantID==8747)
Plant_Surveys_by_Plant %>% filter(PlantID==8747)
setwd('/Users/KSauby/Documents/Projects')
setwd("./dataproc")#
#setwd("./modresproc")#
#setwd("./unmarked")#
#setwd("./RPresence")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/GTMNERRproc/R')
First_Size <- Plant_Surveys_by_Plant %>%#
		arrange(Date) %>%#
		group_by(PlantID) %>%#
		summarise(#
			First.Date = Minimum(Date),#
			minFecundityYear = Minimum(FecundityYear),#
			First_Size = !(is.na(Size_t))[1],#
			min.Size = Minimum(Size_t),#
			max.Size = Maximum(Size_t)#
		)
